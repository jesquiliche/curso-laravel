"use strict";(self.webpackChunkeloquent=self.webpackChunkeloquent||[]).push([[2331],{3905:(e,a,r)=>{r.d(a,{Zo:()=>u,kt:()=>f});var n=r(7294);function i(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function t(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?t(Object(r),!0).forEach((function(a){i(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function o(e,a){if(null==e)return{};var r,n,i=function(e,a){if(null==e)return{};var r,n,i={},t=Object.keys(e);for(n=0;n<t.length;n++)r=t[n],a.indexOf(r)>=0||(i[r]=e[r]);return i}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(n=0;n<t.length;n++)r=t[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),d=function(e){var a=n.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},u=function(e){var a=d(e.components);return n.createElement(s.Provider,{value:a},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var r=e.components,i=e.mdxType,t=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=d(r),m=i,f=p["".concat(s,".").concat(m)]||p[m]||c[m]||t;return r?n.createElement(f,l(l({ref:a},u),{},{components:r})):n.createElement(f,l({ref:a},u))}));function f(e,a){var r=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var t=r.length,l=new Array(t);l[0]=m;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o[p]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<t;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3121:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var n=r(7462),i=(r(7294),r(3905));const t={sidebar_position:40},l="Filtros y middleware",o={unversionedId:"tutorial-basics/Rutas/filtros",id:"tutorial-basics/Rutas/filtros",title:"Filtros y middleware",description:"\xbfQu\xe9 son y para que sirven?",source:"@site/docs/tutorial-basics/Rutas/filtros.md",sourceDirName:"tutorial-basics/Rutas",slug:"/tutorial-basics/Rutas/filtros",permalink:"/curso-laravel/docs/tutorial-basics/Rutas/filtros",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/Rutas/filtros.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"Controladores",permalink:"/curso-laravel/docs/tutorial-basics/Rutas/controladores"},next:{title:"Puesta en practica",permalink:"/curso-laravel/docs/tutorial-basics/Rutas/practicas_ruta"}},s={},d=[{value:"\xbfQu\xe9 son y para que sirven?",id:"qu\xe9-son-y-para-que-sirven",level:2},{value:"\xbfC\xf3mo se crean?",id:"c\xf3mo-se-crean",level:2},{value:"\xbfC\xf3mo se aplican?",id:"c\xf3mo-se-aplican",level:3}],u={toc:d},p="wrapper";function c(e){let{components:a,...r}=e;return(0,i.kt)(p,(0,n.Z)({},u,r,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"filtros-y-middleware"},"Filtros y middleware"),(0,i.kt)("h2",{id:"qu\xe9-son-y-para-que-sirven"},"\xbfQu\xe9 son y para que sirven?"),(0,i.kt)("p",null,"En Laravel, los filtros (filters) y middleware son herramientas que se utilizan para procesar las solicitudes HTTP y las respuestas de una aplicaci\xf3n. Estas herramientas permiten agregar l\xf3gica personalizada a las solicitudes antes de que sean manejadas por la aplicaci\xf3n y despu\xe9s de que se env\xeden las respuestas. "),(0,i.kt)("p",null,"Los filtros se utilizan para procesar las solicitudes HTTP antes de que se manejen en una ruta espec\xedfica o en un grupo de rutas. Los filtros se definen en el archivo app/Http/filters.php y se pueden asignar a una ruta o grupo de rutas utilizando el m\xe9todo Route::filter(). Por ejemplo, se puede definir un filtro para verificar si el usuario est\xe1 autenticado antes de permitir el acceso a una ruta espec\xedfica."),(0,i.kt)("p",null,"Por otro lado, los middleware se utilizan para procesar tanto las solicitudes como las respuestas HTTP y se pueden aplicar a una ruta o grupo de rutas. Los middleware son similares a los filtros, pero ofrecen una mayor flexibilidad ya que se pueden asignar a diferentes etapas del ciclo de solicitud-respuesta. Adem\xe1s, los middleware se pueden definir en el archivo app/Http/Kernel.php y se pueden asignar a una ruta o grupo de rutas utilizando el m\xe9todo Route::middleware(). "),(0,i.kt)("p",null,"En resumen, tanto los filtros como los middleware son herramientas importantes para agregar l\xf3gica personalizada a las solicitudes y respuestas en una aplicaci\xf3n Laravel, y se utilizan para procesar y modificar datos antes de que sean manejados por la aplicaci\xf3n."),(0,i.kt)("h2",{id:"c\xf3mo-se-crean"},"\xbfC\xf3mo se crean?"),(0,i.kt)("p",null,"En Laravel, se pueden crear filtros y middleware para aplicar l\xf3gica de la aplicaci\xf3n a las solicitudes HTTP. Los filtros y middleware se utilizan para agregar capas adicionales de funcionalidad a una aplicaci\xf3n, como autenticaci\xf3n, validaci\xf3n y autorizaci\xf3n."),(0,i.kt)("p",null,"Para crear un filtro, se puede utilizar el comando ",(0,i.kt)("inlineCode",{parentName:"p"},"php artisan make:middleware")," para generar una clase de middleware. Esta clase contendr\xe1 un m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"handle")," que se ejecutar\xe1 en cada solicitud que pase a trav\xe9s del middleware. Dentro del m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"handle"),", se puede agregar la l\xf3gica necesaria para filtrar o modificar la solicitud. Por ejemplo, se puede verificar si el usuario est\xe1 autenticado antes de permitir que la solicitud se procese m\xe1s."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"namespace App\\Http\\Middleware;\n\nuse Closure;\n\nclass VerificarAutenticacion\n{\n    public function handle($request, Closure $next)\n    {\n        if (auth()->check()) {\n            return $next($request);\n        }\n\n        return redirect('/login');\n    }\n}\n")),(0,i.kt)("p",null,"Para aplicar el middleware a una ruta, se puede utilizar el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"middleware")," en la definici\xf3n de la ruta. Por ejemplo, para aplicar el middleware de autenticaci\xf3n creado anteriormente a una ruta que muestra los anuncios, se puede hacer lo siguiente:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"Route::get('/anuncios', [AnuncioController::class, 'index'])->middleware('auth');\n")),(0,i.kt)("p",null,"Adem\xe1s de los filtros y middleware predefinidos, Laravel tambi\xe9n permite crear filtros y middleware personalizados\nque se pueden utilizar en la aplicaci\xf3n.\nLos filtros y middleware personalizados se pueden agregar al archivo\n",(0,i.kt)("inlineCode",{parentName:"p"},"App\\Http\\Kernel.php"),", que es el archivo principal de\nconfiguraci\xf3n de middleware de la aplicaci\xf3n. Para agregar un\nfiltro o middleware personalizado, se debe agregar su\nnombre a la matriz de middleware en el archivo ",(0,i.kt)("inlineCode",{parentName:"p"},"kernel.php"),".\nLuego, se puede usar el nombre del filtro o middleware al definir rutas o\nal aplicar el middleware a grupos de rutas."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Este middleware esta puesto a modo de ejemplo y no es necesaria su implementaci\xf3n\nya que existe un middleware 'auth' que ya viene definido por defecto y el cual\nveremos en cap\xedtulos posteriores.")),(0,i.kt)("h3",{id:"c\xf3mo-se-aplican"},"\xbfC\xf3mo se aplican?"),(0,i.kt)("p",null,"En Laravel, se pueden aplicar filtros y middleware a las rutas utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"middleware")," en la definici\xf3n de la ruta. El m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"middleware")," acepta uno o varios nombres de filtros o middleware que se aplicar\xe1n a la ruta."),(0,i.kt)("p",null,"Por ejemplo, para aplicar el middleware ",(0,i.kt)("inlineCode",{parentName:"p"},"VerificarAutenticacion")," definido anteriormente a una ruta que muestra los anuncios, se puede hacer lo siguiente:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use App\\Http\\Middleware\\VerificarAutenticacion;\n\nRoute::get('/anuncios', 'AnuncioController@index')->middleware(VerificarAutenticacion::class);\n")),(0,i.kt)("p",null,"Tambi\xe9n es posible aplicar varios middleware a una ruta en una sola llamada al m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"middleware"),". Por ejemplo, para aplicar tanto el middleware de autenticaci\xf3n predefinido de Laravel como el middleware ",(0,i.kt)("inlineCode",{parentName:"p"},"VerificarAutenticacion")," a la ruta de los anuncios, se puede hacer lo siguiente:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use App\\Http\\Middleware\\VerificarAutenticacion;\n\nRoute::get('/anuncios', 'AnuncioController@index')->middleware('auth', VerificarAutenticacion::class);\n")),(0,i.kt)("p",null,"Tambi\xe9n se puede aplicar middleware a un grupo de rutas utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"middleware")," en la definici\xf3n del grupo de rutas. Por ejemplo, para aplicar el middleware ",(0,i.kt)("inlineCode",{parentName:"p"},"VerificarAutenticacion")," a todas las rutas que comienzan con ",(0,i.kt)("inlineCode",{parentName:"p"},"/admin"),", se puede hacer lo siguiente:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use App\\Http\\Middleware\\VerificarAutenticacion;\n\nRoute::middleware([VerificarAutenticacion::class])->prefix('admin')->group(function () {\n    // Definici\xf3n de rutas para la secci\xf3n de administraci\xf3n\n});\n")),(0,i.kt)("p",null,"En este ejemplo, todas las rutas definidas dentro del grupo de rutas que comienzan con ",(0,i.kt)("inlineCode",{parentName:"p"},"/admin")," tendr\xe1n el middleware ",(0,i.kt)("inlineCode",{parentName:"p"},"VerificarAutenticacion")," aplicado."))}c.isMDXComponent=!0}}]);