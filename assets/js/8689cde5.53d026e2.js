"use strict";(self.webpackChunkeloquent=self.webpackChunkeloquent||[]).push([[7482],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>g});var t=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=t.createContext({}),d=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},c=function(e){var a=d(e.components);return t.createElement(s.Provider,{value:a},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),u=i,g=p["".concat(s,".").concat(u)]||p[u]||m[u]||r;return n?t.createElement(g,o(o({ref:a},c),{},{components:n})):t.createElement(g,o({ref:a},c))}));function g(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var d=2;d<r;d++)o[d]=n[d];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4529:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var t=n(7462),i=(n(7294),n(3905));const r={sidebar_position:5},o="Vistas de administraci\xf3n",l={unversionedId:"tutorial-basics/dashbord/vistas",id:"tutorial-basics/dashbord/vistas",title:"Vistas de administraci\xf3n",description:"Introducci\xf3n",source:"@site/docs/tutorial-basics/dashbord/vistas.md",sourceDirName:"tutorial-basics/dashbord",slug:"/tutorial-basics/dashbord/vistas",permalink:"/curso-laravel/docs/tutorial-basics/dashbord/vistas",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/dashbord/vistas.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Personalizaci\xf3n de Admin LTE 3",permalink:"/curso-laravel/docs/tutorial-basics/dashbord/personalizacion"}},s={},d=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Categor\xedas",id:"categor\xedas",level:2},{value:"Creaci\xf3n del controlador",id:"creaci\xf3n-del-controlador",level:3},{value:"Creaci\xf3n de la vista",id:"creaci\xf3n-de-la-vista",level:3},{value:"Agregar categor\xedas",id:"agregar-categor\xedas",level:3},{value:"Editar categor\xeda",id:"editar-categor\xeda",level:3},{value:"Creaci\xf3n de la vista",id:"creaci\xf3n-de-la-vista-1",level:4},{value:"Borrado de categor\xeda",id:"borrado-de-categor\xeda",level:3}],c={toc:d},p="wrapper";function m(e){let{components:a,...r}=e;return(0,i.kt)(p,(0,t.Z)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"vistas-de-administraci\xf3n"},"Vistas de administraci\xf3n"),(0,i.kt)("h2",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,i.kt)("p",null,"En esta secci\xf3n veremos c\xf3mo implementar las vistas, controladores y rutas para mantener nuestras ",(0,i.kt)("strong",{parentName:"p"},"categor\xedas, subcategor\xedas y usuarios"),". Al final del cap\xedtulo, tambi\xe9n estudiaremos c\xf3mo crear un sistema de roles y permisos para nuestros ",(0,i.kt)("strong",{parentName:"p"},"usuarios"),"."),(0,i.kt)("h2",{id:"categor\xedas"},"Categor\xedas"),(0,i.kt)("p",null,"A continuaci\xf3n, vamos a crear la vista, controlador y ruta necesarios para implementar nuestro mantenimiento de ",(0,i.kt)("strong",{parentName:"p"},"categor\xedas"),"."),(0,i.kt)("h3",{id:"creaci\xf3n-del-controlador"},"Creaci\xf3n del controlador"),(0,i.kt)("p",null,"Todos los controladores para la administraci\xf3n los crearemos en una carpeta llamada ",(0,i.kt)("strong",{parentName:"p"},"Admin")," dentro de la carpeta ",(0,i.kt)("strong",{parentName:"p"},"app\\Http\\Controllers")," para mantener cierto orden y control. De esta manera, separaremos los controladores del ",(0,i.kt)("strong",{parentName:"p"},"Frontend")," de los controladores del panel de administraci\xf3n."),(0,i.kt)("p",null,"Para crear el controlador, teclee el siguiente comando:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan make:controller Admin\\CategoriaController\n")),(0,i.kt)("p",null,"Una vez creado el controlador, dir\xedjase a \xe9l e introduzca el siguiente c\xf3digo:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"public function index()\n{\n    $categorias = Categoria::paginate(4);\n\n    return view('admin.categorias.index', compact('categorias'));\n}\n")),(0,i.kt)("p",null,"El m\xe9todo ",(0,i.kt)("strong",{parentName:"p"},"paginate")," indica a Eloquent que devuelva el resultado en p\xe1ginas de 4 categor\xedas por p\xe1gina. Volveremos a este tema en la implementaci\xf3n de la vista."),(0,i.kt)("h3",{id:"creaci\xf3n-de-la-vista"},"Creaci\xf3n de la vista"),(0,i.kt)("p",null,"Todas las vistas asociadas con nuestro ",(0,i.kt)("strong",{parentName:"p"},"panel de administraci\xf3n")," estar\xe1n contenidas en una carpeta denominada ",(0,i.kt)("strong",{parentName:"p"},"admin")," dentro de la carpeta ",(0,i.kt)("strong",{parentName:"p"},"resources\\views"),". En el caso de las categor\xedas, incluiremos todas las vistas asociadas en ",(0,i.kt)("strong",{parentName:"p"},"resources\\views\\admin\\categorias"),"."),(0,i.kt)("p",null,"Empecemos por la vista ",(0,i.kt)("strong",{parentName:"p"},"index.blade.php"),". Esta vista nos mostrar\xe1 un listado paginado con todas las categor\xedas disponibles."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},'@extends(\'adminlte::page\')\n\n@section(\'title\', \'Categor\xedas\')\n\n@section(\'content_header\')\n    <h1>Lista de Categor\xedas</h1>\n@stop\n\n@section(\'content\')\n    {{-- Comprobaci\xf3n de sesi\xf3n --}}\n    @if (session(\'success\'))\n        <div class="alert alert-success alert-dismissible fade show" role="alert">\n            {{ session(\'success\') }}\n            <button type="button" class="close" data-dismiss="alert" aria-label="Cerrar">\n                <span aria-hidden="true">&times;</span>\n            </button>\n        </div>\n    @endif\n\n    <div class="card col-lg-12 col-md-4">\n        <div class="card-header mb-4">\n            <table>\n                <td>\n                    <a href="{{ route(\'admin.categoria.create\') }}" class="btn btn-primary btn-sm">\n                        Agregar categor\xeda\n                    </a>\n                </td>\n                \x3c!-- El bot\xf3n "Agregar categor\xeda" redirige a la ruta "admin.categoria.create" --\x3e\n            </table>\n        </div>\n        <div class="card-body mt-2">\n            <table class="table">\n                <thead>\n                    <tr>\n                        <th scope="col">#</th>\n                        <th scope="col">Nombre</th>\n                        <th scope="col">Descripci\xf3n</th>\n                        <th scope="col">Imagen</th>\n                        <\n\nth scope="col" colspan="2">Acci\xf3n</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {{-- Iteraci\xf3n a trav\xe9s de las categor\xedas --}}\n                    @foreach ($categorias as $categoria)\n                        <tr>\n                            <th scope="row">{{ $categoria->id }}</th>\n                            <td><b>{{ $categoria->nombre }}</b></td>\n                            <td>{{ strip_tags($categoria->descripcion) }}</td>\n                            <td><img src="{{ $categoria->imagen }}" width="125px"></td>\n                            {{-- Bot\xf3n de edici\xf3n --}}\n                            <td width="10px">\n                                <a href="{{ route(\'admin.categoria.edit\', [\'id\' => $categoria->id]) }}" class="btn btn-primary btn-sm">Editar</a>\n                            </td>\n                            {{-- Bot\xf3n de borrado --}}\n                            <td width="10px">\n                                <form action="{{ route(\'admin.categoria.delete\', [\'id\' => $categoria->id]) }}" method="POST">\n                                    @csrf\n                                    @method(\'DELETE\')\n                                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm(\'Si borra esta categor\xeda, borrar\xe1 todas las subcategor\xedas y anuncios asociados.\\n\xbfEst\xe1s seguro de que deseas eliminar esta categor\xeda?\')">Eliminar</button>\n                                </form>\n                            </td>\n                        </tr>\n                    @endforeach\n                </tbody>\n            </table>\n        </div>\n    </div>\n    {{ $categorias->links(\'pagination::bootstrap-4\') }}\n@stop\n')),(0,i.kt)("admonition",{title:"\xbfQu\xe9 hace?",type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@extends('adminlte::page')"),": Esta l\xednea indica que la vista extiende el layout proporcionado por AdminLTE, lo cual significa que heredar\xe1 estilos y funcionalidades predefinidas del tema.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@section('title', 'Categor\xedas')"),': Aqu\xed se define el t\xedtulo de la p\xe1gina, que en este caso ser\xe1 "Categor\xedas".')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@section('content_header')"),': Esta secci\xf3n define el contenido que se mostrar\xe1 en el encabezado de la p\xe1gina. En este caso, se muestra el t\xedtulo "Lista de Categor\xedas".')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@section('content')"),": Aqu\xed comienza la secci\xf3n principal de contenido de la p\xe1gina. A partir de este punto, se empieza a definir el contenido que se mostrar\xe1 en el cuerpo de la p\xe1gina.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@if (session('success'))"),": En esta l\xednea se comprueba si hay un mensaje de \xe9xito almacenado en la sesi\xf3n. Si existe, se muestra un cuadro de alerta con el mensaje.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Luego se crea una tarjeta (",(0,i.kt)("inlineCode",{parentName:"p"},'<div class="card">'),") que contiene una tabla con las categor\xedas. En esta tabla se muestra informaci\xf3n como el id, nombre, descripci\xf3n e imagen de cada categor\xeda.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Dentro de la iteraci\xf3n ",(0,i.kt)("inlineCode",{parentName:"p"},"@foreach ($categorias as $categoria)")," se muestran los datos de cada categor\xeda en filas de la tabla. Tambi\xe9n se incluyen botones de edici\xf3n y eliminaci\xf3n para cada categor\xeda.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Al final de la vista, se muestra la paginaci\xf3n utilizando el componente de paginaci\xf3n de Bootstrap 4 (",(0,i.kt)("inlineCode",{parentName:"p"},"{{ $categorias->links('pagination::bootstrap-4') }}"),")."))),(0,i.kt)("p",{parentName:"admonition"},"En resumen, esta vista muestra una lista de categor\xedas con la posibilidad de agregar, editar y eliminar categor\xedas. Utiliza el dise\xf1o y los estilos proporcionados por AdminLTE para lograr una apariencia agradable y coherente.")),(0,i.kt)("p",null,'Si despu\xe9s de implementar el c\xf3digo y especificar la ruta desea probar la vista, sustituya las rutas especificadas por el s\xedmbolo "#" para evitar errores. Una vez probado, le recomendamos volver a las rutas originales.'),(0,i.kt)("p",null,"A continuaci\xf3n, vamos a definir la ruta asociada a la vista. Dir\xedjase al archivo de rutas ",(0,i.kt)("strong",{parentName:"p"},"routes\\admin.php")," y escriba el siguiente c\xf3digo:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use App\\Http\\Controllers\\Admin\\CategoriaController;\n\nRoute::get('/categorias', [CategoriaController::class, 'index'])->name('admin.categoria.index');\n")),(0,i.kt)("p",null,"No olvide incluir la referencia al controlador ",(0,i.kt)("strong",{parentName:"p"},"CategoriaController")," al principio del archivo:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Admin\\HomeController;\nuse App\\Http\\Controllers\\Admin\\CategoriaController;\nuse App\\Http\\Controllers\\Admin\\SubCategoriaController;\nuse App\\Http\\Controllers\\Admin\\UserController;\n")),(0,i.kt)("p",null,"Ahora si desde la barra de direcciones tecla la siguiente direcci\xf3n ",(0,i.kt)("inlineCode",{parentName:"p"},"'http://localhost:8000/admin/categorias'"),", obtendr\xe1 la siguiente vista."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Vista categorias",src:n(5049).Z,width:"1366",height:"860"})),(0,i.kt)("p",null,"Como esta forma de acceder a la vista no es de lo m\xe1s c\xf3modo para el usuario, vamos a modificar el ",(0,i.kt)("strong",{parentName:"p"},"sidebar")," de nuestro ",(0,i.kt)("strong",{parentName:"p"},"panel de administraci\xf3n"),". Para ello editaremos el archivo ",(0,i.kt)("strong",{parentName:"p"},"config\\adminlte.php"),", busque la siguiente secci\xf3n y  modifiquela."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"['header' => 'ADMINISTRACI\xd3N'],\n[\n    'text' => 'Categor\xedas',\n    'route'  => 'admin.categoria.index',\n    'icon' => 'fas fa-fw fa-layer-group',\n],\n")),(0,i.kt)("h3",{id:"agregar-categor\xedas"},"Agregar categor\xedas"),(0,i.kt)("p",null,"En este apartado vamos a ver como habilitar el bot\xf3n de ",(0,i.kt)("strong",{parentName:"p"},"Agregar")," de nuestra vista index. Para ello deberemos crear un nuevo m\xe9todo en nuestro controlador ",(0,i.kt)("strong",{parentName:"p"},"CategoriaController"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"public function create()\n    {\n        return view('admin.categorias.create');\n    }\n")),(0,i.kt)("p",null,"Como puede observar el c\xf3digo del m\xe9todo ",(0,i.kt)("strong",{parentName:"p"},"create")," es bastante simplemente, llamamos a la vista ",(0,i.kt)("inlineCode",{parentName:"p"},"admin.categorias.create"),". Dir\xedjase la carpeta ",(0,i.kt)("inlineCode",{parentName:"p"},"resources\\views\\admin\\categorias")," y cree el archivo ",(0,i.kt)("inlineCode",{parentName:"p"},"create.blade.php"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"@extends('adminlte::page')\n\n@section('title', 'Agregar Categor\xeda')\n\n@section('content_header')\n    <h1>Agregar Categor\xeda</h1>\n@stop\n\n@section('content')\n    <div class=\"container\">\n        <div class=\"card col-lg-12 p-4\">\n            {!! Form::open(['route' => 'admin.categoria.store', 'files' => true, 'method' => 'POST']) !!}\n\n            <div class=\"form-group\">\n                {!! Form::label('nombre', 'Nombre:') !!}\n                {!! Form::text('nombre', null, ['class' => 'form-control'.($errors->has('nombre') ? ' is-invalid' : ''), 'required']) !!}\n                @if ($errors->has('nombre'))\n                    <div class=\"invalid-feedback\">\n                        {{ $errors->first('nombre') }}\n                    </div>\n                @endif\n            </div>\n\n            <div class=\"form-group\">\n                {!! Form::label('descripcion', 'Descripci\xf3n:') !!}\n                {!! Form::textarea('descripcion', null, ['class' => 'form-control'.($errors->has('descripcion') ? ' is-invalid' : ''), 'required']) !!}\n                @if ($errors->has('descripcion'))\n                    <div class=\"invalid-feedback\">\n                        {{ $errors->first('descripcion') }}\n                    </div>\n                @endif\n            </div>\n\n            <div class=\"form-group\">\n                {!! Form::label('imagen', 'Imagen:') !!}\n                {!! Form::file('imagen', ['class' => 'form-control-file'.($errors->has('imagen') ? ' is-invalid' : ''), 'accept' => 'image/*', 'onchange' => 'previewImage(event)']) !!}\n                @if ($errors->has('imagen'))\n                    <div class=\"invalid-feedback\">\n                        {{ $errors->first('imagen') }}\n                    </div>\n                @endif\n                <img id=\"preview\" src=\"#\" alt=\"Preview de la imagen\" style=\"display: none; max-width: 200px; margin-top: 10px;\">\n            </div>\n\n            {!! Form::submit('Agregar', ['class' => 'btn btn-primary']) !!}\n\n            {!! Form::close() !!}\n        </div>\n    </div>\n\n    <script>\n        function previewImage(event) {\n            var input = event.target;\n            var preview = document.getElementById('preview');\n\n            if (input.files && input.files[0]) {\n                var reader = new FileReader();\n\n                reader.onload = function (e) {\n                    preview.src = e.target.result;\n                    preview.style.display = 'block';\n                }\n\n                reader.readAsDataURL(input.files[0]);\n            }\n        }\n    <\/script>\n@stop\n@extends('adminlte::page')\n\n@section('title', 'Agregar Categor\xeda')\n\n@section('content_header')\n    <h1>Agregar Categor\xeda</h1>\n@stop\n")),(0,i.kt)("admonition",{title:"\xbfQu\xe9 hace?",type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@extends('adminlte::page')"),": Esta l\xednea indica que la vista extiende el layout proporcionado por AdminLTE, lo cual significa que heredar\xe1 estilos y funcionalidades predefinidas del tema.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@section('title', 'Agregar Categor\xeda')"),': Aqu\xed se define el t\xedtulo de la p\xe1gina, que en este caso ser\xe1 "Agregar Categor\xeda".')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@section('content_header')"),': Esta secci\xf3n define el contenido que se mostrar\xe1 en el encabezado de la p\xe1gina. En este caso, se muestra el t\xedtulo "Agregar Categor\xeda".')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@section('content')"),": Aqu\xed comienza la secci\xf3n principal de contenido de la p\xe1gina. A partir de este punto, se empieza a definir el contenido que se mostrar\xe1 en el cuerpo de la p\xe1gina.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Dentro del ",(0,i.kt)("inlineCode",{parentName:"p"},"div"),' con clase "container" se crea una tarjeta (',(0,i.kt)("inlineCode",{parentName:"p"},'<div class="card">'),") que contendr\xe1 un formulario para agregar una categor\xeda.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"El formulario se crea utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"Form::open"),", que especifica la ruta de destino del formulario, los atributos ",(0,i.kt)("inlineCode",{parentName:"p"},"files")," y ",(0,i.kt)("inlineCode",{parentName:"p"},"method"),", que permiten el env\xedo de archivos y el m\xe9todo HTTP POST respectivamente.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Dentro del formulario, hay tres campos de entrada: nombre, descripci\xf3n e imagen. Cada campo se crea utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"Form::text")," o ",(0,i.kt)("inlineCode",{parentName:"p"},"Form::textarea"),", y se le asignan atributos como clase y validaci\xf3n de errores. Si hay errores de validaci\xf3n, se muestra un mensaje de error debajo del campo correspondiente.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"El campo de imagen utiliza el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"Form::file")," y tiene un evento ",(0,i.kt)("inlineCode",{parentName:"p"},"onchange")," que llama a la funci\xf3n ",(0,i.kt)("inlineCode",{parentName:"p"},"previewImage")," para mostrar una vista previa de la imagen seleccionada. La vista previa se muestra en un elemento ",(0,i.kt)("inlineCode",{parentName:"p"},"img"),' con id "preview".')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'El bot\xf3n "Agregar" se crea utilizando el m\xe9todo ',(0,i.kt)("inlineCode",{parentName:"p"},"Form::submit"),' y tiene la clase "btn btn-primary".')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Al final de la vista, se encuentra un script JavaScript que define la funci\xf3n ",(0,i.kt)("inlineCode",{parentName:"p"},"previewImage"),". Esta funci\xf3n lee el archivo de imagen seleccionado por el usuario y muestra una vista previa de la imagen en el elemento ",(0,i.kt)("inlineCode",{parentName:"p"},"img"),' con id "preview".'))),(0,i.kt)("p",{parentName:"admonition"},"En definitiva, esta vista muestra un formulario para agregar una categor\xeda, que incluye campos para el nombre, descripci\xf3n e imagen de la categor\xeda. Tambi\xe9n permite la visualizaci\xf3n de una vista previa de la imagen seleccionada antes de enviar el formulario.")),(0,i.kt)("p",null,"A continuaci\xf3n, dentro de la vista ",(0,i.kt)("strong",{parentName:"p"},"index.blade.php")," se encuentra el siguiente c\xf3digo:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},'<td>\n    <a href="{{ route(\'admin.categoria.create\') }}" class="btn btn-primary btn-sm">\n        Agregar categor\xeda\n    </a>\n</td>\n')),(0,i.kt)("p",null,"Este enlace redirige a la ruta asociada a la vista ",(0,i.kt)("strong",{parentName:"p"},"admin.categoria.create"),". El c\xf3digo crea un enlace dentro de una celda de una tabla. Al hacer clic en el enlace, el usuario ser\xe1 redirigido a la ruta definida en ",(0,i.kt)("inlineCode",{parentName:"p"},"route('admin.categoria.create')"),", que se ha configurado para estar asociada a la vista ",(0,i.kt)("inlineCode",{parentName:"p"},"admin.categoria.create"),"."),(0,i.kt)("p",null,"Ahora si se dirige al listado de categor\xedas y hace click sobre el bot\xf3n agregar se le deber\xeda mostrar la siguiente vista."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Agregar categoria",src:n(1103).Z,width:"1366",height:"690"})),(0,i.kt)("h3",{id:"editar-categor\xeda"},"Editar categor\xeda"),(0,i.kt)("p",null,"A continuaci\xf3n, vamos a estudiar c\xf3mo implementar la vista. Empecemos por el controlador. Dir\xedjase al archivo ",(0,i.kt)("strong",{parentName:"p"},"app\\Http\\Controllers\\Admin\\CategoriaController.php")," e introduzca el siguiente c\xf3digo:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"public function edit($id)\n{\n    // Buscar la categor\xeda que se va a editar\n    $categoria = Categoria::find($id);\n    return view('admin.categorias.edit', compact('categoria'));\n}\n")),(0,i.kt)("p",null,"No es necesario comentar este c\xf3digo, ya que su funcionalidad es evidente. Aprovecharemos para crear otro m\xe9todo en el controlador llamado ",(0,i.kt)("strong",{parentName:"p"},"update"),". Este m\xe9todo se encargar\xe1 de validar los datos introducidos en la vista y actualizar nuestra base de datos."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"public function update(Request $request, $id)\n{\n    // Validar los campos de la petici\xf3n\n    $request->validate([\n        'nombre' => 'required',\n        'descripcion' => 'required',\n        'imagen' => 'image|mimes:jpeg,png,jpg,gif|max:2048',\n    ]);\n\n    // Buscar la categor\xeda que se va a actualizar\n    $categoria = Categoria::find($id);\n    $categoria->nombre = $request->nombre;\n    $categoria->descripcion = $request->descripcion;\n\n    // Verificar si se ha seleccionado un archivo de imagen para subir\n    if ($request->hasFile('imagen')) {\n        // Recuperar el archivo de imagen\n        $imagen = $request->file('imagen');\n        // Generar un nombre \xfanico para el archivo\n        $imagenNombre = time() . '_' . $imagen->getClientOriginalName();\n        // Mover el archivo a la carpeta public/images\n        $imagen->move(public_path('images'), $imagenNombre);\n        // Guardar la ruta de la imagen en el campo 'imagen' de la categor\xeda\n        $categoria->imagen = '/images/' . $imagenNombre;\n    }\n\n    // Guardar los cambios en la base de datos\n    $categoria->save();\n\n    // Redirigir a la lista de categor\xedas con un mensaje de \xe9xito\n    return redirect()->route('admin.categoria.index')->with('success', 'Categor\xeda actualizada correctamente');\n}\n")),(0,i.kt)("admonition",{title:"\xbfQu\xe9 hace?",type:"info"},(0,i.kt)("ol",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"El m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"update")," recibe dos par\xe1metros: ",(0,i.kt)("inlineCode",{parentName:"p"},"$request")," (que parece ser una instancia de la clase ",(0,i.kt)("inlineCode",{parentName:"p"},"Request"),") y ",(0,i.kt)("inlineCode",{parentName:"p"},"$id")," (el identificador de la categor\xeda que se va a actualizar).")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Se realiza una validaci\xf3n de los campos enviados en la petici\xf3n utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"validate()")," del objeto ",(0,i.kt)("inlineCode",{parentName:"p"},"$request"),". En este caso, se verifica que los campos ",(0,i.kt)("inlineCode",{parentName:"p"},"nombre")," y ",(0,i.kt)("inlineCode",{parentName:"p"},"descripcion")," sean requeridos, y que el campo ",(0,i.kt)("inlineCode",{parentName:"p"},"imagen")," sea una imagen v\xe1lida con un tama\xf1o m\xe1ximo de 2048 kilobytes.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"A continuaci\xf3n, se busca la categor\xeda que se va a actualizar utilizando el modelo ",(0,i.kt)("inlineCode",{parentName:"p"},"Categoria")," y el identificador ",(0,i.kt)("inlineCode",{parentName:"p"},"$id"),". Esto permite obtener la categor\xeda correspondiente en la base de datos.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Se asignan los valores recibidos en los campos ",(0,i.kt)("inlineCode",{parentName:"p"},"nombre")," y ",(0,i.kt)("inlineCode",{parentName:"p"},"descripcion")," al objeto ",(0,i.kt)("inlineCode",{parentName:"p"},"$categoria"),", actualizando as\xed los datos de la categor\xeda.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Si se ha seleccionado un archivo de imagen en la petici\xf3n utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"hasFile()")," del objeto ",(0,i.kt)("inlineCode",{parentName:"p"},"$request"),", se procede a procesarlo.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Se recupera el archivo de imagen utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"file()")," del objeto ",(0,i.kt)("inlineCode",{parentName:"p"},"$request")," y se genera"),(0,i.kt)("p",{parentName:"li"},"un nombre \xfanico para el archivo concatenando la marca de tiempo actual con el nombre original del archivo.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Luego, se mueve el archivo de imagen a una carpeta espec\xedfica dentro de la carpeta p\xfablica (",(0,i.kt)("inlineCode",{parentName:"p"},"public/images"),") utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"move()")," del objeto ",(0,i.kt)("inlineCode",{parentName:"p"},"$imagen"),". La funci\xf3n ",(0,i.kt)("inlineCode",{parentName:"p"},"public_path()")," se utiliza para obtener la ruta completa de la carpeta p\xfablica.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"La ruta del archivo de imagen actualizado se guarda en el campo ",(0,i.kt)("inlineCode",{parentName:"p"},"imagen")," del objeto ",(0,i.kt)("inlineCode",{parentName:"p"},"$categoria"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Se guardan los cambios en la base de datos utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"save()")," del objeto ",(0,i.kt)("inlineCode",{parentName:"p"},"$categoria"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Finalmente, se redirige a la lista de categor\xedas utilizando la ruta con nombre ",(0,i.kt)("inlineCode",{parentName:"p"},"'admin.categoria.index'")," y se incluye un mensaje de \xe9xito en la sesi\xf3n (",(0,i.kt)("inlineCode",{parentName:"p"},"'success'"),") que se mostrar\xe1 en la vista de destino."))),(0,i.kt)("p",{parentName:"admonition"},"En resumen, este c\xf3digo actualiza una categor\xeda en la base de datos, permitiendo cambiar su nombre, descripci\xf3n y tambi\xe9n subir una imagen asociada a ella. Despu\xe9s de realizar la actualizaci\xf3n, se redirige a la lista de categor\xedas con un mensaje de \xe9xito.")),(0,i.kt)("h4",{id:"creaci\xf3n-de-la-vista-1"},"Creaci\xf3n de la vista"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"@extends('adminlte::page')\n\n@section('title', 'Agregar Categor\xeda')\n\n@section('content_header')\n    <h1>Agregar Categor\xeda</h1>\n@stop\n\n@section('content')\n    <div class=\"container\">\n        <div class=\"card col-lg-12 p-4\">\n            {!! Form::model($categoria, [\n                'route' => ['admin.categoria.update', $categoria->id],\n                'files' => true,\n                'method' => 'PUT',\n            ]) !!}\n\n            <div class=\"form-group\">\n                \x3c!-- Etiqueta del campo \"nombre\" --\x3e\n                {!! Form::label('nombre', 'Nombre:') !!}\n                \x3c!-- Campo de entrada de texto para el nombre --\x3e\n                {!! Form::text('nombre', $categoria->nombre, [\n                    'class' => 'form-control' . ($errors->has('nombre') ? ' is-invalid' : ''),\n                    'required',\n                ]) !!}\n                @if ($errors->has('nombre'))\n                    <div class=\"invalid-feedback\">\n                        \x3c!-- Mensaje de error si el campo \"nombre\" tiene errores de validaci\xf3n --\x3e\n                        {{ $errors->first('nombre') }}\n                    </div>\n                @endif\n            </div>\n\n            <div class=\"form-group\">\n                \x3c!-- Etiqueta del campo \"descripcion\" --\x3e\n                {!! Form::label('descripcion', 'Descripci\xf3n:') !!}\n                \x3c!-- Campo de entrada de texto (\xe1rea de texto) para la descripci\xf3n --\x3e\n                {!! Form::textarea('descripcion', $categoria->descripcion, [\n                    'class' => 'form-control' . ($errors->has('descripcion') ? ' is-invalid' : ''),\n                    'required',\n                ]) !!}\n                @if ($errors->has('descripcion'))\n                    <div class=\"invalid-feedback\">\n                        \x3c!-- Mensaje de error si el campo \"descripcion\" tiene errores de validaci\xf3n --\x3e\n                        {{ $errors->first('descripcion') }}\n                    </div>\n                @endif\n            </div>\n\n            <div class=\"form-group\">\n                <table>\n                    <td>\n                        \x3c!-- Etiqueta del campo \"imagen\" --\x3e\n                        {!! Form::label('imagen', 'Imagen:') !!}\n                        \x3c!-- Campo de selecci\xf3n de archivo de imagen --\x3e\n                        {!! Form::file('imagen', [\n                            'class' => 'form-control-file' . ($errors->has('imagen') ? ' is-invalid' : ''),\n                            'accept' => 'image/*',\n                            'onchange' => 'previewImage(event)',\n                        ]) !!}\n                        @if ($errors->has('imagen'))\n                            <div class=\"invalid-feedback\">\n                                \x3c!-- Mensaje de error si el campo \"imagen\" tiene errores de validaci\xf3n --\x3e\n                                {{ $errors->first('imagen') }}\n                            </div>\n                        @endif\n                    </td>\n                    <td>\n                        \x3c!-- Elemento de imagen para previsualizar la imagen seleccionada --\x3e\n                        <img id=\"preview\" src=\"{{ $categoria->imagen }}\" alt=\"Preview de la imagen\"\n                            style=\"max-width: 200px; margin-top: 10px; padding-left: 20px;\">\n                    </td>\n                </table>\n            </div>\n\n            \x3c!-- Bot\xf3n de env\xedo del formulario --\x3e\n            {!! Form::submit('Actualizar', ['class' => 'btn btn-primary']) !!}\n\n            {!! Form::close() !!}\n        </div>\n    </div>\n\n    <script>\n        // Funci\xf3n para previsualizar la imagen seleccionada\n        function previewImage(event) {\n            var input = event.target;\n            var preview = document.getElementById('preview');\n\n            if (input.files && input.files[0]) {\n                var reader = new FileReader();\n\n                reader.onload = function(e) {\n                    // Actualizar la fuente de la imagen para mostrar la previsualizaci\xf3n\n                    preview.src = e.target.result;\n                    preview.style.display = 'block';\n                }\n\n                // Leer el archivo de imagen como una URL de datos\n                reader.readAsDataURL(input.files[0]);\n            }\n        }\n    <\/script>\n@stop\n")),(0,i.kt)("p",null,"Este c\xf3digo pertenece a la vista ",(0,i.kt)("strong",{parentName:"p"},"resources\\views\\admin\\categorias\\edit.blade.php"),". A continuaci\xf3n, comentar\xe9 cada secci\xf3n del c\xf3digo para una mejor comprensi\xf3n:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"@extends('adminlte::page')\n")),(0,i.kt)("p",null,"Esta l\xednea indica que esta vista extiende la plantilla base proporcionada por AdminLTE."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"@section('title', 'Agregar Categor\xeda')\n")),(0,i.kt)("p",null,"Esta secci\xf3n define el t\xedtulo de la p\xe1gina."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"@section('content_header')\n    <h1>Agregar Categor\xeda</h1>\n@stop\n")),(0,i.kt)("p",null,"Esta secci\xf3n define el encabezado de contenido de la p\xe1gina."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"@section('content')\n    \x3c!-- Contenido de la p\xe1gina --\x3e\n@stop\n")),(0,i.kt)("p",null,"Esta secci\xf3n define el contenido principal de la p\xe1gina."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},'<div class="container">\n    <div class="card col-lg-12 p-4">\n')),(0,i.kt)("p",null,"Aqu\xed se crea un contenedor y una tarjeta para agrupar el formulario."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"{!! Form::model($categoria, [\n    'route' => ['admin.categoria.update', $categoria->id],\n    'files' => true,\n    'method' => 'PUT',\n]) !!}\n")),(0,i.kt)("p",null,"Se inicia un formulario utilizando la funci\xf3n ",(0,i.kt)("inlineCode",{parentName:"p"},"Form::model")," de Laravel Collective. El modelo ",(0,i.kt)("inlineCode",{parentName:"p"},"$categoria")," se asocia con el formulario, y se especifica la ruta de actualizaci\xf3n, permitiendo enviar archivos (",(0,i.kt)("inlineCode",{parentName:"p"},"'files' => true"),") y utilizando el m\xe9todo PUT."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<div class=\"form-group\">\n    {!! Form::label('nombre', 'Nombre:') !!}\n    {!! Form::text('nombre', $categoria->nombre, [\n        'class' => 'form-control' . ($errors->has('nombre') ? ' is-invalid' : ''),\n        'required',\n    ]) !!}\n    @if ($errors->has('nombre'))\n        <div class=\"invalid-feedback\">\n            {{ $errors->first('nombre') }}\n        </div>\n    @endif\n</div>\n")),(0,i.kt)("p",null,"Este c\xf3digo representa un campo de formulario para el nombre de la categor\xeda. Se utiliza la funci\xf3n ",(0,i.kt)("inlineCode",{parentName:"p"},"Form::label")," para generar una etiqueta, ",(0,i.kt)("inlineCode",{parentName:"p"},"Form::text")," para generar un campo de entrada de texto, y se utiliza la variable ",(0,i.kt)("inlineCode",{parentName:"p"},"$errors")," para mostrar mensajes de error si existen."),(0,i.kt)("p",null,"Se sigue una estructura similar para el campo de descripci\xf3n y el campo de imagen."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"{!! Form::submit('Actualizar', ['class' => 'btn btn-primary']) !!}\n")),(0,i.kt)("p",null,'Este c\xf3digo representa el bot\xf3n de env\xedo del formulario con el texto "Actualizar" y la clase de estilo CSS "btn btn-primary".'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"{!! Form::close() !!}\n")),(0,i.kt)("p",null,"Aqu\xed se cierra el formulario."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n    function previewImage(event) {\n        var input = event.target;\n        var preview = document.getElementById('preview');\n\n        if (input.files && input.files[0]) {\n            var reader = new FileReader();\n\n            reader.onload = function(e) {\n                preview.src = e.target.result;\n                preview.style.display = 'block';\n            }\n\n            reader.readAsDataURL(input.files[0]);\n        }\n    }\n<\/script>\n")),(0,i.kt)("p",null,"Este es un script JavaScript que maneja la vista previa de la imagen seleccionada. Cuando se selecciona un archivo de imagen, se lee el archivo utilizando la clase ",(0,i.kt)("inlineCode",{parentName:"p"},"FileReader")," y se asigna la URL de la imagen al elemento ",(0,i.kt)("inlineCode",{parentName:"p"},"<img>"),' con el id "preview".'),(0,i.kt)("p",null,"En resumen, este c\xf3digo representa una vista de formulario para editar una categor\xeda. El formulario muestra los campos de nombre, descripci\xf3n e imagen de la categor\xeda. Tambi\xe9n incluye la funcionalidad para mostrar una vista previa de la imagen"),(0,i.kt)("p",null,"Por \xfaltimo deber\xedamos dirigirnos al archivo de rutas ",(0,i.kt)("strong",{parentName:"p"},"routes\\admin.php")," y comprobar si la siguiente ruta existe, de no existir ahora es el momento justo de crearla."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"Route::put(\"/categorias/update/{id}\",[CategoriaController::class,'update'])->name('admin.categoria.update');\n")),(0,i.kt)("p",null,"Nuestra vista deber\xeda quedar tal como se muestra en la imagen:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Editar imagen",src:n(2098).Z,width:"1366",height:"760"})),(0,i.kt)("h3",{id:"borrado-de-categor\xeda"},"Borrado de categor\xeda"),(0,i.kt)("p",null,"Esta es la parte m\xe1s sencilla de implementar en nuestra vista ",(0,i.kt)("strong",{parentName:"p"},"resources\\views\\admin\\categorias\\index.blade.php"),". Empezaremos creando el m\xe9todo adecuado del controlador:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"public function destroy($id)\n{\n    $categoria = Categoria::find($id);\n\n    if (!$categoria) {\n        return redirect()->route('admin.categoria.index')->with('error', 'Categor\xeda no encontrada');\n    }\n\n    // Eliminar la imagen asociada si existe\n    /*\n    if ($categoria->imagen) {\n        // Obtener la ruta completa de la imagen\n        $imagenPath = public_path($categoria->imagen);\n\n        // Verificar si la imagen existe en el servidor\n        if (file_exists($imagenPath)) {\n            // Eliminar la imagen\n            unlink($imagenPath);\n        }\n    }*/\n\n    $categoria->delete();\n\n    return redirect()->route('admin.categoria.index')->with('success', 'Categor\xeda eliminada correctamente');\n}\n")),(0,i.kt)("p",null,"El c\xf3digo proporcionado realiza las siguientes acciones:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Se busca una categor\xeda en la base de datos utilizando el identificador ",(0,i.kt)("inlineCode",{parentName:"li"},"$id")," proporcionado."),(0,i.kt)("li",{parentName:"ol"},"Si no se encuentra la categor\xeda, se redirige a la lista de categor\xedas (",(0,i.kt)("inlineCode",{parentName:"li"},"admin.categoria.index"),") y se muestra un mensaje de error en la sesi\xf3n indicando que la categor\xeda no fue encontrada."),(0,i.kt)("li",{parentName:"ol"},"(Comentario): Se comprueba si la categor\xeda tiene una imagen asociada y, de ser as\xed, se obtiene la ruta completa de la imagen y se verifica si existe en el servidor. Si la imagen existe, se elimina utilizando la funci\xf3n ",(0,i.kt)("inlineCode",{parentName:"li"},"unlink()"),"."),(0,i.kt)("li",{parentName:"ol"},"Se elimina la categor\xeda de la base de datos utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"li"},"delete()"),"."),(0,i.kt)("li",{parentName:"ol"},"Se redirige a la lista de categor\xedas (",(0,i.kt)("inlineCode",{parentName:"li"},"admin.categoria.index"),") y se muestra un mensaje de \xe9xito en la sesi\xf3n indicando que la categor\xeda fue eliminada correctamente.")),(0,i.kt)("p",null,"Es importante destacar que el bloque de c\xf3digo comentado (desde ",(0,i.kt)("inlineCode",{parentName:"p"},"/*")," hasta ",(0,i.kt)("inlineCode",{parentName:"p"},"*/"),") indica una secci\xf3n que ha sido deshabilitada y no se ejecutar\xe1. En este caso, se trata de la eliminaci\xf3n de la imagen asociada a la categor\xeda. Si deseas utilizar esta funcionalidad, deber\xe1s eliminar los comentarios (",(0,i.kt)("inlineCode",{parentName:"p"},"/*")," y ",(0,i.kt)("inlineCode",{parentName:"p"},"*/"),") para activar ese bloque de c\xf3digo."),(0,i.kt)("p",null,"A continuaci\xf3n vamos a definir la ruta en nuestro fichero ",(0,i.kt)("strong",{parentName:"p"},"routes\\admin.php"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"Route::delete(\"/categorias/delete/{id}\",[CategoriaController::class,'destroy'])->name('admin.categoria.delete');\n")),(0,i.kt)("p",null,"Por \xfaltimo editaremos la vista ",(0,i.kt)("strong",{parentName:"p"},"resources\\views\\admin\\categorias\\index.blade.php")," y donde se define el c\xf3digo de borrado deberemos introducir el siguiente c\xf3digo si este no esta definido, este el \xfaltimo tag ",(0,i.kt)("inlineCode",{parentName:"p"},"<td>")," de la tabla."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},'{{-- Bot\xf3n de borrado --}}\n<td width="10px">\n<form action="{{ route(\'admin.categoria.delete\', [\'id\' => $categoria->id]) }}"" method="POST">\n    @csrf\n    @method(\'DELETE\')\n    <button type="submit" class="btn btn-danger btn-sm"\n        onclick="return confirm(\'Si borrar esta cagegoria borra todas las subcegorias y anuncios asociados,\\n\xbfEst\xe1s seguro de que deseas eliminar esta categor\xeda?\')">\n        Eliminar\n    </button>\n</form>\n\n</td>\n')),(0,i.kt)("p",null,"El c\xf3digo proporcionado muestra un bot\xf3n de borrado dentro de una celda de una tabla. A continuaci\xf3n, se explica su funcionamiento:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Se crea un formulario con el atributo ",(0,i.kt)("inlineCode",{parentName:"li"},"action")," que apunta a la ruta ",(0,i.kt)("inlineCode",{parentName:"li"},"admin.categoria.delete")," y se le pasa el par\xe1metro ",(0,i.kt)("inlineCode",{parentName:"li"},"id")," con el valor de ",(0,i.kt)("inlineCode",{parentName:"li"},"$categoria->id"),". Esto indica que al enviar el formulario, se realizar\xe1 una solicitud HTTP DELETE a la ruta especificada, enviando el ID de la categor\xeda a ser eliminada."),(0,i.kt)("li",{parentName:"ul"},"Se utiliza la directiva ",(0,i.kt)("inlineCode",{parentName:"li"},"@csrf")," para agregar un campo de token CSRF al formulario. Este token ayuda a proteger contra ataques de falsificaci\xf3n de solicitudes entre sitios (CSRF)."),(0,i.kt)("li",{parentName:"ul"},"Se utiliza la directiva ",(0,i.kt)("inlineCode",{parentName:"li"},"@method('DELETE')")," para indicar que la solicitud HTTP debe ser de tipo DELETE."),(0,i.kt)("li",{parentName:"ul"},"Se muestra un bot\xf3n con la clase CSS ",(0,i.kt)("inlineCode",{parentName:"li"},"btn btn-danger btn-sm"),", que representa un bot\xf3n de color rojo y tama\xf1o peque\xf1o."),(0,i.kt)("li",{parentName:"ul"},"Se agrega un evento ",(0,i.kt)("inlineCode",{parentName:"li"},"onclick")," al bot\xf3n, que muestra un cuadro de confirmaci\xf3n con un mensaje antes de enviar la solicitud de eliminaci\xf3n. El mensaje de confirmaci\xf3n incluye una advertencia sobre la eliminaci\xf3n de la categor\xeda y c\xf3mo esto tambi\xe9n eliminar\xe1 todas las subcategor\xedas y anuncios asociados."),(0,i.kt)("li",{parentName:"ul"},"Si el usuario confirma la acci\xf3n, el formulario se env\xeda y se realiza la solicitud de eliminaci\xf3n.")),(0,i.kt)("p",null,"En resumen, este c\xf3digo muestra un bot\xf3n de eliminaci\xf3n en forma de formulario dentro de una celda de una tabla. Al hacer clic en el bot\xf3n y confirmar la acci\xf3n, se env\xeda una solicitud de eliminaci\xf3n de la categor\xeda correspondiente a trav\xe9s de una solicitud HTTP DELETE a la ruta especificada."))}m.isMDXComponent=!0},1103:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/agregar_categoria-5bd56877b916fd4e058e843fd19cecd0.png"},5049:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/categorias2-f06a38439112792dbc6bdea9cf8c01da.png"},2098:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/editar_categoria-407b75fd3fa7a922e3687e0738c019cf.png"}}]);