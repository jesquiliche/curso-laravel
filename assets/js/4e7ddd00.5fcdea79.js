"use strict";(self.webpackChunkeloquent=self.webpackChunkeloquent||[]).push([[2936],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>f});var r=a(7294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function t(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?t(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,r,o=function(e,n){if(null==e)return{};var a,r,o={},t=Object.keys(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var a=e.components,o=e.mdxType,t=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(a),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||t;return a?r.createElement(f,l(l({ref:n},c),{},{components:a})):r.createElement(f,l({ref:n},c))}));function f(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var t=a.length,l=new Array(t);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<t;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8558:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>t,metadata:()=>i,toc:()=>u});var r=a(7462),o=(a(7294),a(3905));const t={sidebar_position:30},l="Controladores",i={unversionedId:"tutorial-basics/Rutas/controladores",id:"tutorial-basics/Rutas/controladores",title:"Controladores",description:"\xbfQu\xe9 son y para que sirven?",source:"@site/docs/tutorial-basics/Rutas/controladores.md",sourceDirName:"tutorial-basics/Rutas",slug:"/tutorial-basics/Rutas/controladores",permalink:"/curso-laravel/docs/tutorial-basics/Rutas/controladores",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/Rutas/controladores.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Rutas",permalink:"/curso-laravel/docs/tutorial-basics/Rutas/"},next:{title:"Filtros y middleware",permalink:"/curso-laravel/docs/tutorial-basics/Rutas/filtros"}},s={},u=[{value:"\xbfQu\xe9 son y para que sirven?",id:"qu\xe9-son-y-para-que-sirven",level:2},{value:"\xbfC\xf3mo se crean?",id:"c\xf3mo-se-crean",level:2},{value:"Definici\xf3n de m\xe9todos",id:"definici\xf3n-de-m\xe9todos",level:2}],c={toc:u},p="wrapper";function d(e){let{components:n,...a}=e;return(0,o.kt)(p,(0,r.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"controladores"},"Controladores"),(0,o.kt)("h2",{id:"qu\xe9-son-y-para-que-sirven"},"\xbfQu\xe9 son y para que sirven?"),(0,o.kt)("p",null,"En el contexto de Laravel, un controlador es una clase que maneja la l\xf3gica de una o varias rutas definidas en una aplicaci\xf3n web. Los controladores permiten separar la l\xf3gica de la aplicaci\xf3n de la l\xf3gica de las rutas, lo que hace que el c\xf3digo sea m\xe1s legible, mantenible y escalable."),(0,o.kt)("p",null,"En t\xe9rminos m\xe1s simples, los controladores son como intermediarios entre las rutas y las respuestas que se devuelven al usuario. Cuando se define una ruta en Laravel, se especifica qu\xe9 controlador se encargar\xe1 de manejar la petici\xf3n que llega a esa ruta."),(0,o.kt)("p",null,"En lugar de incluir la l\xf3gica de la aplicaci\xf3n en la propia ruta, se utiliza un controlador para manejar la l\xf3gica de la aplicaci\xf3n. Los controladores pueden manejar una variedad de acciones, como obtener datos de una base de datos, validar entradas del usuario, devolver vistas y m\xe1s."),(0,o.kt)("p",null,"En definitiva, los controladores son una parte esencial de la estructura de una aplicaci\xf3n Laravel, ya que permiten separar la l\xf3gica de la aplicaci\xf3n de las rutas, lo que hace que el c\xf3digo sea m\xe1s organizado y f\xe1cil de mantener."),(0,o.kt)("h2",{id:"c\xf3mo-se-crean"},"\xbfC\xf3mo se crean?"),(0,o.kt)("p",null,"En Laravel, se pueden crear controladores utilizando el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"php artisan make:controller"),". Este comando generar\xe1 un nuevo archivo de controlador en el directorio ",(0,o.kt)("inlineCode",{parentName:"p"},"app/Http/Controllers"),"."),(0,o.kt)("p",null,"Por ejemplo, si queremos crear un controlador llamado ",(0,o.kt)("inlineCode",{parentName:"p"},"UserController"),", podemos ejecutar el siguiente comando en la terminal:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"php artisan make:controller UserController\n")),(0,o.kt)("p",null,"Esto crear\xe1 un archivo ",(0,o.kt)("inlineCode",{parentName:"p"},"UserController.php")," en el directorio ",(0,o.kt)("inlineCode",{parentName:"p"},"app/Http/Controllers"),". Dentro de este archivo, podemos definir los m\xe9todos que se utilizar\xe1n para manejar las diferentes acciones de nuestra aplicaci\xf3n."),(0,o.kt)("p",null,"Por ejemplo, si queremos crear un m\xe9todo para mostrar la lista de usuarios, podemos agregar lo siguiente al archivo ",(0,o.kt)("inlineCode",{parentName:"p"},"UserController.php"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"public function index()\n{\n    $users = User::all();\n    return view('users.index', compact('users'));\n}\n")),(0,o.kt)("p",null,"Este m\xe9todo obtiene todos los usuarios de la base de datos y los pasa a una vista llamada ",(0,o.kt)("inlineCode",{parentName:"p"},"users.index")," como una variable ",(0,o.kt)("inlineCode",{parentName:"p"},"$users"),". Luego, en la vista, podemos mostrar la lista de usuarios utilizando la variable ",(0,o.kt)("inlineCode",{parentName:"p"},"$users"),"."),(0,o.kt)("p",null,"Una vez que hemos creado nuestro controlador y definido nuestros m\xe9todos, podemos utilizarlos en nuestras rutas para manejar las diferentes acciones de nuestra aplicaci\xf3n."),(0,o.kt)("h2",{id:"definici\xf3n-de-m\xe9todos"},"Definici\xf3n de m\xe9todos"),(0,o.kt)("p",null,'Vamos a mostrar como crear un controlador para el modelo Anuncio, aqu\xed te muestro c\xf3mo se podr\xeda definir un controlador para la entidad "Anuncio" en Laravel 10 con todos los m\xe9todos disponibles:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Anuncio;\nuse Illuminate\\Http\\Request;\n\nclass AnuncioController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index()\n    {\n        // Listar todos los anuncios\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n        // Mostrar el formulario para crear un nuevo anuncio\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        // Almacenar un nuevo anuncio\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show($id)\n    {\n        // Mostrar un anuncio espec\xedfico\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit($id)\n    {\n        // Mostrar el formulario para editar un anuncio\n    }\n\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, $id)\n    {\n        // Actualizar un anuncio espec\xedfico\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy($id)\n    {\n        // Eliminar un anuncio espec\xedfico\n    }\n}\n")),(0,o.kt)("p",null,'Cada uno de estos m\xe9todos maneja una solicitud HTTP espec\xedfica para la entidad "Anuncio", ya sea para listar todos los anuncios, crear uno nuevo, actualizar uno existente o eliminarlo.'),(0,o.kt)("admonition",{title:"Encargar a Laravel que cree un controlador con el m\xe9todo Resource",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"En Laravel, se puede generar un controlador con los m\xe9todos necesarios para realizar un CRUD completo en un solo paso utilizando el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"php artisan make:controller --resource"),". Este comando generar\xe1 un controlador con los siguientes m\xe9todos:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"index: muestra una lista de recursos."),(0,o.kt)("li",{parentName:"ul"},"create: muestra el formulario para crear un nuevo recurso."),(0,o.kt)("li",{parentName:"ul"},"store: almacena un nuevo recurso en la base de datos."),(0,o.kt)("li",{parentName:"ul"},"show: muestra un recurso espec\xedfico."),(0,o.kt)("li",{parentName:"ul"},"edit: muestra el formulario para editar un recurso existente."),(0,o.kt)("li",{parentName:"ul"},"update: actualiza un recurso existente en la base de datos."),(0,o.kt)("li",{parentName:"ul"},"destroy: elimina un recurso existente de la base de datos.")),(0,o.kt)("p",{parentName:"admonition"},"Para generar un controlador con estos m\xe9todos, ejecute el siguiente comando en la terminal:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"php artisan make:controller NombreDelControlador --resource\n")),(0,o.kt)("p",{parentName:"admonition"},'Reemplace "NombreDelControlador" por el nombre que desee darle al controlador. Por ejemplo, si desea generar un controlador para el modelo "Anuncio", puede ejecutar el siguiente comando:'),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"php artisan make:controller AnuncioController --resource\n")),(0,o.kt)("p",{parentName:"admonition"},'Esto generar\xe1 un controlador llamado "AnuncioController" en la carpeta "app/Http/Controllers" con los m\xe9todos necesarios para realizar un CRUD completo.')))}d.isMDXComponent=!0}}]);