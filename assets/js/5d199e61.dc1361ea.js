"use strict";(self.webpackChunkeloquent=self.webpackChunkeloquent||[]).push([[5853],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>g});var o=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function t(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,o,r=function(e,a){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var a=o.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):t(t({},a),e)),n},d=function(e){var a=c(e.components);return o.createElement(s.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},m=o.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return n?o.createElement(g,t(t({ref:a},d),{},{components:n})):o.createElement(g,t({ref:a},d))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,t=new Array(i);t[0]=m;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[p]="string"==typeof e?e:r,t[1]=l;for(var c=2;c<i;c++)t[c]=n[c];return o.createElement.apply(null,t)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2892:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const i={sidebar_position:5},t="Operaciones CRUD",l={unversionedId:"tutorial-basics/Vistas/crud",id:"tutorial-basics/Vistas/crud",title:"Operaciones CRUD",description:"Lo que aprender\xe1s en este cap\xedtulo",source:"@site/docs/tutorial-basics/Vistas/04-crud.md",sourceDirName:"tutorial-basics/Vistas",slug:"/tutorial-basics/Vistas/crud",permalink:"/curso-laravel/docs/tutorial-basics/Vistas/crud",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/Vistas/04-crud.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Vistas y rutas protegidas",permalink:"/curso-laravel/docs/tutorial-basics/Vistas/rutasprotegidas"},next:{title:"Calidad del Software",permalink:"/curso-laravel/docs/category/calidad-del-software"}},s={},c=[{value:"Lo que aprender\xe1s en este cap\xedtulo",id:"lo-que-aprender\xe1s-en-este-cap\xedtulo",level:2},{value:"\xbfQu\xe9 es un CRUD?",id:"qu\xe9-es-un-crud",level:2},{value:"Publicar Anuncio",id:"publicar-anuncio",level:2},{value:"\xbfQ\xfae es Laravel Collective?",id:"q\xfae-es-laravel-collective",level:3},{value:"An\xe1lisis del c\xf3digo",id:"an\xe1lisis-del-c\xf3digo",level:3},{value:"An\xe1lisis general",id:"an\xe1lisis-general",level:4},{value:"An\xe1lisis en detalle",id:"an\xe1lisis-en-detalle",level:4},{value:"Subida de im\xe1genes al servidor",id:"subida-de-im\xe1genes-al-servidor",level:3},{value:"Implementaci\xf3n en el lado del servidor",id:"implementaci\xf3n-en-el-lado-del-servidor",level:4},{value:"Subida m\xfaltiple de im\xe1genes al servidor",id:"subida-m\xfaltiple-de-im\xe1genes-al-servidor",level:3},{value:"\xbfQu\xe9 es DropZone?",id:"qu\xe9-es-dropzone",level:4},{value:"Configuraci\xf3n de DropZone",id:"configuraci\xf3n-de-dropzone",level:4},{value:"\xbfQu\xe9 hace?",id:"qu\xe9-hace",level:4},{value:"Editar y borrar anuncios",id:"editar-y-borrar-anuncios",level:2},{value:"Modificando nuestra vista Home",id:"modificando-nuestra-vista-home",level:3},{value:"\xbfQu\xe9 hace el c\xf3digo?",id:"qu\xe9-hace-el-c\xf3digo",level:4},{value:"Modificando la vista anuncios.show",id:"modificando-la-vista-anunciosshow",level:3},{value:"Editar anuncio",id:"editar-anuncio",level:2},{value:"An\xe1lisis del c\xf3digo",id:"an\xe1lisis-del-c\xf3digo-1",level:4},{value:"scripts js",id:"scripts-js",level:3},{value:"Controladores",id:"controladores",level:3},{value:"M\xe9todo para cargar images en el servidor",id:"m\xe9todo-para-cargar-images-en-el-servidor",level:3},{value:"M\xe9todo para borrar im\xe1genes",id:"m\xe9todo-para-borrar-im\xe1genes",level:3},{value:"Borrar anuncio",id:"borrar-anuncio",level:2},{value:"\xbfQu\xe9 hace el c\xf3digo?",id:"qu\xe9-hace-el-c\xf3digo-1",level:3}],d={toc:c},p="wrapper";function u(e){let{components:a,...i}=e;return(0,r.kt)(p,(0,o.Z)({},d,i,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"operaciones-crud"},"Operaciones CRUD"),(0,r.kt)("h2",{id:"lo-que-aprender\xe1s-en-este-cap\xedtulo"},"Lo que aprender\xe1s en este cap\xedtulo"),(0,r.kt)("p",null,"En este cap\xedtulo aprender\xe1s a realizar las operaciones CRUD (Crear, Leer, Actualizar y Borrar) de anuncios. Para ello, crearemos las vistas correspondientes. Adem\xe1s, aprenderemos a utilizar ",(0,r.kt)("strong",{parentName:"p"},"Laravel Collective")," para crear nuestros formularios y el plugin JavaScript ",(0,r.kt)("strong",{parentName:"p"},"DropZone")," para subir im\xe1genes al servidor mediante la funcionalidad de arrastrar y soltar. Tambi\xe9n exploraremos c\xf3mo realizar transacciones."),(0,r.kt)("h2",{id:"qu\xe9-es-un-crud"},"\xbfQu\xe9 es un CRUD?"),(0,r.kt)("p",null,'CRUD es un acr\xf3nimo que significa "Crear, Leer, Actualizar y Eliminar" (en ingl\xe9s: Create, Read, Update, Delete). Se utiliza para describir las operaciones b\xe1sicas que se realizan en un sistema o aplicaci\xf3n para administrar datos en una base de datos o cualquier otro tipo de almacenamiento.'),(0,r.kt)("p",null,"Aqu\xed tienes una explicaci\xf3n breve de cada una de las operaciones CRUD:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Crear (Create): Esta operaci\xf3n se utiliza para crear nuevos registros o elementos en la base de datos. Por ejemplo, al agregar un nuevo usuario a una tabla de usuarios.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Leer (Read): Esta operaci\xf3n se utiliza para leer o consultar datos existentes en la base de datos. Por ejemplo, al mostrar una lista de usuarios registrados.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Actualizar (Update): Esta operaci\xf3n se utiliza para modificar o actualizar registros existentes en la base de datos. Por ejemplo, al cambiar la direcci\xf3n de un usuario o actualizar la informaci\xf3n de un producto.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Eliminar (Delete): Esta operaci\xf3n se utiliza para eliminar registros o elementos existentes de la base de datos. Por ejemplo, al eliminar un usuario o eliminar un producto de una lista."))),(0,r.kt)("p",null,"Resumiendo, CRUD proporciona un conjunto b\xe1sico de operaciones para interactuar con los datos en una base de datos. Estas operaciones son fundamentales en el desarrollo de aplicaciones, ya que permiten la gesti\xf3n y manipulaci\xf3n de datos de manera eficiente."),(0,r.kt)("h2",{id:"publicar-anuncio"},"Publicar Anuncio"),(0,r.kt)("p",null,"Para empezar, revisaremos la vista ",(0,r.kt)("strong",{parentName:"p"},"anuncios.create")," la encargada de crear los anuncios de\nnuestra apliaci\xf3n. A esta vista se accede a traves de uno de los enlaces que hay definido en el men\xfa superior de la aplicaci\xf3n y su ruta esta definida de la siguiente forma en el fichero de rutas ",(0,r.kt)("strong",{parentName:"p"},"web.php")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"Route::get('/create', [AnuncioController::class,'create'])->middleware('auth')->name('anuncios.create');\n")),(0,r.kt)("p",null,"El usuario, para poder acceder a esta vista, debe estar registrado y autenticado, ya que los anuncios se guardan junto con la correspondiente ficha del usuario al que pertenece cada anuncio.\nPor esta raz\xf3n, utilizamos el middleware 'auth', que obliga al usuario a autenticarse en caso de no haberlo hecho previamente. A continuaci\xf3n puede observar la vista anteriormente mencionada."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Publicar anuncio",src:n(9150).Z,width:"1366",height:"735"})),(0,r.kt)("p",null,"Para la creaci\xf3n del formulario de esta vista, vamos a utilizar una librer\xeda llamada Laravel Collective."),(0,r.kt)("h3",{id:"q\xfae-es-laravel-collective"},"\xbfQ\xfae es Laravel Collective?"),(0,r.kt)("p",null,"Laravel Collective es un conjunto de componentes y utilidades adicionales para Laravel que simplifican y mejoran el desarrollo de formularios HTML y generaci\xf3n de HTML en general. Proporciona una sintaxis m\xe1s expresiva y concisa para la creaci\xf3n de formularios y otros elementos HTML, lo que facilita su uso y mantenimiento en proyectos Laravel."),(0,r.kt)("p",null,"Laravel Collective se utiliza mediante la instalaci\xf3n de su paquete a trav\xe9s de Composer y su integraci\xf3n en el proyecto Laravel existente. Una vez instalado, puedes aprovechar las funciones y clases proporcionadas por Laravel Collective para generar f\xe1cilmente elementos HTML, como formularios, campos de entrada, botones, listas desplegables, etc."),(0,r.kt)("p",null,"Algunos de los beneficios de utilizar Laravel Collective incluyen:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Sintaxis concisa: Laravel Collective ofrece una sintaxis simplificada y expresiva para la creaci\xf3n de formularios y elementos HTML en comparaci\xf3n con el enfoque est\xe1ndar de Laravel.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Mayor productividad: Al proporcionar m\xe9todos y funciones espec\xedficos para generar elementos HTML, Laravel Collective agiliza el desarrollo y ahorra tiempo en la escritura de c\xf3digo repetitivo.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Mayor legibilidad: La sintaxis clara y estructurada de Laravel Collective hace que el c\xf3digo sea m\xe1s legible y comprensible, lo que facilita la colaboraci\xf3n entre desarrolladores.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Compatibilidad con Laravel: Laravel Collective se integra sin problemas con Laravel, lo que significa que puedes utilizarlo junto con otras caracter\xedsticas y componentes de Laravel sin conflictos."))),(0,r.kt)("p",null,"En resumen, Laravel Collective es una biblioteca complementaria para Laravel que simplifica la generaci\xf3n de formularios y otros elementos HTML en proyectos Laravel, mejorando la productividad y la legibilidad del c\xf3digo."),(0,r.kt)("admonition",{title:"Como se utiliza",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Para utilizar los componentes de Laravel Collective, sigue estos pasos:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Instalaci\xf3n: Agrega Laravel Collective como una dependencia en tu proyecto de Laravel mediante Composer. Abre una terminal en la ra\xedz de tu proyecto y ejecuta el siguiente comando:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"composer require laravelcollective/html\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Configuraci\xf3n: Una vez instalado, Laravel Collective se registrar\xe1 autom\xe1ticamente en Laravel. Sin embargo, si est\xe1s utilizando Laravel 5.5 o una versi\xf3n posterior, no necesitas realizar ning\xfan paso adicional. Si est\xe1s utilizando una versi\xf3n anterior, debes registrar el proveedor de servicios y la fachada manualmente en los archivos ",(0,r.kt)("inlineCode",{parentName:"p"},"config/app.php")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"config/app.php")," respectivamente. Aseg\xfarate de seguir las instrucciones de instalaci\xf3n espec\xedficas para tu versi\xf3n de Laravel.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Uso en vistas: Puedes utilizar los componentes de Laravel Collective en tus vistas para generar elementos HTML. Aqu\xed hay algunos ejemplos:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Generar un formulario:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"{!! Form::open(['url' => 'ruta', 'method' => 'POST']) !!}\n// Campos del formulario\n{!! Form::text('nombre', null, ['class' => 'form-control']) !!}\n{!! Form::submit('Enviar', ['class' => 'btn btn-primary']) !!}\n{!! Form::close() !!}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Generar un enlace:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"{!! Html::link('ruta', 'Texto del enlace', ['class' => 'btn btn-primary']) !!}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Generar una tabla:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"{!! Table::open(['class' => 'table']) !!}\n{!! Table::header(['Columna 1', 'Columna 2']) !!}\n{!! Table::body([['Celda 1', 'Celda 2'], ['Celda 3', 'Celda 4']]) !!}\n{!! Table::close() !!}\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Explora la documentaci\xf3n: Laravel Collective ofrece una documentaci\xf3n detallada y completa que puedes consultar para obtener m\xe1s informaci\xf3n sobre el uso de cada componente. Puedes visitar el sitio web oficial de Laravel Collective y acceder a la documentaci\xf3n para obtener ejemplos, referencias y gu\xedas de uso."))),(0,r.kt)("p",{parentName:"admonition"},"Recuerda importar las clases necesarias al principio de tus archivos de vista o utilizar las fachadas adecuadas para acceder a los m\xe9todos de los componentes.")),(0,r.kt)("h3",{id:"an\xe1lisis-del-c\xf3digo"},"An\xe1lisis del c\xf3digo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"@extends('layout.layout') \x3c!-- Extiende el dise\xf1o de la plantilla principal --\x3e\n\n@section('title', 'P\xe1gina de inicio') \x3c!-- Define el t\xedtulo de la p\xe1gina --\x3e\n\n@section('content') \x3c!-- Secci\xf3n del contenido de la p\xe1gina --\x3e\n\n    <div class=\"card2 col-lg-10 mx-auto mt-8 p-4\"> \x3c!-- Contenedor de la tarjeta --\x3e\n        <h4 class=\"text-center resaltado\"><b>Publicar anuncio<b></h4> \x3c!-- T\xedtulo de la tarjeta --\x3e\n        @if ($errors->any()) \x3c!-- Verifica si hay errores y muestra una alerta de error --\x3e\n            <div class=\"alert alert-danger\">\n                <ul>\n                    @foreach ($errors->all() as $error) \x3c!-- Itera sobre los errores y los muestra en una lista --\x3e\n                        <li>{{ $error }}</li>\n                    @endforeach\n                </ul>\n            </div>\n        @endif\n\n        {!! Form::open(['url' => route('anuncios.store'), 'method' => 'POST', 'enctype' => 'multipart/form-data']) !!} \x3c!-- Apertura del formulario --\x3e\n        {!! Form::token() !!} \x3c!-- Genera un token CSRF para proteger el formulario --\x3e\n        <div class=\"row\"> \x3c!-- Fila de la cuadr\xedcula --\x3e\n\n            <div class=\"col-lg-6\"> \x3c!-- Columna de la cuadr\xedcula --\x3e\n\n                <div class=\"form-group\">\n                    {!! Form::label('titulo', 'T\xedtulo', ['class' => 'text-sm']) !!} \x3c!-- Etiqueta del campo de texto --\x3e\n                    {!! Form::text('titulo', null, ['class' => 'form-control', 'required']) !!} \x3c!-- Campo de texto --\x3e\n                    @error('titulo') \x3c!-- Verifica si hay un error en el campo 'titulo' y muestra un mensaje de error --\x3e\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n\n                <div class=\"form-group\">\n                    {!! Form::label('description', 'Descripci\xf3n') !!} \x3c!-- Etiqueta del campo de texto de \xe1rea --\x3e\n                    {!! Form::textarea('description', null, ['class' => 'form-control', 'rows' => 5, 'required']) !!} \x3c!-- Campo de texto de \xe1rea --\x3e\n                    @error('description') \x3c!-- Verifica si hay un error en el campo 'description' y muestra un mensaje de error --\x3e\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n\n                <div class=\"form-group\">\n                    {!! Form::label('imagen', 'Imagen') !!} \x3c!-- Etiqueta del campo de archivo --\x3e\n                    {!! Form::file('imagen', ['class' => 'form-control-file', 'accept' => 'image/*', 'required', 'max' => '2048']) !!} \x3c!-- Campo de archivo --\x3e\n                    @error('imagen') \x3c!-- Verifica si hay un error en el campo 'imagen' y muestra un mensaje de error --\x3e\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n\n                <div class=\"col-lg-10\">\n                    {!! Form::select( \x3c!-- Etiqueta del campo de selecci\xf3n --\x3e\n                        'subcategoria_id',\n                        $categorias->flatMap(function ($categoria) { \x3c!-- Genera opciones de selecci\xf3n a partir de los datos proporcionados --\x3e\n                            return [$categoria->nombre => $categoria->subcategorias->pluck('nombre', 'id')];\n                        }),\n                        null,\n                        ['class' => 'form-control'],\n                    ) !!} \x3c!-- Campo de selecci\xf3n --\x3e\n                    @error('subcategoria_id') \x3c!-- Verifica si hay un error en el campo 'subcategoria_id' y muestra un mensaje de error --\x3e\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n            </div>\n            \n            <div class=\"col-lg-6\"> \x3c!-- Columna de la cuadr\xedcula --\x3e\n\n                <div class=\"form-group\">\n                    {!! Form::label('telefono', 'Tel\xe9fono') !!} \x3c!-- Etiqueta del campo de tel\xe9fono --\x3e\n                    {!! Form::tel('telefono', null, ['class' => 'form-control']) !!} \x3c!-- Campo de tel\xe9fono --\x3e\n                    @error('telefono') \x3c!-- Verifica si hay un error en el campo 'telefono' y muestra un mensaje de error --\x3e\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n\n                <div class=\"form-group\">\n                    {!! Form::label('estado_id', 'Estado') !!} \x3c!-- Etiqueta del campo de selecci\xf3n --\x3e\n                    {!! Form::select('estado_id', $estados->pluck('nombre', 'id'), null, ['class' => 'form-control', 'required']) !!} \x3c!-- Campo de selecci\xf3n --\x3e\n                    @error('estado_id') \x3c!-- Verifica si hay un error en el campo 'estado_id' y muestra un mensaje de error --\x3e\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n\n                <div class=\"form-group\">\n                    {!! Form::label('provincia', 'Provincia') !!} \x3c!-- Etiqueta del campo de selecci\xf3n --\x3e\n                    {!! Form::select('provincia', $provincias->pluck('nombre', 'codigo'), null, ['class' => 'form-control', 'required']) !!} \x3c!-- Campo de selecci\xf3n --\x3e\n                    @error('provincia') \x3c!-- Verifica si hay un error en el campo 'provincia' y muestra un mensaje de error --\x3e\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n\n                <div class=\"form-group\">\n                    {!! Form::label('poblacion', 'Poblaci\xf3n') !!} \x3c!-- Etiqueta del campo de selecci\xf3n --\x3e\n                    {!! Form::select('cod_postal', $poblaciones->pluck('nombre', 'codigo'), null, ['class' => 'form-control', 'required']) !!} \x3c!-- Campo de selecci\xf3n --\x3e\n                    @error('cod_postal') \x3c!-- Verifica si hay un error en el campo 'cod_postal' y muestra un mensaje de error --\x3e\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n\n                <div class=\"form-group\">\n                    {!! Form::label('precio', 'Precio') !!} \x3c!-- Etiqueta del campo de n\xfamero --\x3e\n                    {!! Form::number('precio', null, ['class' => 'form-control','required']) !!} \x3c!-- Campo de n\xfamero --\x3e\n                    @error('precio') \x3c!-- Verifica si hay un error en el campo 'precio' y muestra un mensaje de error --\x3e\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            {!! Form::submit('Guardar', ['class' => 'btn btn-danger mx-auto']) !!} \x3c!-- Bot\xf3n de env\xedo del formulario --\x3e\n        </div>\n\n        {!! Form::close() !!} \x3c!-- Cierre del formulario --\x3e\n    </div>\n</div>\n@endsection \x3c!-- Cierre de la secci\xf3n de contenido --\x3e\n")),(0,r.kt)("h4",{id:"an\xe1lisis-general"},"An\xe1lisis general"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"La secci\xf3n de c\xf3digo ",(0,r.kt)("inlineCode",{parentName:"p"},"@if ($errors->any())"),' verifica si hay errores de validaci\xf3n. En caso afirmativo, se muestra una alerta de color rojo utilizando la clase CSS "alert alert-danger". Dentro de la alerta, se muestra una lista desordenada ',(0,r.kt)("inlineCode",{parentName:"p"},"<ul>")," que contiene todos los errores encontrados. Esto se logra utilizando un bucle ",(0,r.kt)("inlineCode",{parentName:"p"},"@foreach")," para recorrer la variable ",(0,r.kt)("inlineCode",{parentName:"p"},"$errors->all()"),", que contiene todos los errores de validaci\xf3n.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Para cada error de validaci\xf3n, se muestra un elemento de lista ",(0,r.kt)("inlineCode",{parentName:"p"},"<li>")," con el contenido del error utilizando la sintaxis ",(0,r.kt)("inlineCode",{parentName:"p"},"{{ $error }}"),". Esto asegura que cada error se muestre como un elemento de la lista en la alerta de errores.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Cada campo del formulario tiene una validaci\xf3n asociada utilizando la directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@error"),". Dentro de la directiva, se muestra un mensaje de error utilizando la variable ",(0,r.kt)("inlineCode",{parentName:"p"},"$message"),', que contiene el mensaje de error espec\xedfico para el campo dado. El mensaje de error se muestra en rojo utilizando la clase CSS "text-danger".')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Los controles de formulario se generan utilizando el componente ",(0,r.kt)("inlineCode",{parentName:"p"},"Form")," de Laravel Collective. Por ejemplo, el campo de entrada de texto se genera utilizando ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::text()"),", el campo de texto de \xe1rea se genera utilizando ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::textarea()"),", el campo de archivo se genera utilizando ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::file()"),", y as\xed sucesivamente.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Para cada control de formulario, se establecen atributos espec\xedficos utilizando el segundo argumento de la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::"),' correspondiente. Por ejemplo, se establece el atributo "required" para indicar que un campo es obligatorio, se establece el atributo "rows" para especificar el n\xfamero de filas en un campo de texto de \xe1rea, se establece el atributo "accept" para especificar el tipo de archivo aceptado en un campo de archivo, y se establece el atributo "max" para limitar el tama\xf1o m\xe1ximo del archivo en kilobytes.')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Adem\xe1s de los controles de formulario, se utilizan etiquetas ",(0,r.kt)("inlineCode",{parentName:"p"},"<label>")," para proporcionar una descripci\xf3n legible de cada campo. Estas etiquetas se generan utilizando la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::label()"),' y se asocian con los respectivos campos de entrada utilizando el atributo "for" en la etiqueta ',(0,r.kt)("inlineCode",{parentName:"p"},"<label>"),"."))),(0,r.kt)("p",null,"En resumen, el c\xf3digo utiliza el componente ",(0,r.kt)("inlineCode",{parentName:"p"},"Form")," de Laravel Collective para generar controles de formulario y manejar la validaci\xf3n de manera conveniente. Los mensajes de error se muestran de manera adecuada utilizando la directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@error")," y se proporciona retroalimentaci\xf3n visual al usuario con una alerta de errores. Esto ayuda a garantizar que los datos ingresados por el usuario cumplan con las reglas de validaci\xf3n definidas en el c\xf3digo."),(0,r.kt)("h4",{id:"an\xe1lisis-en-detalle"},"An\xe1lisis en detalle"),(0,r.kt)("admonition",{title:"@error y @errors",type:"info"},(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@error"),": La directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@error")," se utiliza para mostrar mensajes de error espec\xedficos asociados a un campo de formulario en particular. Funciona en conjunto con la validaci\xf3n de formularios en Laravel. Cuando se realiza la validaci\xf3n y se encuentran errores, puedes usar la directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@error")," para mostrar mensajes de error personalizados junto al campo correspondiente."),(0,r.kt)("p",{parentName:"li"},"Ejemplo de uso:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},"@error('campo')\n    <span class=\"text-danger\">{{ $message }}</span>\n@enderror\n")),(0,r.kt)("p",{parentName:"li"},"Explicaci\xf3n:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'campo'")," hace referencia al nombre del campo en el formulario que se est\xe1 validando."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$message")," es una variable predefinida en Laravel que contiene el mensaje de error espec\xedfico asociado al campo validado.")),(0,r.kt)("p",{parentName:"li"},"La directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@error")," se utiliza dentro del bloque de c\xf3digo del formulario para mostrar mensajes de error debajo de los campos correspondientes. Si se encuentra un error de validaci\xf3n para el campo especificado, se mostrar\xe1 el mensaje de error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@errors"),": La directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@errors")," se utiliza para verificar si hay errores de validaci\xf3n en general, sin hacer referencia a campos espec\xedficos. Proporciona una forma conveniente de comprobar si hay alg\xfan error en cualquier campo del formulario."),(0,r.kt)("p",{parentName:"li"},"Ejemplo de uso:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'@if ($errors->any())\n    <div class="alert alert-danger">\n        <ul>\n            @foreach ($errors->all() as $error)\n                <li>{{ $error }}</li>\n            @endforeach\n        </ul>\n    </div>\n@endif\n')),(0,r.kt)("p",{parentName:"li"},"Explicaci\xf3n:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$errors")," es una variable predefinida en Laravel que contiene los errores de validaci\xf3n. Proporciona m\xe9todos para verificar si hay errores, obtener los errores en diferentes formatos, etc."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$errors->any()")," es un m\xe9todo que verifica si hay alg\xfan error de validaci\xf3n.")),(0,r.kt)("p",{parentName:"li"},"La directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@errors")," se utiliza para envolver un bloque de c\xf3digo que se ejecutar\xe1 solo si se encuentran errores de validaci\xf3n en cualquier campo del formulario. En el ejemplo anterior, se muestra una alerta de color rojo que contiene una lista desordenada con todos los mensajes de error encontrados."))),(0,r.kt)("p",{parentName:"admonition"},"Resumiendo, la directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@error")," se utiliza para mostrar mensajes de error espec\xedficos asociados a campos de formulario individuales, mientras que la directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@errors")," se utiliza para verificar si hay errores de validaci\xf3n en general y mostrar mensajes de error generales. Ambas directivas son herramientas poderosas para manejar la validaci\xf3n y proporcionar retroalimentaci\xf3n adecuada al usuario en los formularios de Laravel.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"}," {!! Form::open(['url' => route('anuncios.store'), 'method' => 'POST', 'enctype' => 'multipart/form-data']) !!}\n    {!! Form::token() !!}\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <div class=\"form-group\">\n                {!! Form::label('titulo', 'T\xedtulo', ['class' => 'text-sm']) !!}\n                {!! Form::text('titulo', null, ['class' => 'form-control', 'required']) !!}\n                @error('titulo')\n                    <span class=\"text-danger\">{{ $message }}</span>\n                @enderror\n            </div>\n            <div class=\"form-group\">\n                {!! Form::label('description', 'Descripci\xf3n') !!}\n                {!! Form::textarea('description', null, ['class' => 'form-control', 'rows' => 5, 'required']) !!}\n                @error('description')\n                    <span class=\"text-danger\">{{ $message }}</span>\n                @enderror\n            </div>\n            <div class=\"form-group\">\n                {!! Form::label('imagen', 'Imagen') !!}\n                {!! Form::file('imagen', ['class' => 'form-control-file', 'accept' => 'image/*', 'required', 'max' => '2048']) !!}\n                @error('imagen')\n                    <span class=\"text-danger\">{{ $message }}</span>\n                @enderror\n            </div>\n            <div class=\"col-lg-10\">\n                {!! Form::select(\n                    'subcategoria_id',\n                    $categorias->flatMap(function ($categoria) {\n                        return [$categoria->nombre => $categoria->subcategorias->pluck('nombre', 'id')];\n                    }),\n                    null,\n                    ['class' => 'form-control'],\n                ) !!}\n                @error('subcategoria_id')\n                    <span class=\"text-danger\">{{ $message }}</span>\n                @enderror\n            </div>\n        </div>\n        \n        <div class=\"col-lg-6\">\n            \n            <div class=\"form-group\">\n                {!! Form::label('telefono', 'Tel\xe9fono') !!}\n                {!! Form::tel('telefono', null, ['class' => 'form-control']) !!}\n                @error('telefono')\n                    <span class=\"text-danger\">{{ $message }}</span>\n                @enderror\n            </div>\n            <div class=\"form-group\">\n                {!! Form::label('estado_id', 'Estado') !!}\n                {!! Form::select('estado_id', $estados->pluck('nombre', 'id'), null, ['class' => 'form-control', 'required']) !!}\n                @error('estado_id')\n                    <span class=\"text-danger\">{{ $message }}</span>\n                @enderror\n            </div>\n            <div class=\"form-group\">\n                {!! Form::label('provincia', 'Provincia') !!}\n                {!! Form::select('provincia', $provincias->pluck('nombre', 'codigo'), null, [\n                    'class' => 'form-control',\n                    'required',\n                ]) !!}\n                @error('provincia')\n                    <span class=\"text-danger\">{{ $message }}</span>\n                @enderror\n            </div>\n\n            <div class=\"form-group\">\n                {!! Form::label('poblacion', 'Poblaci\xf3n') !!}\n                {!! Form::select('cod_postal', $poblaciones->pluck('nombre', 'codigo'), null, [\n                    'class' => 'form-control',\n                    'required',\n                ]) !!}\n                @error('cod_postal')\n                    <span class=\"text-danger\">{{ $message }}</span>\n                @enderror\n            </div>\n\n            <div class=\"form-group\">\n                {!! Form::label('precio', 'Precio') !!}\n                {!! Form::number('precio', null, ['class' => 'form-control','required']) !!}\n                @error('precio')\n                    <span class=\"text-danger\">{{ $message }}</span>\n                @enderror\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        {!! Form::submit('Guardar', ['class' => 'btn btn-danger mx-auto']) !!}\n\n    </div>\n    {!! Form::close() !!}\n")),(0,r.kt)("admonition",{title:"An\xe1lisis del formulario",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Veamos en detalle lo que hace cada parte del formulario:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{!! Form::open(['url' => route('anuncios.store'), 'method' => 'POST', 'enctype' => 'multipart/form-data']) !!}"),": Esta l\xednea genera la etiqueta de apertura del formulario. ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::open")," se utiliza para especificar la ruta y el m\xe9todo HTTP que se utilizar\xe1 cuando se env\xede el formulario. En este caso, la URL se establece mediante la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"route('anuncios.store')"),", que genera la URL correspondiente a la ruta con nombre ",(0,r.kt)("inlineCode",{parentName:"p"},"'anuncios.store'"),". El m\xe9todo HTTP se establece en ",(0,r.kt)("inlineCode",{parentName:"p"},"'POST'"),", lo que significa que los datos del formulario se enviar\xe1n al servidor como parte del cuerpo de la solicitud POST. El atributo ",(0,r.kt)("inlineCode",{parentName:"p"},"enctype")," se establece en ",(0,r.kt)("inlineCode",{parentName:"p"},"'multipart/form-data'"),", lo que permite el env\xedo de archivos junto con los datos del formulario.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{!! Form::token() !!}"),": Esta l\xednea genera un campo oculto en el formulario que contiene un token CSRF (Cross-Site Request Forgery). El token CSRF ayuda a proteger el formulario contra ataques maliciosos. Laravel incluye autom\xe1ticamente este campo oculto cuando se utiliza ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::open()")," para abrir un formulario.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El formulario contiene varios grupos de campos de entrada y selecci\xf3n. Cada grupo de campos est\xe1 envuelto en una etiqueta ",(0,r.kt)("inlineCode",{parentName:"p"},"div"),' con la clase "form-group". Dentro de cada grupo, se generan elementos de formulario usando las funciones proporcionadas por Laravel Collective.'),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Form::label"),": Genera una etiqueta de formulario ",(0,r.kt)("inlineCode",{parentName:"li"},"<label>"),". Toma tres par\xe1metros: el nombre del campo, el texto del etiqueta y, opcionalmente, un array de atributos adicionales para el elemento HTML."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Form::text"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Form::textarea"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Form::file"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Form::select"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Form::tel"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Form::number"),": Generan campos de entrada de texto, \xe1reas de texto, campos de archivo, selectores, campos de tel\xe9fono y campos num\xe9ricos, respectivamente. Toman tres par\xe1metros: el nombre del campo, el valor predeterminado (opcional) y un array de atributos adicionales para el elemento HTML."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@error"),": Se utiliza para mostrar mensajes de error asociados a cada campo de entrada. Si se encuentra un error de validaci\xf3n para un campo espec\xedfico, se muestra el mensaje de error correspondiente."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{!! Form::submit('Guardar', ['class' => 'btn btn-danger mx-auto']) !!}"),": Esta l\xednea genera un bot\xf3n de env\xedo del formulario. Toma dos par\xe1metros: el texto del bot\xf3n y un array de atributos adicionales para el elemento HTML.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{!! Form::close() !!}"),": Esta l\xednea genera la etiqueta de cierre del formulario. Marca el final del formulario generado por Laravel Collective."))),(0,r.kt)("p",{parentName:"admonition"},"En resumen, el formulario generado por Laravel Collective permite al usuario ingresar datos en diferentes campos y enviarlos al servidor mediante una solicitud POST. Los campos de entrada est\xe1n predefinidos con nombres y atributos espec\xedficos, y se incluyen mensajes de error personalizados utilizando la directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@error"),". Al enviar el formulario, los datos se enviar\xe1n a la ruta ",(0,r.kt)("inlineCode",{parentName:"p"},"'anuncios.store'")," en el servidor para su procesamiento.")),(0,r.kt)("p",null,"Recordemos que todas las validaciones se implementan a nivel de controlador. En este caso, en el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"store")," del controlador ",(0,r.kt)("inlineCode",{parentName:"p"},"AnuncioController"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"public function store(Request $request)\n{\n    // Validar los datos del formulario\n    $request->validate([\n        'titulo' => 'required|string|max:255',\n        'description' => 'required|string',\n        'imagen' => 'required|image|max:2048',\n        'precio' => 'required|numeric',\n        'subcategoria_id' => 'required|exists:subcategorias,id',\n        'provincia' => 'required|string|max:255',\n        'telefono' => 'required|string|max:255',\n        'estado_id' => 'required'\n    ]);\n\n    $userId = Auth::id(); // Obtener el ID del usuario autenticado\n\n    // Crear una nueva instancia de Anuncio con los datos del formulario\n    $anuncio = new Anuncio($request->all());\n\n    $anuncio->user_id = $userId; // Asignar el ID del usuario al anuncio\n\n    if ($request->hasFile('imagen')) {\n        // Si se ha proporcionado una imagen, almacenarla en el sistema de archivos\n        $path = $request->file('imagen')->store('/public/images');\n        $url = '/storage/images/' . basename($path);\n        $anuncio->imagen = $url; // Asignar la URL de la imagen al anuncio\n    }\n\n    $anuncio->save(); // Guardar el anuncio en la base de datos\n\n    // Retornar la vista 'anuncios.showCreateFotos' y pasar el anuncio como dato\n    return view('anuncios.showCreateFotos', compact('anuncio'));\n}\n")),(0,r.kt)("p",null,"Los mensajes de error o validaci\xf3n se definen en el archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"lang/es/validation.php"),", donde ",(0,r.kt)("inlineCode",{parentName:"p"},"es")," se corresponde con el idioma predefinido en el archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"config/app.php"),"."),(0,r.kt)("p",null,"Por otra parte, cabe mencionar que las validaciones se efectuar\xe1n en dos fases:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Una validaci\xf3n en el cliente que se define de la siguiente forma:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<div class=\"form-group\">\n    {!! Form::label('titulo', 'T\xedtulo', ['class' => 'text-sm']) !!}\n    {!! Form::text('titulo', null, ['class' => 'form-control', 'required']) !!}\n    @error('titulo')\n        <span class=\"text-danger\">{{ $message }}</span>\n    @enderror\n</div>\n")),(0,r.kt)("p",null,"En este caso, en el tercer par\xe1metro de ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::text"),", se indica que el campo del formulario 'titulo' es de la clase 'form-control' y es requerido."),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"La validaci\xf3n del lado del servidor, como se explic\xf3 anteriormente, se encarga el controlador. Si estas validaciones no se cumplen y deseamos mostrar un mensaje al usuario, utilizamos la directiva ",(0,r.kt)("inlineCode",{parentName:"li"},"@error")," debajo del input 'titulo'. Esta directiva mostrar\xe1 el mensaje de error asociado al campo 'T\xedtulo' en texto de color rojo. De esta forma se define para cada uno de los controles de nuestro formulario.")),(0,r.kt)("h3",{id:"subida-de-im\xe1genes-al-servidor"},"Subida de im\xe1genes al servidor"),(0,r.kt)("p",null,"Como has podido observar en nuestro formulario, tenemos un campo de tipo 'input file'. Este tipo de input nos permite subir archivos al servidor. Para ello, tambi\xe9n debemos indicar en ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::open"),", adem\xe1s de la action y el m\xe9todo, la propiedad ",(0,r.kt)("inlineCode",{parentName:"p"},"enctype"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"{!! Form::open(['url' => route('anuncios.store\n\n'), 'method' => 'POST', 'enctype' => 'multipart/form-data']) !!}\n")),(0,r.kt)("p",null,"Este ",(0,r.kt)("inlineCode",{parentName:"p"},"input file")," tiene las siguientes caracter\xedsticas:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<div class=\"form-group\">\n    {!! Form::label('imagen', 'Imagen') !!}\n    {!! Form::file('imagen', ['class' => 'form-control-file', 'accept' => 'image/*', 'required', 'max' => '2048']) !!}\n    @error('imagen')\n        <span class=\"text-danger\">{{ $message }}</span>\n    @enderror\n</div>\n")),(0,r.kt)("p",null,"En el atributo ",(0,r.kt)("inlineCode",{parentName:"p"},"'accept' => 'image/*'"),", se permite cualquier archivo de tipo imagen, y en el atributo ",(0,r.kt)("inlineCode",{parentName:"p"},"'max' => '2048'"),", se establece el l\xedmite de tama\xf1o del archivo en 2 MB."),(0,r.kt)("h4",{id:"implementaci\xf3n-en-el-lado-del-servidor"},"Implementaci\xf3n en el lado del servidor"),(0,r.kt)("p",null,"Los pasos anteriormente descritos, solo sirven para preparar nuestro formulario para la subida de im\xe1genes, nos falta implementar la l\xf3gica de negocio nuestro controlador en el m\xe9todo ",(0,r.kt)("strong",{parentName:"p"},"store"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"if ($request->hasFile('imagen')) {\n    $path = $request->file('imagen')->store('/public/images');\n    $url = '/storage/images/' . basename($path);\n    $anuncio->imagen = $url;\n}\n")),(0,r.kt)("p",null,"Por supuesto, aqu\xed tienes una explicaci\xf3n del c\xf3digo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"if ($request->hasFile('imagen')) {\n    $path = $request->file('imagen')->store('/public/images');\n    $url = '/storage/images/' . basename($path);\n    $anuncio->imagen = $url;\n}\n")),(0,r.kt)("p",null,"En este fragmento de c\xf3digo verifica si se ha enviado un archivo con el nombre 'imagen' en la solicitud ",(0,r.kt)("inlineCode",{parentName:"p"},"$request")," utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"hasFile"),". Si el archivo est\xe1 presente, se ejecuta el bloque de c\xf3digo dentro del condicional."),(0,r.kt)("p",null,"Dentro del bloque condicional, se almacena el archivo en el sistema de archivos utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"store"),". La funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"store")," recibe una ubicaci\xf3n de almacenamiento como argumento. En este caso, se especifica ",(0,r.kt)("inlineCode",{parentName:"p"},"'/public/images'")," como ubicaci\xf3n de almacenamiento, lo que significa que el archivo se almacenar\xe1 en la carpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"public/images")," dentro del sistema de archivos de la aplicaci\xf3n."),(0,r.kt)("p",null,"Despu\xe9s de almacenar el archivo, se crea una URL para acceder a \xe9l. La variable ",(0,r.kt)("inlineCode",{parentName:"p"},"$path")," contiene la ruta completa del archivo almacenado. Se utiliza la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"basename")," para obtener solo el nombre del archivo con su extensi\xf3n. Luego, se concatena este nombre de archivo con ",(0,r.kt)("inlineCode",{parentName:"p"},"'/storage/images/'")," para formar la URL completa donde se puede acceder al archivo."),(0,r.kt)("p",null,"Finalmente, se asigna la URL de la imagen al atributo ",(0,r.kt)("inlineCode",{parentName:"p"},"imagen")," del objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"$anuncio"),". Esto puede ser parte de la l\xf3gica de guardar la informaci\xf3n del anuncio junto con la URL de la imagen en la base de datos."),(0,r.kt)("p",null,"Resumiendo, este c\xf3digo verifica si se ha enviado un archivo de imagen en la solicitud y, en caso afirmativo, lo almacena en el sistema de archivos y guarda la URL correspondiente en el objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"$anuncio"),". Esto permite que el anuncio tenga una imagen asociada que se puede mostrar o utilizar posteriormente en la aplicaci\xf3n."),(0,r.kt)("p",null,"Por \xfaltimo deber\xe1 ejecutar el siguiente comando de su terminal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan storage:link\n")),(0,r.kt)("admonition",{title:"Storage Link",type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"storage:link")," es un comando de Artisan en Laravel que crea un enlace simb\xf3lico (symbolic link) entre la carpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"public/storage")," y la carpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"storage/app/public"),". Este enlace simb\xf3lico permite acceder a los archivos almacenados en la carpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"storage/app/public")," a trav\xe9s de la URL p\xfablica de la aplicaci\xf3n."),(0,r.kt)("p",{parentName:"admonition"},"Cuando se utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"store")," para guardar un archivo en el sistema de archivos en Laravel, por defecto se guarda en la carpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"storage/app/public"),". Sin embargo, para acceder a estos archivos desde la web, es necesario que est\xe9n ubicados en la carpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"public"),", que es la carpeta ra\xedz p\xfablica de la aplicaci\xf3n."),(0,r.kt)("p",{parentName:"admonition"},"Aqu\xed es donde entra en juego ",(0,r.kt)("inlineCode",{parentName:"p"},"storage:link"),". Al ejecutar este comando, se crea un enlace simb\xf3lico entre ",(0,r.kt)("inlineCode",{parentName:"p"},"public/storage")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"storage/app/public"),". Esto significa que cualquier archivo almacenado en ",(0,r.kt)("inlineCode",{parentName:"p"},"storage/app/public")," ser\xe1 accesible a trav\xe9s de la URL p\xfablica utilizando la ruta ",(0,r.kt)("inlineCode",{parentName:"p"},"storage/"),"."),(0,r.kt)("p",{parentName:"admonition"},"Por ejemplo, si tienes un archivo de imagen llamado ",(0,r.kt)("inlineCode",{parentName:"p"},"imagen.jpg")," almacenado en ",(0,r.kt)("inlineCode",{parentName:"p"},"storage/app/public/images"),", despu\xe9s de ejecutar ",(0,r.kt)("inlineCode",{parentName:"p"},"storage:link"),", podr\xe1s acceder a esa imagen a trav\xe9s de la URL ",(0,r.kt)("inlineCode",{parentName:"p"},"public/storage/images/imagen.jpg"),"."),(0,r.kt)("p",{parentName:"admonition"},"En resumen, ",(0,r.kt)("inlineCode",{parentName:"p"},"storage:link")," es necesario para crear un enlace simb\xf3lico entre la carpeta de almacenamiento privada de Laravel y la carpeta p\xfablica de la aplicaci\xf3n. Esto permite acceder a los archivos almacenados en la carpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"storage/app/public")," a trav\xe9s de URLs p\xfablicas y utilizarlos en la interfaz de usuario de la aplicaci\xf3n.")),(0,r.kt)("h3",{id:"subida-m\xfaltiple-de-im\xe1genes-al-servidor"},"Subida m\xfaltiple de im\xe1genes al servidor"),(0,r.kt)("p",null,'Despu\xe9s de hacer clic en el bot\xf3n "Guardar" en la vista anterior, seremos redirigidos a la vista ',(0,r.kt)("strong",{parentName:"p"},"Anuncios.showCreateFotos"),", que tendr\xe1 un aspecto similar a la siguiente imagen:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Anuncio de PC",src:n(7536).Z,width:"1366",height:"1486"})),(0,r.kt)("p",null,"En esta vista, podemos ver la imagen principal del art\xedculo/anuncio, su descripci\xf3n, precio, etc. Despu\xe9s de mostrar todos estos datos, se nos presenta un recuadro que nos invita a insertar m\xe1s im\xe1genes. Este recuadro ha sido desarrollado utilizando el plugin JavaScript ",(0,r.kt)("strong",{parentName:"p"},"DropZone"),"."),(0,r.kt)("p",null,"Este plugin tiene caracter\xedsticas muy interesantes, como la capacidad de subir m\xfaltiples im\xe1genes a la vez simplemente arrastr\xe1ndolas y solt\xe1ndolas."),(0,r.kt)("h4",{id:"qu\xe9-es-dropzone"},"\xbfQu\xe9 es DropZone?"),(0,r.kt)("p",null,"Dropzone es una librer\xeda que te permite subir archivos a tu p\xe1gina web de manera sencilla. Puedes imaginarlo como una caja especial en tu sitio web donde puedes arrastrar y soltar archivos desde tu computadora."),(0,r.kt)("p",null,"En lugar de buscar los archivos en tu computadora y hacer clic en un bot\xf3n para subirlos, con Dropzone solo necesitas arrastrar los archivos y soltarlos en la caja. Los archivos se cargar\xe1n autom\xe1ticamente en tu p\xe1gina web."),(0,r.kt)("p",null,"La ventaja es que puedes subir varios archivos a la vez, lo cual es m\xe1s r\xe1pido y c\xf3modo. Mientras los archivos se est\xe1n cargando, Dropzone te mostrar\xe1 mensajes y el progreso para que sepas c\xf3mo va todo."),(0,r.kt)("p",null,"Adem\xe1s, puedes personalizar la apariencia de Dropzone para que se vea bien en tu p\xe1gina web. Puedes cambiar los colores y hacer que se adapte a tu dise\xf1o."),(0,r.kt)("p",null,"En resumen, Dropzone es una manera f\xe1cil y pr\xe1ctica de subir archivos a tu p\xe1gina web. Solo arrastra y suelta los archivos y estar\xe1n listos para usar."),(0,r.kt)("p",null,"En el siguiente ejemplo vamos a subir 5 im\xe1genes utilizando DropZone."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Soltar y arrastrar con DropZone",src:n(6334).Z,width:"1366",height:"768"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:"title='C\xf3digo de la vista'",title:"'C\xf3digo",de:!0,la:!0,"vista'":!0},'@extends(\'layout.layout\') \x3c!-- Extiende la plantilla de dise\xf1o llamada \'layout.layout\' --\x3e\n\n@section(\'title\', \'P\xe1gina de inicio\') \x3c!-- Define el t\xedtulo de la p\xe1gina --\x3e\n\n@section(\'content\') \x3c!-- Inicia la secci\xf3n de contenido principal --\x3e\n    <section class="container mt-8 ">\n        <div class="card col-lg-10 mx-auto">\n            <div class="card-header m-1">\n\n                \x3c!-- Muestra el t\xedtulo del anuncio --\x3e\n                <h4 class="resaltado text-center"><b>{{ $anuncio->titulo }}</b></h4>\n\n                \x3c!-- Muestra el precio del anuncio --\x3e\n                <h5 class="text-center">Precio : <b>{{ $anuncio->precio }}</h5>\n\n                \x3c!-- Muestra el estado del anuncio, la categor\xeda y la subcategor\xeda --\x3e\n                <h5 class="text-center"></b> Estado :\n                    <b>{{ $anuncio->estado->nombre }}</b>\n                    Categor\xeda : <b>{{ $anuncio->subcategoria->categoria->nombre }}</b>\n                    SubCategor\xeda : <b>{{ $anuncio->subcategoria->nombre }}</b>\n                </h5>\n            </div>\n            <div class="card-body m-1">\n\n                \x3c!-- Muestra la imagen del anuncio --\x3e\n                <img src="{{ $anuncio->imagen }}" class="d-block w-100" alt="{{ $anuncio->titulo }}">\n                <div class="container mt-4">\n                    \x3c!-- Muestra la descripci\xf3n del anuncio --\x3e\n                    <h5>{{ $anuncio->description }}</h5>\n                </div>\n\n                <div class="form-group">\n                    <h4 class="text-center resaltado">\xbfDesea incluir m\xe1s im\xe1genes?</h4>\n                    \x3c!-- DropZone --\x3e\n                    <form action="{{ route(\'fotos.store\') }}" method="POST" enctype="multipart/form-data" class="dropzone"\n                        id="myDropzone">\n                        @csrf\n                        <input type="hidden" name="anuncio_id" value="{{ $anuncio->id }}">\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    </section>\n@endsection\n\n@section(\'css\')\n    \x3c!-- Estilos de la vista--\x3e\n    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.2/min/dropzone.min.css"\n        crossorigin="anonymous" />\n@endsection\n\n@section(\'js\')\n    <script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"><\/script>\n    <script>\n        Dropzone.options.myDropzone = {\n            paramName: \'imagen\',\n            maxFilesize: 2, \x3c!-- Tama\xf1o m\xe1ximo del archivo en megabytes --\x3e\n            acceptedFiles: \'.jpg, .jpeg, .png\', \x3c!-- Tipos de archivo aceptados --\x3e\n            dictDefaultMessage: \'Arrastra los archivos aqu\xed para subirlos\',\n            maxFiles: 6, \x3c!-- L\xedmite m\xe1ximo de archivos --\x3e\n            init: function() {\n                this.on(\'error\', function(file, errorMessage) {\n                    // Manejar errores de carga de archivos aqu\xed\n                });\n            },\n        };\n    <\/script>\n@endsection\n')),(0,r.kt)("h4",{id:"configuraci\xf3n-de-dropzone"},"Configuraci\xf3n de DropZone"),(0,r.kt)("p",null,"En esta vista, se utiliza Dropzone para permitir a los usuarios cargar im\xe1genes adicionales para un anuncio. Aqu\xed hay una explicaci\xf3n paso a paso de c\xf3mo funciona:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Se incluye la biblioteca ",(0,r.kt)("strong",{parentName:"li"},"Dropzone")," en la secci\xf3n de JavaScript:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"><\/script>\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Se configura Dropzone en el formulario de carga de im\xe1genes con el ID ",(0,r.kt)("inlineCode",{parentName:"li"},"myDropzone"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<form action="{{ route(\'fotos.store\') }}" method="POST" enctype="multipart/form-data" class="dropzone" id="myDropzone">\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"La acci\xf3n del formulario se establece en la ruta ",(0,r.kt)("inlineCode",{parentName:"li"},"fotos.store"),", que es la ruta para almacenar las im\xe1genes en el servidor."),(0,r.kt)("li",{parentName:"ul"},"El atributo ",(0,r.kt)("inlineCode",{parentName:"li"},"enctype")," se establece en ",(0,r.kt)("inlineCode",{parentName:"li"},"multipart/form-data")," para permitir la carga de archivos.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Se configuran opciones espec\xedficas de Dropzone dentro de la secci\xf3n de JavaScript:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n    Dropzone.options.myDropzone = {\n        paramName: 'imagen',\n        maxFilesize: 2,\n        acceptedFiles: '.jpg, .jpeg, .png',\n        dictDefaultMessage: 'Arrastra los archivos aqu\xed para subirlos',\n        maxFiles: 6,\n        init: function() {\n            this.on('error', function(file, errorMessage) {\n                // Manejar errores de carga de archivos aqu\xed\n            });\n        },\n    };\n<\/script>\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"paramName")," indica el nombre del campo en el formulario que contendr\xe1 los archivos cargados. En este caso, se establece en ",(0,r.kt)("inlineCode",{parentName:"li"},"'imagen'"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"maxFilesize")," establece el tama\xf1o m\xe1ximo permitido para los archivos, en este caso, 2 megabytes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"acceptedFiles")," especifica los tipos de archivos aceptados, en este caso, archivos con extensi\xf3n ",(0,r.kt)("inlineCode",{parentName:"li"},".jpg"),", ",(0,r.kt)("inlineCode",{parentName:"li"},".jpeg")," y ",(0,r.kt)("inlineCode",{parentName:"li"},".png"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dictDefaultMessage")," establece el mensaje predeterminado que se muestra en el \xe1rea de carga de archivos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"maxFiles")," establece el n\xfamero m\xe1ximo de archivos que se pueden cargar."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"init")," es una funci\xf3n de inicializaci\xf3n de Dropzone que permite ejecutar c\xf3digo personalizado. En este caso, se agrega un controlador de eventos para manejar errores de carga de archivos.")),(0,r.kt)("p",null,"La operativa de carga en el servidor y la l\xf3gica de negocio se implementa en el controlador\n",(0,r.kt)("strong",{parentName:"p"},"FotoController")," en su m\xe9todo ",(0,r.kt)("strong",{parentName:"p"},"store"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:"title='M\xe9todo store del controlador FotoController'",title:"'M\xe9todo",store:!0,del:!0,controlador:!0,"FotoController'":!0}," public function store(Request $request)\n    {\n        // Validar la solicitud\n       $request->validate([\n            'imagen' => 'required|image|max:2048',// Reemplaza las reglas de validaci\xf3n seg\xfan tus necesidades\n            'anuncio_id'=>'required'\n        ]);\n\n        // Obtener el archivo de imagen\n        $imagen = $request->file('imagen');\n\n        // Procesar y guardar la imagen\n        $ruta = $imagen->store('public/images'); // Guarda la imagen en una carpeta espec\xedfica, ajusta la ruta seg\xfan tus necesidades\n        $url = '/storage/images/' . basename($ruta);\n        // Crear una nueva instancia de Foto y guardarla en la base de datos\n        $foto = Foto::create([\n            'path' => $url,\n            'anuncio_id' => $request->anuncio_id,\n        ]);\n    }\n")),(0,r.kt)("h4",{id:"qu\xe9-hace"},"\xbfQu\xe9 hace?"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Validaci\xf3n de la solicitud:"),' Se valida que la solicitud contenga los campos requeridos y cumpla con ciertas reglas de validaci\xf3n. En este caso, se valida que el campo "imagen" sea requerido y que sea un archivo de imagen v\xe1lido con un tama\xf1o m\xe1ximo de 2048 KB.')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Obtener el archivo de imagen:")," Se obtiene el archivo de imagen enviado en la solicitud utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"file('imagen')")," del objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"$request"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Procesar y guardar la imagen:")," El siguiente paso es procesar y guardar la imagen en el servidor. En este caso, se utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"store()")," del objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"$imagen"),". Este m\xe9todo guarda el archivo en una ubicaci\xf3n espec\xedfica en el sistema de archivos y devuelve la ruta donde se almacen\xf3.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Crear una nueva instancia de Foto y guardarla en la base de datos:")," Se crea una nueva instancia del modelo ",(0,r.kt)("inlineCode",{parentName:"p"},"Foto")," y se asigna la ruta de la imagen guardada y el ID del anuncio relacionado. Luego, se guarda esta instancia en la base de datos utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"create()")," del modelo ",(0,r.kt)("inlineCode",{parentName:"p"},"Foto"),"."))),(0,r.kt)("p",null,"En definitiva, este m\xe9todo se encarga de validar y procesar una imagen enviada a trav\xe9s de una solicitud HTTP. Valida que el archivo sea una imagen v\xe1lida y cumpla con los requisitos de tama\xf1o. Luego, guarda la imagen en una ubicaci\xf3n espec\xedfica en el servidor y crea un registro en la base de datos asociado a un anuncio."),(0,r.kt)("p",null,"Ahora si consultamos nuestra base de datos de Anuncios y consultamos la tabla ",(0,r.kt)("strong",{parentName:"p"},"fotos")," podremos observar commo se han insertado 5 anuncios."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Tabla fotos",src:n(9060).Z,width:"1366",height:"768"})),(0,r.kt)("h2",{id:"editar-y-borrar-anuncios"},"Editar y borrar anuncios"),(0,r.kt)("p",null,"En esta secci\xf3n nos concentraremos en la parte edici\xf3n y borrado de anuncios. Estas operaciones est\xe1n restringidas solo a usuarios registrados como pudimos ver en la secci\xf3n de publicaci\xf3n de anuncios, sin embargo estas operaciones tambi\xe9n contemplan algunas restricciones m\xe1s, como que solo pueden borrar y editar anuncios los usuarios propietarios del anuncio, as\xed como los administradores."),(0,r.kt)("h3",{id:"modificando-nuestra-vista-home"},"Modificando nuestra vista Home"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Anuncios",src:n(8098).Z,width:"1156",height:"717"})),(0,r.kt)("p",null,"En esta vista podemos observar como en el tercer anuncio, en la parte superior aparece un icono. Este icono indica que este anuncio puede ser editado y borrado por el usuario actualmente autenticado, ya que es el propietario de este anuncio."),(0,r.kt)("p",null,"Para a\xf1adir esta nueva caracter\xedstica, deberemos modificar el c\xf3digo de la vista Home e introducir las siguientes modificaciones en la parte que corresponda."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},' @foreach ($anuncios as $anuncio)\n    <div class="card3 col-lg-4 mx-auto">\n        <a href="/anuncios/{{ $anuncio->id }}">\n            <div class="card-title m-1">\n                <p class="resaltado">\n                    \x3c!-- Si el usuario esta autenticado --\x3e\n                    @auth\n                        \x3c!-- Si el propietario del anuncio coincide con\n                            el usuario utenticado --\x3e\n                        @if (auth()->user()->id == $anuncio->user_id)\n                            <i class="fas fa-edit mr-1"></i>\n                        @endif\n                    @endauth\n                    {{ $anuncio->titulo }}</p>\n            </div>\n            <div class="card-body m-1">\n                \n                <img src="{{ $anuncio->imagen }}" class="d-block w-100 rounded" alt="{{ $anuncio->titulo }}">\n                <p>{{ $anuncio->description }}</p>\n                precio : <b>{{ $anuncio->precio ."\u20ac"}}</b>\n            </div>\n        </a>\n    </div>\n@endforeach\n')),(0,r.kt)("h4",{id:"qu\xe9-hace-el-c\xf3digo"},"\xbfQu\xe9 hace el c\xf3digo?"),(0,r.kt)("p",null,"Aqu\xed est\xe1 una descripci\xf3n simplificada de lo que hace:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Para cada anuncio en la lista de anuncios:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Se muestra una tarjeta que contiene el t\xedtulo, la imagen, la descripci\xf3n y el precio del anuncio."),(0,r.kt)("li",{parentName:"ul"},"Si el usuario est\xe1 autenticado y es el propietario del anuncio, se muestra un icono de edici\xf3n junto al t\xedtulo."),(0,r.kt)("li",{parentName:"ul"},"El t\xedtulo del anuncio es un enlace que lleva al usuario a la p\xe1gina del anuncio espec\xedfico."),(0,r.kt)("li",{parentName:"ul"},"La imagen del anuncio se muestra con un borde redondeado y ocupa todo el ancho de la tarjeta."),(0,r.kt)("li",{parentName:"ul"},"La descripci\xf3n y el precio del anuncio se muestran debajo de la imagen.")))),(0,r.kt)("p",null,"En resumen, el c\xf3digo genera una interfaz visualmente agradable para mostrar una lista de anuncios, con opciones de edici\xf3n para los propietarios de los anuncios."),(0,r.kt)("h3",{id:"modificando-la-vista-anunciosshow"},"Modificando la vista anuncios.show"),(0,r.kt)("p",null," A esta vista le vamos a introducirle un par de modificaciones como se puede observar\nen la imagen:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Anuncio.show",src:n(6180).Z,width:"1366",height:"1204"})),(0,r.kt)("p",null,"Notar\xe1 que a parte de ampliar y formatear datos en la cabecera en la tarjeta del producto hemos introducido dos botones nuevo. Uno para editar y borrar. Estos botones solo se muestran\nsi el usuario esta autenticado y es propietario del anuncio. El c\xf3digo asociado a esta vista quedar\xeda as\xed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:"title='anuncios.show'",title:"'anuncios.show'"},'@extends(\'layout.layout\')\n\n@section(\'title\', \'P\xe1gina de inicio\')\n\n@section(\'content\')\n    <section class="container mt-8 ">\n        <div class="card col-lg-10 mx-auto">\n            \x3c!-- \n                Solo si el usuario esta autenticado --\x3e\n            @auth\n                \x3c!-- Si el usuario autenticado coincidde con\n                    el propietario del anuncios --\x3e\n                @if (auth()->user()->id == $anuncio->user_id)\n                    <div class="row m-2">\n                        <div class="col-sm-2 mt-1">\n                            \x3c!-- Bot\xf3n para editar el anuncio --\x3e\n                            <a href="{{ route(\'anuncios.edit\', [\'id\' => $anuncio->id]) }}"\n                                class="btn btn-danger col-sm-12">Editar</a>\n                        </div>\n                        <form action="{{ route(\'anuncios.delete\', [\'id\' => $anuncio->id]) }}" method="POST" class="col-sm-2">\n                            @csrf\n                            @method(\'DELETE\')\n                            \x3c!-- Bot\xf3n para borrar el anuncio --\x3e\n                            <button type="submit" class="btn btn-danger col-sm-12 m-1">Borrar</button>\n                        </form>\n\n                    </div>\n                @endif\n            @endauth\n            <div class="card-header m-1">\n                <h4 class="resaltado text-center"><b>{{ $anuncio->titulo }}</b></h4>\n                <h5>\n                    <div class="row">\n                        <div class="col-lg-6">\n                            <p><b>Estado:</b> {{ $anuncio->estado->nombre }}</p>\n                            <p>Categor\xeda: <b>{{ $anuncio->subcategoria->categoria->nombre }}</b></p>\n                            <p>SubCategor\xeda: <b>{{ $anuncio->subcategoria->nombre }}</b></p>\n                        </div>\n                        <div class="col-lg-6">\n                            <p>Precio: <b>{{ $anuncio->precio . \'\u20ac\' }}</b></p>\n                            <p>Tel\xe9fono: <b>{{ $anuncio->telefono }}</b></p>\n                            <p>Provincia: <b>{{ $provincia->nombre }}</b></p>\n                            <p>Poblaci\xf3n: <b>{{ $poblacion->nombre }}</b></p>\n                        </div>\n                </h5>\n            </div>\n            <div class="card-body m-1">\n                <div class="container mt-4">\n                    <h5>{{ $anuncio->description }}</h5>\n                </div>\n                \x3c!-- Imagen principal del anuncio --\x3e\n                <img src="{{ $anuncio->imagen }}" class="d-block w-100" alt="{{ $anuncio->titulo }}">\n                <div class="card3 mx-auto mt-1">\n                    <div class="row">\n                        \x3c!-- Bucle para mostrar las fotos adicionales del anuncio --\x3e\n                        @foreach ($anuncio->fotos as $foto)\n                            <div class="card3 col-lg-3 mx-auto mt-3">\n                                <img src="{{ $foto->path }}" alt="Foto del anuncio" width="180px" class="zoom">\n                            </div>\n                        @endforeach\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n@endsection\n')),(0,r.kt)("p",null,"Este c\xf3digo hace lo siguiente:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Muestra los detalles del anuncio, incluyendo el t\xedtulo, estado, categor\xeda, subcategor\xeda, precio, tel\xe9fono, provincia y poblaci\xf3n."),(0,r.kt)("li",{parentName:"ul"},"Muestra la descripci\xf3n del anuncio."),(0,r.kt)("li",{parentName:"ul"},"Muestra la imagen principal del anuncio."),(0,r.kt)("li",{parentName:"ul"},"Muestra las fotos adicionales del anuncio en tarjetas individuales."),(0,r.kt)("li",{parentName:"ul"},'Si el usuario autenticado es el propietario del anuncio, muestra los botones de "Editar" y "Borrar" para el anuncio.')),(0,r.kt)("h2",{id:"editar-anuncio"},"Editar anuncio"),(0,r.kt)("p",null,"La vista de edici\xf3n de anuncios nos permite editar todos los datos del anuncio, cambiar la imagen principal del anuncio, a\xf1adir y borrar im\xe1genes al anuncio."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Vista editar",src:n(1042).Z,width:"1366",height:"1767"})),(0,r.kt)("p",null,"A continuaci\xf3n muestro el c\xf3digo de esta vista, el cual iremos analizando a lo largo de esta secci\xf3n."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:"title='anuncios.edit'",title:"'anuncios.edit'"},"\n@extends('layout.layout')\n\n@section('title', 'Editar aanuncio')\n\n@section('content')\n\n    <div class=\"card2 col-lg-10 mx-auto mt-8 p-4\">\n        <h4 class=\"text-center resaltado\"><b>Editar anuncio<b></h4>\n        @if ($errors->any())\n            \x3c!-- Muestra los errores de validaci\xf3n --\x3e\n            <div class=\"alert alert-danger\">\n                <ul>\n                    @foreach ($errors->all() as $error)\n                        <li>{{ $error }}</li>\n                    @endforeach\n                </ul>\n            </div>\n        @endif\n\n        \x3c!-- Formulario de edici\xf3n de datos,\n            rellena los controles cob los valores del anuncio,\n            utiliza el m\xe9todo PUT para utilizar y el enctype`multipart/form-data'\n            para poder subir imagenres --\x3e\n        {!! Form::open([\n            'route' => ['anuncios.update', $anuncio->id],\n            'method' => 'PUT',\n            'enctype' => 'multipart/form-data',\n        ]) !!}\n        \x3c!-- CRSF token --\x3e\n        {!! Form::token() !!}\n        <div class=\"row\">\n            <div class=\"col-lg-6\">\n                <div class=\"form-group\">\n                    {!! Form::label('titulo', 'T\xedtulo', ['class' => 'text-sm']) !!}\n                    {!! Form::text('titulo', $anuncio->titulo, ['class' => 'form-control', 'required']) !!}\n                    @error('titulo')\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n                <div class=\"form-group\">\n                    <img id=\"preview-image\" src=\"{{ $anuncio->imagen }}\" class=\"d-block col-lg-10\"\n                        alt=\"{{ $anuncio->titulo }}\">\n                    {!! Form::label('imagen', 'Imagen') !!}\n                    {!! Form::file('imagen', [\n                        'class' => 'form-control-file',\n                        'accept' => 'image/*',\n                        'max' => '2048',\n                        'id' => 'image-input',\n                    ]) !!}\n                    \x3c!-- Mostrar errores de validaci\xf3n --\x3e\n                    @error('imagen')\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n                <div class=\"form-group\">\n                    {!! Form::label('subcategoria_id', 'Categor\xeda') !!}\n                    {!! Form::select(\n                        'subcategoria_id',\n                        $categorias->flatMap(function ($categoria) {\n                            return [$categoria->nombre => $categoria->subcategorias->pluck('nombre', 'id')];\n                        }),\n                        $anuncio->subcategoria_id,\n                        ['class' => 'form-control'],\n                    ) !!}\n                     \x3c!-- Mostrar errores de validaci\xf3n --\x3e\n                    @error('subcategoria_id')\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n                <div class=\"form-group\">\n                    {!! Form::label('estado_id', 'Estado') !!}\n                    {!! Form::select('estado_id', $estados->pluck('nombre', 'id'), $anuncio->id, [\n                        'class' => 'form-control',\n                        'required',\n                    ]) !!}\n                    \x3c!-- Mostrar errores de validaci\xf3n --\x3e\n                    @error('estado_id')\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n            </div>\n            <div class=\"col-lg-6\">\n                <div class=\"form-group\">\n                    {!! Form::label('description', 'Descripci\xf3n') !!}\n                    {!! Form::textarea('description', $anuncio->description, ['class' => 'form-control', 'rows' => 5, 'required']) !!}\n                    @error('description')\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n                <div class=\"form-group\">\n                    {!! Form::label('telefono', 'Tel\xe9fono') !!}\n                    {!! Form::tel('telefono', $anuncio->telefono, ['class' => 'form-control', 'required']) !!}\n                    @error('telefono')\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n\n                <div class=\"form-group\">\n                    {!! Form::label('provincia', 'Provincia') !!}\n                    {!! Form::select('provincia', $provincias->pluck('nombre', 'codigo'), $anuncio->provincia, [\n                        'class' => 'form-control',\n                        'required',\n                    ]) !!}\n                    @error('provincia')\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n\n                <div class=\"form-group\">\n                    {!! Form::label('poblacion', 'Poblaci\xf3n') !!}\n                    {!! Form::select('cod_postal', $poblaciones->pluck('nombre', 'codigo'), $anuncio->cod_postal, [\n                        'class' => 'form-control',\n                        'required',\n                    ]) !!}\n                    @error('cod_postal')\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n\n                <div class=\"form-group\">\n                    {!! Form::label('precio', 'Precio') !!}\n                    {!! Form::number('precio', $anuncio->precio, ['class' => 'form-control', 'required']) !!}\n                    @error('precio')\n                        <span class=\"text-danger\">{{ $message }}</span>\n                    @enderror\n                </div>\n                <div class=\"form-group\">\n                    {!! Form::submit('Actualizar', ['class' => 'btn btn-danger mx-auto']) !!}\n                    {!! Form::close() !!}\n                </div>\n\n            </div>\n            </div>\n            <div class=\"card3 mx-auto mt-1\">\n                <div class=\"row\">\n                    \x3c!-- Mostrar todas las im\xe1gnenes opcionales asociadas\n                        al anuncio --\x3e\n                    @foreach ($anuncio->fotos as $foto)\n                        <div class=\"card3 col-lg-3 mx-auto mt-3\">\n                            <img src=\"{{ $foto->path }}\" alt=\"Foto del anuncio\" width=\"180px\" class=\"zoom mx-auto\">\n                            \x3c!-- Anadir opcion de poder borrar la imagen --\x3e\n                            <div class=\"text-center\">\n                                <form action=\"{{ route('fotos.destroy', ['id' => $foto->id]) }}\" method=\"POST\">\n                                    @csrf\n                                    @method('DELETE')\n                                    <button type=\"submit\" class=\"btn btn-danger mt-2 ml-6 btn-block\">Borrar</button>\n                                </form>\n                            </div>\n                        </div>\n                    @endforeach\n                </div>\n                <div class=\"form-group\">\n                    <h4 class=\"text-center resaltado mt-4\">\xbfDesea incluir m\xe1s im\xe1genes?</h4>\n                    \x3c!-- DropZone --\x3e\n                    \x3c!-- Permite anadir imagenes solo con arrastrar y soltar --\x3e\n                    <form action=\"{{ route('fotos.store') }}\" method=\"POST\" enctype=\"multipart/form-data\" class=\"dropzone\"\n                        id=\"myDropzone\">\n                        @csrf\n                        <input type=\"hidden\" name=\"anuncio_id\" value=\"{{ $anuncio->id }}\">\n                    </form>\n                </div>\n\n        </div>\n    </div>\n@endsection\n\n\n@section('css')\n    \x3c!-- Estilos de DropZone--\x3e\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.2/min/dropzone.min.css\"\n        crossorigin=\"anonymous\" />\n@endsection\n\n@section('js')\n    <script>\xe7\n        // Permite cambiar la imagen principal del anuncio y\n        //    hace un preview \n        document.getElementById('image-input').addEventListener('change', function(e) {\n            var reader = new FileReader();\n            reader.onload = function(event) {\n                document.getElementById('preview-image').src = event.target.result;\n            }\n            reader.readAsDataURL(e.target.files[0]);\n        });\n    <\/script>\n    \x3c!-- opciones para Dropzzne --\x3e\n    <script src=\"https://unpkg.com/dropzone@5/dist/min/dropzone.min.js\"><\/script>\n      <script>\n          Dropzone.options.myDropzone = {\n              //Como se llamara al campo el resquest\n              paramName: 'imagen',\n              maxFilesize: 2, \x3c!-- Tama\xf1o m\xe1ximo del archivo en megabytes --\x3e\n              acceptedFiles: '.jpg, .jpeg, .png', \x3c!-- Tipos de archivo aceptados --\x3e\n              dictDefaultMessage: 'Arrastra los archivos aqu\xed para subirlos',\n              maxFiles: 6, \x3c!-- L\xedmite m\xe1ximo de archivos --\x3e\n              init: function() {\n                  this.on('error', function(file, errorMessage) {\n                      // Manejar errores de carga de archivos aqu\xed\n                  });\n              },\n          };\n      <\/script>\n  \n@endsection\n")),(0,r.kt)("h4",{id:"an\xe1lisis-del-c\xf3digo-1"},"An\xe1lisis del c\xf3digo"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"La directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@extends('layout.layout')")," indica que la vista utiliza la plantilla de dise\xf1o ",(0,r.kt)("inlineCode",{parentName:"p"},"layout.layout"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Las directivas ",(0,r.kt)("inlineCode",{parentName:"p"},"@section('title', 'Editar anuncio')")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"@section('content')")," definen el t\xedtulo de la p\xe1gina y el contenido principal de la vista, respectivamente.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El bloque ",(0,r.kt)("inlineCode",{parentName:"p"},"@if ($errors->any())")," verifica si hay errores de validaci\xf3n y, si es as\xed, muestra una alerta de color rojo con los mensajes de error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El formulario principal para editar los datos del anuncio est\xe1 dentro del bloque ",(0,r.kt)("inlineCode",{parentName:"p"},"{!! Form::open(...) !!}")," y se cierra con ",(0,r.kt)("inlineCode",{parentName:"p"},"{!! Form::close() !!}"),". Este formulario utiliza el m\xe9todo PUT para enviar los datos y el atributo ",(0,r.kt)("inlineCode",{parentName:"p"},"enctype")," establecido en ",(0,r.kt)("inlineCode",{parentName:"p"},"'multipart/form-data'")," para permitir la carga de im\xe1genes.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El campo de entrada de texto para el t\xedtulo del anuncio est\xe1 controlado por el control ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::text('titulo', ...)"),". Si hay errores de validaci\xf3n para este campo, se muestra un mensaje de error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"La etiqueta ",(0,r.kt)("inlineCode",{parentName:"p"},"<img>")," y el campo de carga de archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::file('imagen', ...)")," est\xe1n relacionados con la imagen del anuncio. La imagen se muestra en la etiqueta ",(0,r.kt)("inlineCode",{parentName:"p"},"<img>")," y se puede cambiar seleccionando un archivo en el campo de carga de archivo. Si hay errores de validaci\xf3n para este campo, se muestra un mensaje de error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El men\xfa desplegable para seleccionar la categor\xeda del anuncio est\xe1 controlado por el control ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::select('subcategoria_id', ...)"),". Las opciones del men\xfa se generan a partir de una colecci\xf3n de categor\xedas y subcategor\xedas. Si hay errores de validaci\xf3n para este campo, se muestra un mensaje de error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El men\xfa desplegable para seleccionar el estado del anuncio est\xe1 controlado por el control ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::select('estado_id', ...)"),". Las opciones del men\xfa se generan a partir de una colecci\xf3n de estados. Si hay errores de validaci\xf3n para este campo, se muestra un mensaje de error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El campo de texto para la descripci\xf3n del anuncio est\xe1 controlado por el control ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::textarea('description', ...)"),". Si hay errores de validaci\xf3n para este campo, se muestra un mensaje de error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El campo de entrada de tel\xe9fono est\xe1 controlado por el control ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::tel('telefono', ...)"),". Si hay errores de validaci\xf3n para este campo, se muestra un mensaje de error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Los men\xfas desplegables para seleccionar la provincia y la poblaci\xf3n del anuncio est\xe1n controlados por los controles ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::select('provincia', ...)")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::select('cod_postal', ...)"),", respectivamente. Las opciones de los men\xfas se generan a partir de colecciones de provincias y poblaciones. Si hay errores de validaci\xf3n para estos campos, se muestran mensajes de error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El campo de entrada num\xe9rico para el precio del anuncio est\xe1 controlado por el control ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::number('precio', ...)"),". Si hay errores de validaci\xf3n para este campo, se muestra un mensaje de error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'El bot\xf3n "Actualizar" para enviar los datos del formulario est\xe1 controlado por el control ',(0,r.kt)("inlineCode",{parentName:"p"},"Form::submit('Actualizar', ...)"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"La secci\xf3n que muestra las im\xe1genes asociadas al anuncio se encuentra en un bucle ",(0,r.kt)("inlineCode",{parentName:"p"},"@foreach ($anuncio->fotos as $foto)"),". Cada imagen"),(0,r.kt)("p",{parentName:"li"},'se muestra en una tarjeta individual junto con un bot\xf3n "Borrar". El formulario para eliminar la imagen est\xe1 controlado por el control ',(0,r.kt)("inlineCode",{parentName:"p"},"Form::submit('Borrar', ...)"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"La secci\xf3n adicional que permite cargar m\xe1s im\xe1genes utiliza la biblioteca Dropzone y se encuentra dentro del bloque ",(0,r.kt)("inlineCode",{parentName:"p"},'<div id="dropzone">'),"."))),(0,r.kt)("h3",{id:"scripts-js"},"scripts js"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"}," <script>\n    // Permite cambiar la imagen principal del anuncio y\n    //    hace un preview \n    document.getElementById('image-input').addEventListener('change', function(e) {\n        var reader = new FileReader();\n        reader.onload = function(event) {\n            document.getElementById('preview-image').src = event.target.result;\n        }\n        reader.readAsDataURL(e.target.files[0]);\n    });\n<\/script>\n")),(0,r.kt)("p",null,"Este c\xf3digo JavaScript se encarga de proporcionar una funcionalidad de vista previa de imagen. Cuando seleccionas una imagen en el campo de carga (identificado como 'image-input'), se dispara el evento 'change'. Dentro de la funci\xf3n manejadora de eventos, se crea un objeto FileReader que permite leer el contenido del archivo seleccionado. Luego, se establece una funci\xf3n de devoluci\xf3n de llamada (onload) para ejecutar cuando la lectura del archivo se complete. Dentro de esta funci\xf3n, se obtiene la URL de datos de la imagen cargada (event.target.result) y se asigna como origen (src) de la imagen de vista previa (identificada como 'preview-image'). En resumen, este c\xf3digo permite mostrar una vista previa de la imagen seleccionada antes de que se cargue."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"<script src=\"https://unpkg.com/dropzone@5/dist/min/dropzone.min.js\"><\/script>\n      <script>\n          Dropzone.options.myDropzone = {\n              //Como se llamara al campo el resquest\n              paramName: 'imagen',\n              maxFilesize: 2, \x3c!-- Tama\xf1o m\xe1ximo del archivo en megabytes --\x3e\n              acceptedFiles: '.jpg, .jpeg, .png', \x3c!-- Tipos de archivo aceptados --\x3e\n              dictDefaultMessage: 'Arrastra los archivos aqu\xed para subirlos',\n              maxFiles: 6, \x3c!-- L\xedmite m\xe1ximo de archivos --\x3e\n              init: function() {\n                  this.on('error', function(file, errorMessage) {\n                      // Manejar errores de carga de archivos aqu\xed\n                  });\n              },\n          };\n      <\/script>\n")),(0,r.kt)("p",null,"Este c\xf3digo incluye la biblioteca Dropzone, que proporciona una funcionalidad de carga de archivos con una interfaz de arrastrar y soltar. La primera l\xednea importa el archivo JavaScript de la biblioteca desde el enlace proporcionado. Luego, dentro de la etiqueta ",(0,r.kt)("inlineCode",{parentName:"p"},"<script>"),", se configura la opci\xf3n de Dropzone para personalizar su comportamiento."),(0,r.kt)("p",null,"En este caso, se utiliza ",(0,r.kt)("inlineCode",{parentName:"p"},"Dropzone.options.myDropzone"),' para definir las opciones de configuraci\xf3n para el elemento con el ID "myDropzone" (debe haber un elemento HTML con ese ID en tu p\xe1gina). Las opciones configuradas son las siguientes:'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"paramName"),': Especifica el nombre del campo utilizado en la solicitud para enviar los archivos al servidor. En este caso, se establece como "imagen".'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"maxFilesize"),": Define el tama\xf1o m\xe1ximo permitido para cada archivo en megabytes. Aqu\xed se establece en 2 MB."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"acceptedFiles"),': Define los tipos de archivo aceptados para la carga. En este caso, se especifican los archivos con extensiones ".jpg", ".jpeg" y ".png".'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dictDefaultMessage"),": Establece el mensaje predeterminado que se muestra en el \xe1rea de Dropzone para indicar al usuario que arrastre los archivos all\xed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"maxFiles"),": Define el n\xfamero m\xe1ximo de archivos permitidos para la carga. Aqu\xed se establece en 6 archivos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"init"),": Define una funci\xf3n de inicializaci\xf3n que se ejecuta cuando Dropzone se inicializa. Dentro de esta funci\xf3n, se puede configurar el manejo de eventos y otras personalizaciones. En este caso, se define una funci\xf3n de manejo de errores que se ejecuta cuando ocurre un error durante la carga de archivos.")),(0,r.kt)("p",null,"En definitiva, este c\xf3digo configura las opciones de Dropzone para permitir la carga de archivos con determinadas restricciones y proporciona la funcionalidad de manejar errores durante la carga de archivos."),(0,r.kt)("h3",{id:"controladores"},"Controladores"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:"title='M\xe9todo edit del controlador AnuncioController'",title:"'M\xe9todo",edit:!0,del:!0,controlador:!0,"AnuncioController'":!0},"public function edit($id)\n    {\n        $subcategorias = Subcategoria::all();\n        $categorias = Categoria::all();\n        $estados = Estado::all();\n        $provincias = Provincia::all();\n        $poblaciones = Poblacion::orderBy('nombre')->get();\n        $anuncio = Anuncio::findOrFail($id);\n        \n        //Llamada al formulario de Edici\xf3n de anuncios\n        return view('anuncios.edit', compact('anuncio',\n            'categorias','estados','provincias','poblaciones'));\n    }\n")),(0,r.kt)("p",null,"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"edit($id)")," es una funci\xf3n dentro del controlador. Este m\xe9todo se utiliza para cargar los datos necesarios y mostrar el formulario de edici\xf3n de un anuncio espec\xedfico."),(0,r.kt)("p",null,"Aqu\xed est\xe1 la explicaci\xf3n paso a paso del m\xe9todo:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Recibe el par\xe1metro ",(0,r.kt)("inlineCode",{parentName:"p"},"$id"),", que representa el identificador \xfanico del anuncio que se desea editar.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Realiza consultas a la base de datos para obtener los datos necesarios para el formulario de edici\xf3n. Estas consultas incluyen:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$subcategorias = Subcategoria::all();"),": Obtiene todas las subcategor\xedas existentes en la base de datos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$categorias = Categoria::all();"),": Obtiene todas las categor\xedas existentes en la base de datos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$estados = Estado::all();"),": Obtiene todos los estados existentes en la base de datos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$provincias = Provincia::all();"),": Obtiene todas las provincias existentes en la base de datos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$poblaciones = Poblacion::orderBy('nombre')->get();"),": Obtiene todas las poblaciones existentes en la base de datos, ordenadas alfab\xe9ticamente por nombre."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Utiliza el modelo ",(0,r.kt)("inlineCode",{parentName:"p"},"Anuncio")," para encontrar el anuncio espec\xedfico que se desea editar. Se utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"findOrFail($id)")," para buscar el anuncio por su identificador \xfanico. Si el anuncio no se encuentra, se lanzar\xe1 una excepci\xf3n.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Llama a la vista ",(0,r.kt)("inlineCode",{parentName:"p"},"anuncios.edit")," y pasa las variables necesarias para el formulario de edici\xf3n mediante el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"compact"),". Las variables que se pasan son:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'anuncio'"),": El anuncio espec\xedfico que se desea editar."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'categorias'"),": Todas las categor\xedas existentes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'estados'"),": Todos los estados existentes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'provincias'"),": Todas las provincias existentes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'poblaciones'"),": Todas las poblaciones existentes."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Finalmente, retorna la vista con los datos necesarios para mostrar el formulario de edici\xf3n del anuncio."))),(0,r.kt)("p",null,"Conclusi\xf3n, este m\xe9todo se encarga de cargar los datos necesarios y mostrar el formulario de edici\xf3n de un anuncio espec\xedfico, utilizando los modelos y las consultas a la base de datos correspondientes."),(0,r.kt)("h3",{id:"m\xe9todo-para-cargar-images-en-el-servidor"},"M\xe9todo para cargar images en el servidor"),(0,r.kt)("p",null,"Las im\xe1genes insertadas en el control ",(0,r.kt)("strong",{parentName:"p"},"DropZone")," utilizan el siguiente m\xe9todo del controlador FotoController para subir las im\xe1genes al servidor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:"title='M\xe9todo store del controlador FotoController'",title:"'M\xe9todo",store:!0,del:!0,controlador:!0,"FotoController'":!0},"public function store(Request $request)\n    {\n        // Validar la solicitud\n       $request->validate([\n            'imagen' => 'required|image|max:2048',// Reemplaza las reglas de validaci\xf3n seg\xfan tus necesidades\n            'anuncio_id'=>'required'\n        ]);\n\n        // Obtener el archivo de imagen\n        $imagen = $request->file('imagen');\n\n        // Procesar y guardar la imagen\n        $ruta = $imagen->store('public/images'); // Guarda la imagen en una carpeta espec\xedfica, ajusta la ruta seg\xfan tus necesidades\n        $url = '/storage/images/' . basename($ruta);\n        // Crear una nueva instancia de Foto y guardarla en la base de datos\n        $foto = Foto::create([\n            'path' => $url,\n            'anuncio_id' => $request->anuncio_id,\n        ]);\n    }\n")),(0,r.kt)("p",null,"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"store(Request $request)")," es una funci\xf3n dentro del controlador. Este m\xe9todo se utiliza para procesar y guardar una imagen enviada a trav\xe9s de una solicitud de DropZone y luego crear una nueva instancia de ",(0,r.kt)("inlineCode",{parentName:"p"},"Foto")," en la base de datos."),(0,r.kt)("p",null,"Aqu\xed est\xe1 la explicaci\xf3n paso a paso del m\xe9todo:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Recibe el par\xe1metro ",(0,r.kt)("inlineCode",{parentName:"p"},"$request"),", que es una instancia de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Request")," en Laravel. Esta clase contiene la informaci\xf3n de la solicitud HTTP realizada.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Valida la solicitud utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"validate()")," del objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"$request"),". En este caso, se est\xe1n aplicando dos reglas de validaci\xf3n:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'imagen' => 'required|image|max:2048'"),": La imagen es requerida, debe ser un archivo de imagen y su tama\xf1o m\xe1ximo es de 2048 kilobytes. Puedes ajustar las reglas de validaci\xf3n seg\xfan tus necesidades."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Obt\xe9n el archivo de imagen de la solicitud utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"$request->file('imagen')"),". Esto obtiene el archivo cargado en el campo de formulario llamado 'imagen'.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Procesa y guarda la imagen en una ubicaci\xf3n espec\xedfica en el servidor. En este caso, se utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"store()")," del objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"$imagen")," para guardar la imagen en la carpeta 'public/images'. Puedes ajustar la ruta seg\xfan tus necesidades.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Crea la URL de la imagen utilizando la ruta donde se guard\xf3 la imagen. Se concatena '/storage/images/' con el nombre del archivo de imagen obtenido de la ruta.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Crea una nueva instancia del modelo ",(0,r.kt)("inlineCode",{parentName:"p"},"Foto")," utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"create()"),". Se pasan los datos necesarios para crear la instancia, que son:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'path' => $url"),": La URL de la imagen que se guard\xf3."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'anuncio_id' => $request->anuncio_id"),": El identificador del anuncio asociado a la foto, obtenido de la solicitud."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"La instancia de ",(0,r.kt)("inlineCode",{parentName:"p"},"Foto")," se guarda en la base de datos."))),(0,r.kt)("p",null,"Conclusi\xf3n, este m\xe9todo se encarga de procesar y guardar una imagen enviada a trav\xe9s de una solicitud, creando una nueva instancia de ",(0,r.kt)("inlineCode",{parentName:"p"},"Foto")," en la base de datos con la URL de la imagen y el identificador del anuncio asociado. Tambi\xe9n realiza la validaci\xf3n de la solicitud para asegurarse de que se cumplan ciertas reglas antes de guardar la imagen. Las fotos est\xe1n relacionadas con el anuncio a trav\xe9s del campo ",(0,r.kt)("inlineCode",{parentName:"p"},"anucnio_id"),"."),(0,r.kt)("h3",{id:"m\xe9todo-para-borrar-im\xe1genes"},"M\xe9todo para borrar im\xe1genes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:"title='M\xe9todo destroy de FotoController'",title:"'M\xe9todo",destroy:!0,de:!0,"FotoController'":!0},"    public function destroy($id)\n    {\n        $foto = Foto::find($id); // Obtener el objeto Foto por su ID\n\n        if ($foto) {\n            //Eliminar foto dinamicamente\n            unlink(public_path($foto->path));\n            $foto->delete(); // Eliminar la foto de la base de datos        \n            // Realizar otras acciones o redirigir seg\xfan tus necesidades\n            return redirect()->back();\n        }\n    }\n")),(0,r.kt)("p",null,"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"destroy")," tiene la finalidad de eliminar una foto espec\xedfica de la base de datos y del sistema de archivos. A continuaci\xf3n se explica su funcionamiento:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Se recibe el par\xe1metro ",(0,r.kt)("inlineCode",{parentName:"p"},"$id"),", que corresponde al identificador \xfanico de la foto que se desea eliminar.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Se busca la foto en la base de datos utilizando el modelo ",(0,r.kt)("inlineCode",{parentName:"p"},"Foto")," y el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"find($id)"),". Si se encuentra la foto, se procede a eliminarla.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"En primer lugar, se utiliza la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"unlink()")," para eliminar f\xedsicamente el archivo de imagen asociado a la foto. Se utiliza ",(0,r.kt)("inlineCode",{parentName:"p"},"public_path($foto->path)")," para obtener la ruta completa del archivo en el sistema de archivos.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Luego, se llama al m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"delete()")," en el objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"$foto")," para eliminar la entrada de la foto de la base de datos.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Despu\xe9s de eliminar la foto, se pueden realizar otras acciones o redirigir a una p\xe1gina espec\xedfica seg\xfan las necesidades del sistema. En este caso, se utiliza ",(0,r.kt)("inlineCode",{parentName:"p"},"redirect()->back()")," para redirigir al usuario a la p\xe1gina anterior."))),(0,r.kt)("p",null,"El texto que has proporcionado contiene algunos errores y mejoras en la redacci\xf3n. Aqu\xed est\xe1 el texto corregido y mejorado:"),(0,r.kt)("h2",{id:"borrar-anuncio"},"Borrar anuncio"),(0,r.kt)("p",null,"Esta es la operaci\xf3n m\xe1s sencilla, ya que no requiere ning\xfan formulario de entrada de datos. Como se puede observar en secciones anteriores, hemos a\xf1adido un bot\xf3n de borrado a nuestra vista ",(0,r.kt)("strong",{parentName:"p"},"anuncios.show"),". El c\xf3digo asociado a este bot\xf3n es el siguiente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<form action="{{ route(\'anuncios.delete\', [\'id\' => $anuncio->id]) }}" method="POST" class="col-sm-2">\n    @csrf\n    @method(\'DELETE\')\n    \x3c!-- Bot\xf3n para borrar el anuncio con confirmaci\xf3n --\x3e\n    <button type="submit" onclick="return confirm(\'\xbfEst\xe1s seguro de que quieres borrar este anuncio?\')" class="btn btn-danger col-sm-12 m-1">Borrar</button>\n</form>\n')),(0,r.kt)("p",null,"Este c\xf3digo simplemente llama a la ruta especificada, la cual se encargar\xe1 de llamar al controlador ",(0,r.kt)("strong",{parentName:"p"},"AnuncioController")," y su m\xe9todo ",(0,r.kt)("strong",{parentName:"p"},"destroy"),". A continuaci\xf3n, vamos a observar el c\xf3digo del controlador."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"public function destroy($id){\n    try {\n        // Comienza la transacci\xf3n\n        DB::transaction(function () use ($id) {\n            $anuncio = Anuncio::findOrFail($id);\n            \n            // Iterar sobre todas las fotos opcionales\n            foreach ($anuncio->fotos as $foto) {\n                // Borrar la foto f\xedsicamente\n                unlink(public_path($foto->path));\n                $foto->delete();\n            }\n            \n            // Borrar la imagen principal\n            unlink(public_path($anuncio->imagen));\n            \n            $anuncio->delete();\n        });\n        \n        // Si la transacci\xf3n se completa sin errores, redirecciona a la ruta deseada\n        return redirect()->route('home');\n    } catch (\\Throwable $e) {\n        // Manejo de errores en caso de fallo en la transacci\xf3n\n        return back()->withErrors(['error' => 'Se produjo un error al borrar el anuncio.']);\n    }\n}\n")),(0,r.kt)("h3",{id:"qu\xe9-hace-el-c\xf3digo-1"},"\xbfQu\xe9 hace el c\xf3digo?"),(0,r.kt)("p",null,"Este c\xf3digo utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"destroy")," del controlador. Aqu\xed est\xe1 su explicaci\xf3n:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"destroy")," recibe el par\xe1metro ",(0,r.kt)("inlineCode",{parentName:"p"},"$id"),", que representa el ID del anuncio que se va a eliminar.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Se inicia una transacci\xf3n utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"DB::transaction()"),". Esto asegura que todas las operaciones realizadas dentro de la transacci\xf3n se completen correctamente o se reviertan si ocurre alg\xfan error.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Dentro de la transacci\xf3n, se busca el anuncio correspondiente al ID proporcionado utilizando ",(0,r.kt)("inlineCode",{parentName:"p"},"Anuncio::findOrFail($id)"),". Si el anuncio no se encuentra, se lanzar\xe1 una excepci\xf3n.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A continuaci\xf3n, se itera sobre todas las fotos opcionales asociadas al anuncio utilizando ",(0,r.kt)("inlineCode",{parentName:"p"},"$anuncio->fotos"),". Para cada foto, se borra f\xedsicamente el archivo utilizando ",(0,r.kt)("inlineCode",{parentName:"p"},"unlink(public_path($foto->path))")," y luego se elimina la entrada de la foto de la base de datos mediante ",(0,r.kt)("inlineCode",{parentName:"p"},"$foto->delete()"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Despu\xe9s de eliminar las fotos opcionales, se borra el archivo de imagen principal del anuncio utilizando ",(0,r.kt)("inlineCode",{parentName:"p"},"unlink(public_path($anuncio->imagen))"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Finalmente, se elimina el anuncio llamando a ",(0,r.kt)("inlineCode",{parentName:"p"},"$anuncio->delete()"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Si todas las operaciones dentro de la transacci\xf3n se completan correctamente, se redirecciona al usuario a la ruta especificada, en este caso"))),(0,r.kt)("p",null,", ",(0,r.kt)("inlineCode",{parentName:"p"},"home"),"."),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},"Si ocurre alg\xfan error durante la transacci\xf3n, se captura la excepci\xf3n utilizando un bloque ",(0,r.kt)("inlineCode",{parentName:"li"},"catch (\\Throwable $e)"),". En caso de error, se redirecciona al usuario de vuelta a la p\xe1gina anterior (utilizando ",(0,r.kt)("inlineCode",{parentName:"li"},"back()"),") y se muestra un mensaje de error utilizando ",(0,r.kt)("inlineCode",{parentName:"li"},"withErrors(['error' => 'Se produjo un error al borrar el anuncio.'])"),".")),(0,r.kt)("p",null,"En conclusi\xf3n, este c\xf3digo elimina un anuncio y todas sus fotos asociadas de la base de datos y del sistema de archivos. Utiliza una transacci\xf3n para garantizar la integridad de los datos y maneja posibles errores mostrando un mensaje de error en caso de que algo salga mal durante la eliminaci\xf3n."),(0,r.kt)("p",null,"En este proyecto, es la primera vez que se utilizan transacciones. Si no est\xe1s familiarizado con este concepto, te remito al cap\xedtulo correspondiente ",(0,r.kt)("strong",{parentName:"p"},"Eloquent y SQL"),"."))}u.isMDXComponent=!0},6180:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/anuncio_edit-1b6f4f87502f34929d5e91fc182766b8.png"},7536:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/anuncio_pc2-79a2c0d5c0dd0ad998b882695d07ca93.png"},8098:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/anuncios_editar-3110dac279ccb550bbcbe5892cd63415.png"},6334:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/dropzone-d0d123e9c0dbc18db9659c0000a1d536.png"},9060:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/fotos_insertadas-86464ff220edbe822139cc99e4bc98e1.png"},9150:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/publicar-998915b5e00f62c92d8703a2db1e8dc9.png"},1042:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/vista_editar-11613443836f0a86f1475295f619b876.png"}}]);