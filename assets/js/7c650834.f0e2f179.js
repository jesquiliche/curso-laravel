"use strict";(self.webpackChunkeloquent=self.webpackChunkeloquent||[]).push([[3845],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(t),g=a,m=d["".concat(u,".").concat(g)]||d[g]||p[g]||i;return t?r.createElement(m,o(o({ref:n},l),{},{components:t})):r.createElement(m,o({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=g;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c[d]="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2934:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:50},o="Puesta en practica",c={unversionedId:"tutorial-basics/Rutas/practicas_ruta",id:"tutorial-basics/Rutas/practicas_ruta",title:"Puesta en practica",description:"Modelos del proyecto",source:"@site/docs/tutorial-basics/Rutas/practicas_ruta.md",sourceDirName:"tutorial-basics/Rutas",slug:"/tutorial-basics/Rutas/practicas_ruta",permalink:"/curso-laravel/docs/tutorial-basics/Rutas/practicas_ruta",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/Rutas/practicas_ruta.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"tutorialSidebar",previous:{title:"Filtros y middleware",permalink:"/curso-laravel/docs/tutorial-basics/Rutas/filtros"},next:{title:"Vistas Blade",permalink:"/curso-laravel/docs/category/vistas-blade"}},u={},s=[{value:"Modelos del proyecto",id:"modelos-del-proyecto",level:2},{value:"Anuncios",id:"anuncios",level:3},{value:"Categoria",id:"categoria",level:3}],l={toc:s},d="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"puesta-en-practica"},"Puesta en practica"),(0,a.kt)("h2",{id:"modelos-del-proyecto"},"Modelos del proyecto"),(0,a.kt)("h3",{id:"anuncios"},"Anuncios"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Anuncio;\nuse Illuminate\\Http\\Request;\n\nclass AnuncioController extends Controller\n{\n    public function index()\n    {\n        $anuncios = Anuncio::all();\n        return view('anuncios.index', compact('anuncios'));\n    }\n\n    public function show($id)\n    {\n        $anuncio = Anuncio::findOrFail($id);\n        return view('anuncios.show', compact('anuncio'));\n    }\n\n    public function create()\n    {\n        return view('anuncios.create');\n    }\n\n    public function store(Request $request)\n    {\n        $request->validate([\n            'titulo' => 'required|string|max:255',\n            'descripcion' => 'required|string',\n            'imagen' => 'nullable|image|max:2048',\n            'precio' => 'nullable|numeric',\n            'subcategoria_id' => 'required|exists:subcategorias,id',\n            'provincia' => 'required|string|max:255',\n            'codprovincia' => 'required|string|max:255',\n        ]);\n\n        $anuncio = new Anuncio($request->all());\n\n        if ($request->hasFile('imagen')) {\n            $path = $request->file('imagen')->store('public/images');\n            $anuncio->imagen = $path;\n        }\n\n        $anuncio->save();\n\n        return redirect()->route('anuncios.show', $anuncio->id);\n    }\n\n    public function edit($id)\n    {\n        $anuncio = Anuncio::findOrFail($id);\n        return view('anuncios.edit', compact('anuncio'));\n    }\n\n    public function update(Request $request, $id)\n    {\n        $request->validate([\n            'titulo' => 'required|string|max:255',\n            'descripcion' => 'required|string',\n            'imagen' => 'nullable|image|max:2048',\n            'precio' => 'nullable|numeric',\n            'subcategoria_id' => 'required|exists:subcategorias,id',\n            'provincia' => 'required|string|max:255',\n            'codprovincia' => 'required|string|max:255',\n        ]);\n\n        $anuncio = Anuncio::findOrFail($id);\n\n        $anuncio->fill($request->all());\n\n        if ($request->hasFile('imagen')) {\n            $path = $request->file('imagen')->store('public/images');\n            $anuncio->imagen = $path;\n        }\n\n        $anuncio->save();\n\n        return redirect()->route('anuncios.show', $anuncio->id);\n    }\n\n    public function destroy($id)\n    {\n        $anuncio = Anuncio::findOrFail($id);\n        $anuncio->delete();\n        return redirect()->route('anuncios.index');\n    }\n}\n")),(0,a.kt)("h3",{id:"categoria"},"Categoria"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Categoria;\nuse Illuminate\\Http\\Request;\n\nclass CategoriaController extends Controller\n{\n    public function index()\n    {\n        $categorias = Categoria::all();\n        return view('categorias.index', compact('categorias'));\n    }\n\n    public function show($id)\n    {\n        $categoria = Categoria::findOrFail($id);\n        return view('categorias.show', compact('categoria'));\n    }\n\n    public function create()\n    {\n        return view('categorias.create');\n    }\n\n    public function store(Request $request)\n    {\n        $categoria = Categoria::create($request->all());\n        return redirect()->route('categorias.show', $categoria->id);\n    }\n\n    public function edit($id)\n    {\n        $categoria = Categoria::findOrFail($id);\n        return view('categorias.edit', compact('categoria'));\n    }\n\n    public function update(Request $request, $id)\n    {\n        $categoria = Categoria::findOrFail($id);\n        $categoria->update($request->all());\n        return redirect()->route('categorias.show', $categoria->id);\n    }\n\n    public function destroy($id)\n    {\n        $categoria = Categoria::findOrFail($id);\n        $categoria->delete();\n        return redirect()->route('categorias.index');\n    }\n}\n")),(0,a.kt)("p",null,"Este controlador cuenta con los m\xe9todos CRUD b\xe1sicos para la gesti\xf3n de las categor\xedas. Recuerda que debes definir las rutas correspondientes para poder acceder a los m\xe9todos del controlador."))}p.isMDXComponent=!0}}]);