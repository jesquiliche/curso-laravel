"use strict";(self.webpackChunkeloquent=self.webpackChunkeloquent||[]).push([[5685],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>b});var r=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function t(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?t(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,r,o=function(e,a){if(null==e)return{};var n,r,o={},t=Object.keys(e);for(r=0;r<t.length;r++)n=t[r],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)n=t[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var a=r.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},c=function(e){var a=d(e.components);return r.createElement(l.Provider,{value:a},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,o=e.mdxType,t=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,b=u["".concat(l,".").concat(m)]||u[m]||p[m]||t;return n?r.createElement(b,s(s({ref:a},c),{},{components:n})):r.createElement(b,s({ref:a},c))}));function b(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var t=n.length,s=new Array(t);s[0]=m;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var d=2;d<t;d++)s[d]=n[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6880:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const t={sidebar_position:5},s="Rellenando la BB.DD",i={unversionedId:"tutorial-basics/seeders",id:"tutorial-basics/seeders",title:"Rellenando la BB.DD",description:"Seeders",source:"@site/docs/tutorial-basics/05-seeders.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/seeders",permalink:"/curso-laravel/docs/tutorial-basics/seeders",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/05-seeders.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Creaci\xf3n y definici\xf3n de relaciones",permalink:"/curso-laravel/docs/tutorial-basics/Modelos/relaciones"},next:{title:"Consultas Eloquent",permalink:"/curso-laravel/docs/tutorial-basics/consultas"}},l={},d=[{value:"Seeders",id:"seeders",level:2},{value:"\xbfQu\xe9 es un seeder?",id:"qu\xe9-es-un-seeder",level:3},{value:"\ud83d\udcc7\xbfC\xf3mo se crea un seeder?",id:"c\xf3mo-se-crea-un-seeder",level:3},{value:"Seeders del proyecto",id:"seeders-del-proyecto",level:2},{value:"CategoriaSeeder",id:"categoriaseeder",level:3},{value:"SubcategoriaSeeder",id:"subcategoriaseeder",level:3},{value:"EstadoSeeder",id:"estadoseeder",level:3},{value:"PoblacionSeeder",id:"poblacionseeder",level:3},{value:"ProvinciaSeeder",id:"provinciaseeder",level:3},{value:"UsersTableSeeder",id:"userstableseeder",level:3},{value:"Factories",id:"factories",level:2},{value:"\xbfQu\xe9 es un Factory?",id:"qu\xe9-es-un-factory",level:3},{value:"\xbfC\xf3mo se crea un Factory?",id:"c\xf3mo-se-crea-un-factory",level:3},{value:"\xbfC\xf3mo se ejecuta un Factory?",id:"c\xf3mo-se-ejecuta-un-factory",level:3},{value:"Ejecuci\xf3n ordenada de Seeder (DatabaseSeeder)",id:"ejecuci\xf3n-ordenada-de-seeder-databaseseeder",level:2}],c={toc:d},u="wrapper";function p(e){let{components:a,...t}=e;return(0,o.kt)(u,(0,r.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rellenando-la-bbdd"},"Rellenando la BB.DD"),(0,o.kt)("h2",{id:"seeders"},"Seeders"),(0,o.kt)("h3",{id:"qu\xe9-es-un-seeder"},"\xbfQu\xe9 es un seeder?"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Seeder",src:n(9030).Z,width:"600",height:"300"})),(0,o.kt)("p",null,"Un seeder en Laravel es una clase que se utiliza para poblar una base de datos con datos de prueba. Los seeders son \xfatiles para probar aplicaciones, crear datos de prueba para desarrolladores y para personalizar una base de datos con informaci\xf3n espec\xedfica."),(0,o.kt)("p",null,"Cada seeder en Laravel extiende de la clase ",(0,o.kt)("strong",{parentName:"p"},"Illuminate\\Database\\Seeder")," y contiene un m\xe9todo run que se ejecuta cuando se llama el comando ",(0,o.kt)("strong",{parentName:"p"},"php artisan db:seed"),". Dentro de este m\xe9todo, puedes escribir cualquier l\xf3gica que necesites para insertar datos en tu base de datos."),(0,o.kt)("p",null,"Puedes crear varios seeders y ejecutarlos todos o solo algunos seg\xfan tus necesidades. Al ejecutar un seeder, sus datos se insertan en la base de datos de forma autom\xe1tica, lo que te permite rellenar tus tablas de forma r\xe1pida y sencilla."),(0,o.kt)("h3",{id:"c\xf3mo-se-crea-un-seeder"},"\ud83d\udcc7\xbfC\xf3mo se crea un seeder?"),(0,o.kt)("p",null,"Para crear un seeder en Laravel, puedes usar el siguiente comando de Artisan:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan make:seeder NombreSeeder\n")),(0,o.kt)("p",null,"Donde NombreSeeder es el nombre que le quieres dar a tu seeder. Este comando crear\xe1 un archivo en la carpeta database/seeds con el nombre que le hayas especificado y con una estructura b\xe1sica de c\xf3digo para que puedas empezar a escribir tu l\xf3gica de seeding."),(0,o.kt)("p",null,"Aqu\xed tienes un ejemplo b\xe1sico de c\xf3digo para un seeder:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"<?php\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\n\nclass NombreSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        DB::table('table_name')->insert([\n            'column1' => 'value1',\n            'column2' => 'value2',\n            // ...\n        ]);\n    }\n}\n?>\n")),(0,o.kt)("p",null,"Puedes agregar m\xe1s datos o l\xf3gica para rellenar tus tablas de forma m\xe1s compleja."),(0,o.kt)("p",null,"Para ejecutar los seeders, puedes usar el siguiente comando:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan db:seed\n")),(0,o.kt)("p",null,"Tambi\xe9n puedes ejecutar un seeder espec\xedfico utilizando el siguiente comando:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan db:seed --class=NombreSeeder\n")),(0,o.kt)("h2",{id:"seeders-del-proyecto"},"Seeders del proyecto"),(0,o.kt)("p",null,"A continuaci\xf3n procederemos a explicar uno a uno los diferentes seeders que utilizaremos en este proyecto."),(0,o.kt)("p",null,"Recuerde que para crear el esqueleto del seeder debe ejecutar el siguiente commando:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan make:seeder nombre_de_seeder\n")),(0,o.kt)("h3",{id:"categoriaseeder"},"CategoriaSeeder"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\n\nclass CategoriaSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        //\n        $data = [\n            [\n                'nombre' => \"Motor y accesorios\"\n            ],\n            [\n                'nombre' => \"Moda y accesorios\"\n            ],\n            [\n                'nombre' => \"Alquiler\"\n            ],\n            [\n                'nombre' => \"TV, audio y foto\"\n            ],\n            [\n                'nombre' => \"M\xf3viles y telefon\xeda\"\n            ],\n            [\n                'nombre' => \"Inform\xe1tica y electronica\"\n            ],\n            [\n                'nombre' => \"Deporte y ocio\"\n            ],\n            [\n                'nombre' => \"Consolas y videojuegos\"\n            ],\n            [\n                'nombre' => \"Bicicletas\"\n            ],\n            [\n                'nombre' => \"Hogar y jard\xedn\"\n            ],\n            [\n                'nombre' => \"Electrodom\xe9sticos\"\n            ],\n            [\n                'nombre' => \"Cine,libros y m\xfasica\"\n            ],\n            [\n                'nombre' => \"Ni\xf1os y bebes\"\n            ],\n            [\n                'nombre' => \"Coleccionismo\"\n            ],\n            [\n                'nombre' => \"Empleo\"\n            ],\n            [\n                'nombre' => \"Servicios\"\n            ]\n\n        ];\n        DB::table('categorias')->insert($data);\n    }\n}\n")),(0,o.kt)("p",null,"Este Seeder se utiliza para poblar la base de datos ",(0,o.kt)("strong",{parentName:"p"},"Anuncios"),' con datos que se utilizar\xe1n com\xfanmente en la aplicaci\xf3n. En este caso, el seeder se llama "CategoriaSeeder" y crea registros en la tabla "categorias" con los nombres de varias categor\xedas, como "Motor y accesorios", "Moda y accesorios", "Alquiler", etc. '),(0,o.kt)("p",null,'El seeder utiliza el ORM de Laravel para insertar los datos en la tabla. En la funci\xf3n "run()", la matriz "$data" contiene los nombres de las categor\xedas y se pasa como argumento a la funci\xf3n "insert()" del objeto DB. Cada registro es un array asociativo que tiene solo una clave "nombre" y su valor es el nombre de la categor\xeda. '),(0,o.kt)("p",null,'Una vez que se ejecuta el seeder, la tabla "categorias" se poblar\xe1 con estos registros.'),(0,o.kt)("h3",{id:"subcategoriaseeder"},"SubcategoriaSeeder"),(0,o.kt)("p",null,"Este seeder se utiliza para poblar la table ",(0,o.kt)("strong",{parentName:"p"},"Subcategorias")," La clase ",(0,o.kt)("strong",{parentName:"p"},"SubcategoriaSeeder")," es una clase de semilla de base de datos que se encarga de poblar la tabla de subcategor\xedas. La tabla de subcategor\xedas tiene las columnas categoria_id y nombre."),(0,o.kt)("p",null,"En el m\xe9todo run(), se define una matriz de datos con las subcategor\xedas a insertar en la tabla. Cada elemento de la matriz es una subcategor\xeda con el id de su categor\xeda y su nombre. Luego, se utiliza la clase DB de Laravel para insertar los datos en la tabla de subcategor\xedas utilizando el m\xe9todo insert()."),(0,o.kt)("p",null,"El c\xf3digo completo se encuentra a continuaci\xf3n:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\n\nclass SubcategoriaSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        $data = [\n            [\n                'categoria_id'=>1,\n                'nombre' => \"GPS y electr\xf3nica\"\n            ],\n            [\n                'categoria_id'=>1,\n                'nombre' => \"Herramientas\"\n            ],\n            [\n                'categoria_id'=>1,\n                'nombre' => \"Recambios\"\n            ],\n            [\n                'categoria_id'=>1,\n                'nombre' => \"Otros\"\n            ],\n            [\n                'categoria_id'=>2,\n                'nombre' => \"Abrigos y chaquetas\"\n            ],\n            [\n                'categoria_id'=>2,\n                'nombre' => \"Accesorios\"\n            ],\n            [\n                'categoria_id'=>2,\n                'nombre' => \"Ba\xf1adores y biquinis\"\n            ],\n            [\n                'categoria_id'=>2,\n                'nombre' => \"Belleza y cosmetica\"\n            ],\n            [\n                'categoria_id'=>3,\n                'nombre' => \"Piso\"\n            ],\n            [\n                'categoria_id'=>3,\n                'nombre' => \"Casa\"\n            ],\n            [\n                'categoria_id'=>3,\n                'nombre' => \"Habitaci\xf3n\"\n            ],\n            [\n                'categoria_id'=>3,\n                'nombre' => \"Local/Oficina\"\n            ],\n            [\n                'categoria_id'=>3,\n                'nombre' => \"Garage\"\n            ],\n            [\n                'categoria_id'=>3,\n                'nombre' => \"Trastero\"\n            ],\n            [\n                'categoria_id'=>4,\n                'nombre' => \"Pilas y cargadores\"\n            ],\n            [\n                'categoria_id'=>4,\n                'nombre' => \"C\xe1maras y fotograf\xeda\"\n            ],\n            [\n                'categoria_id'=>4,\n                'nombre' => \"Drones\"\n            ],\n            [\n                'categoria_id'=>4,\n                'nombre' => \"Auriculares y cascos\"\n            ],\n            [\n                'categoria_id'=>4,\n                'nombre' => \"Reproductores\"\n            ],\n            [\n                'categoria_id'=>4,\n                'nombre' => \"Proyectores y accesorios\"\n            ],\n            [\n                'categoria_id'=>5,\n                'nombre' => \"Accesorios\"\n            ],\n            [\n                'categoria_id'=>5,\n                'nombre' => \"Cables\"\n            ],\n            [\n                'categoria_id'=>5,\n                'nombre' => \"Piezas y recambios\"\n            ],\n            [\n                'categoria_id'=>5,\n                'nombre' => \"Tablets\"\n            ],\n            [\n                'categoria_id'=>5,\n                'nombre' => \"Tel\xe9fonos antiguos\"\n            ],\n            [\n                'categoria_id'=>5,\n                'nombre' => \"Tel\xe9fonos m\xf3viles\"\n            ],\n            [\n                'categoria_id'=>5,\n                'nombre' => \"Otros\"\n            ],\n            [\n                'categoria_id'=>6,\n                'nombre' => \"Cargadores y bater\xedas\"\n            ],\n            [\n                'categoria_id'=>6,\n                'nombre' => \"Cables\"\n            ],\n            [\n                'categoria_id'=>6,\n                'nombre' => \"Ordenadores y accesorios\"\n            ],\n            [\n                'categoria_id'=>6,\n                'nombre' => \"Monitores\"\n            ],\n            [\n                'categoria_id'=>6,\n                'nombre' => \"Realidad virtual y aumentada\"\n            ],\n            [\n                'categoria_id'=>6,\n                'nombre' => \"Software\"\n            ],\n            [\n                'categoria_id'=>6,\n                'nombre' => \"Impresoras y accesorios\"\n            ],\n            [\n                'categoria_id'=>6,\n                'nombre' => \"Otros\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Baloncesto\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Balonmano\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Est\xe1ticas y el\xedpticas\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Fitness, running y yoga\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"F\xfatbol\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Golf\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Juegos recreativos y de mesa\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Manualidades\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Monta\xf1a y esqu\xed\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Nataci\xf3n y accesorios piscina\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Otros deportes\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Patinetes y patinaje\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Rugby\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Tenis y p\xe1del\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"V\xf3ley\"\n            ],\n            [\n                'categoria_id'=>7,\n                'nombre' => \"Otros\"\n            ],\n            [\n                'categoria_id'=>8,\n                'nombre' => \"Accesorios de consola\"\n            ],\n            [\n                'categoria_id'=>8,\n                'nombre' => \"Consolas\"\n            ],\n            [\n                'categoria_id'=>8,\n                'nombre' => \"Manuales y gu\xedas\"\n            ],\n            [\n                'categoria_id'=>8,\n                'nombre' => \"Merchandising de videojuegos\"\n            ],\n            [\n                'categoria_id'=>8,\n                'nombre' => \"Recambios de consolas\"\n            ],\n            [\n                'categoria_id'=>8,\n                'nombre' => \"Otros\"\n            ],\n            [\n                'categoria_id'=>9,\n                'nombre' => \"Bicicletas ciudad\"\n            ],\n            [\n                'categoria_id'=>9,\n                'nombre' => \"Bicicletas de carretera\"\n            ],\n            [\n                'categoria_id'=>9,\n                'nombre' => \"Bicicletas plegables\"\n            ],\n            [\n                'categoria_id'=>9,\n                'nombre' => \"Bicicletas el\xe9ctricas\"\n            ],\n            [\n                'categoria_id'=>9,\n                'nombre' => \"Bicicletas Infantiles\"\n            ],\n            [\n                'categoria_id'=>9,\n                'nombre' => \"Bicicletas Infantiles\"\n            ],\n            [\n                'categoria_id'=>9,\n                'nombre' => \"Bicicletas Estaticas\"\n            ],\n            [\n                'categoria_id'=>9,\n                'nombre' => \"Otros\"\n            ],\n            [\n                'categoria_id'=>10,\n                'nombre' => \"Caseta pr\xe9fabricada\"\n            ],\n            [\n                'categoria_id'=>10,\n                'nombre' => \"Mueble de cocina\"\n            ],\n            [\n                'categoria_id'=>10,\n                'nombre' => \"Mesa para jardin\"\n            ],\n            [\n                'categoria_id'=>10,\n                'nombre' => \"Otro\"\n            ]\n        ];\n        DB::table('subcategorias')->insert($data);\n    }\n}\n")),(0,o.kt)("h3",{id:"estadoseeder"},"EstadoSeeder"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\n\nclass EstadoSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        //\n       $data= [\n        [\n            \n            'nombre' => \"Nuevo\"\n        ],\n        [\n            \n            'nombre' => \"Como nuevo\"\n        ],\n        [\n        \n            'nombre' => \"Buen estado\"\n        ],\n        [\n        \n            'nombre' => \"Regular\"\n        ],\n        [\n        \n            'nombre' => \"Necesita reparaci\xf3n\"\n        ]\n       \n    \n    ];\n    DB::table('estados')->insert($data);\n    }\n}\n")),(0,o.kt)("p",null,"Este seeder se encarga de insertar los estados de los anuncios en la tabla ",(0,o.kt)("inlineCode",{parentName:"p"},"estados")," de la base de datos ",(0,o.kt)("inlineCode",{parentName:"p"},"Anuncios"),". En la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"run()")," se define un arreglo ",(0,o.kt)("inlineCode",{parentName:"p"},"$data")," que contiene la informaci\xf3n de los estados a insertar en la base de datos. Luego, se utiliza el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"insert()")," de la clase ",(0,o.kt)("inlineCode",{parentName:"p"},"DB")," para insertar los datos en la tabla ",(0,o.kt)("inlineCode",{parentName:"p"},"estados"),". "),(0,o.kt)("p",null,"En este caso, cada estado se define como un arreglo asociativo con una \xfanica clave ",(0,o.kt)("inlineCode",{parentName:"p"},"'nombre'"),' y un valor que describe el estado. Los estados que se insertan son "Nuevo", "Como nuevo", "Buen estado", "Regular" y "Necesita reparaci\xf3n".'),(0,o.kt)("h3",{id:"poblacionseeder"},"PoblacionSeeder"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Database\\Seeders;\n\n```php\nuse App\\Models\\Poblacion;\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\nuse \\Illuminate\\Support\\Facades\\File;\n\nclass PoblacionSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        DB::table('poblaciones')->delete();\n        $json = File::get(\"database/data/poblaciones/poblaciones.json\");\n        $data = json_decode($json);\n        foreach ($data as $obj) {\n            Poblacion::create(array(\n                \n                'codigo' => $obj->codigo,\n                'provincia_cod'=>substr($obj->codigo,0,2),\n                'nombre' => $obj->nombre,\n            ));\n            print \"Insertando poblaci\xf3n -> \".$obj->codigo.\" \".$obj->nombre.\"\\n\";\n        }\n\n    }\n}\n")),(0,o.kt)("p",null,'Este seeder es responsable de insertar datos de poblaciones en la tabla "poblaciones" de la base de datos. En resumen, este seeder realiza lo siguiente:'),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'Borra todos los registros anteriores de la tabla "poblaciones" mediante la funci\xf3n ',(0,o.kt)("inlineCode",{parentName:"li"},"delete()")," de Laravel."),(0,o.kt)("li",{parentName:"ol"},'Lee el archivo "poblaciones.json" ubicado en la carpeta "database/data/poblaciones/" utilizando la funci\xf3n ',(0,o.kt)("inlineCode",{parentName:"li"},"File::get()")," de Laravel."),(0,o.kt)("li",{parentName:"ol"},"Decodifica el archivo JSON utilizando la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"li"},"json_decode()")," de PHP."),(0,o.kt)("li",{parentName:"ol"},"Itera sobre cada objeto del array decodificado."),(0,o.kt)("li",{parentName:"ol"},'Crea un nuevo registro en la tabla "poblaciones" utilizando la funci\xf3n ',(0,o.kt)("inlineCode",{parentName:"li"},"create()")," de Laravel y los valores del objeto decodificado."),(0,o.kt)("li",{parentName:"ol"},"Imprime en la consola el c\xf3digo y nombre de la poblaci\xf3n insertada.")),(0,o.kt)("p",null,"En resumen, este seeder carga datos de poblaciones en la base de datos a partir de un archivo JSON, utilizando Laravel para el manejo de la base de datos y el archivo."),(0,o.kt)("h3",{id:"provinciaseeder"},"ProvinciaSeeder"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},'<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\n\nclass ProvinciaSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return vocodigo\n     */\n    public function run()\n    {\n        //\n        $provincias = array (\n            array (\'codigo\' => "01", "nombre" => "ALAVA"),\n            array (\'codigo\' => "02", "nombre" => "ALBACETE"),\n            array (\'codigo\' => "03", "nombre" => "ALICANTE"),\n            array (\'codigo\' => "04", "nombre" => "ALMERIA"),\n            array (\'codigo\' => "33", "nombre" => "ASTURIAS"),\n            array (\'codigo\' => "05", "nombre" => "AVILA"),\n            array (\'codigo\' => "06", "nombre" => "BADAJOZ"),\n            array (\'codigo\' => "08", "nombre" => "BARCELONA"),\n            array (\'codigo\' => "09", "nombre" => "BURGOS"),\n            array (\'codigo\' => "10", "nombre" => "CACERES"),\n            array (\'codigo\' => "11", "nombre" => "CADIZ"),\n            array (\'codigo\' => "39", "nombre" => "CANTABRIA"),\n            array (\'codigo\' => "12", "nombre" => "CASTELLON"),\n            array (\'codigo\' => "51", "nombre" => "CEUTA"),\n            array (\'codigo\' => "13", "nombre" => "CIUDAD REAL"),\n            array (\'codigo\' => "14", "nombre" => "CORDOBA"),\n            array (\'codigo\' => "15", "nombre" => "CORU\xd1A"),\n            array (\'codigo\' => "16", "nombre" => "CUENCA"),\n            array (\'codigo\' => "17", "nombre" => "GIRONA"),\n            array (\'codigo\' => "18", "nombre" => "GRANADA"),\n            array (\'codigo\' => "19", "nombre" => "GUADALAJARA"),\n            array (\'codigo\' => "20", "nombre" => "GUIPUZCOA"),\n            array (\'codigo\' => "21", "nombre" => "HUELVA"),\n            array (\'codigo\' => "22", "nombre" => "HUESCA"),\n            array (\'codigo\' => "07", "nombre" => "ILLES BALEARS"),\n            array (\'codigo\' => "23", "nombre" => "JAEN"),\n            array (\'codigo\' => "24", "nombre" => "LEON"),\n            array (\'codigo\' => "25", "nombre" => "LLEcodigoA"),\n            array (\'codigo\' => "27", "nombre" => "LUGO"),\n            array (\'codigo\' => "28", "nombre" => "MADRID"),\n            array (\'codigo\' => "29", "nombre" => "MALAGA"),\n            array (\'codigo\' => "52", "nombre" => "MELILLA"),\n            array (\'codigo\' => "30", "nombre" => "MURCIA"),\n            array (\'codigo\' => "31", "nombre" => "NAVARRA"),\n            array (\'codigo\' => "32", "nombre" => "OURENSE"),\n            array (\'codigo\' => "34", "nombre" => "PALENCIA"),\n            array (\'codigo\' => "35", "nombre" => "PALMAS, LAS"),\n            array (\'codigo\' => "36", "nombre" => "PONTEVEDRA"),\n            array (\'codigo\' => "26", "nombre" => "RIOJA, LA"),\n            array (\'codigo\' => "37", "nombre" => "SALAMANCA"),\n            array (\'codigo\' => "38", "nombre" => "SANTA CRUZ DE TENERIFE"),\n            array (\'codigo\' => "40", "nombre" => "SEGOVIA"),\n            array (\'codigo\' => "41", "nombre" => "SEVILLA"),\n            array (\'codigo\' => "42", "nombre" => "SORIA"),\n            array (\'codigo\' => "43", "nombre" => "TARRAGONA"),\n            array (\'codigo\' => "44", "nombre" => "TERUEL"),\n            array (\'codigo\' => "45", "nombre" => "TOLEDO"),\n            array (\'codigo\' => "46", "nombre" => "VALENCIA"),\n            array (\'codigo\' => "47", "nombre" => "VALLADOLID"),\n            array (\'codigo\' => "48", "nombre" => "VIZCAYA"),\n            array (\'codigo\' => "49", "nombre" => "ZAMORA"),\n            array (\'codigo\' => "50", "nombre" => "ZARAGOZA")\n       );\n       print "Insertando provincias\\n";\n       DB::table(\'provincias\')->insert($provincias);\n    }\n}\n')),(0,o.kt)("p",null,'En este caso, el seeder llama a la tabla "provincias" y la rellena con datos predefinidos. '),(0,o.kt)("p",null,'La clase "ProvinciaSeeder" extiende la clase "Seeder" proporcionada por Laravel y sobrescribe el m\xe9todo "run()" para definir la l\xf3gica de la semilla. El m\xe9todo "run()" contiene un array de datos que representa las provincias espa\xf1olas y, a continuaci\xf3n, llama a la funci\xf3n "insert" proporcionada por la clase "Illuminate\\Support\\Facades\\DB" para insertar los datos en la tabla "provincias". Adem\xe1s, se utiliza una funci\xf3n "print" para informar al usuario que se est\xe1n insertando las provincias. '),(0,o.kt)("h3",{id:"userstableseeder"},"UsersTableSeeder"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Models\\User;\n\n\n\nclass UsersTableSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        // Creamos tres usuarios de ejemplo\n              \n        User::create([\n            'name' => 'Admin',\n            'email' => 'admin@pruebas.com',\n            'password' => Hash::make('password123'),\n        ]);\n        \n       User::factory(100)->create();\n          \n    }\n}\n")),(0,o.kt)("p",null,'Este seeder es una clase en PHP que se utiliza para poblar la tabla "users" con datos de prueba. La clase "UsersTableSeeder" extiende la clase "Seeder" proporcionada por Laravel y sobrescribe el m\xe9todo "run()" para definir la l\xf3gica de la semilla. El m\xe9todo "run()" crea tres usuarios de ejemplo: un administrador y dos usuarios normales. Para el administrador, se proporciona un nombre, correo electr\xf3nico y contrase\xf1a. La funci\xf3n "Hash::make()" se utiliza para encriptar la contrase\xf1a. '),(0,o.kt)("p",null,'A continuaci\xf3n, se utiliza la funci\xf3n "User::factory(100)->create();" para generar y crear 100 usuarios aleatorios utilizando el Factory de Laravel. Los Factory permiten definir los valores aleatorios para los diferentes atributos del modelo y se utilizan para crear datos de prueba. '),(0,o.kt)("p",null,"A continuaci\xf3n veremos lo que son los Factories."),(0,o.kt)("h2",{id:"factories"},"Factories"),(0,o.kt)("h3",{id:"qu\xe9-es-un-factory"},"\xbfQu\xe9 es un Factory?"),(0,o.kt)("p",null,"En Laravel, un factory es una clase que se utiliza para generar datos de prueba de manera aleatoria y estructurada. Los factories se utilizan en conjunto con los seeders para poblar la base de datos con datos de prueba."),(0,o.kt)("p",null,'Los factories se definen en archivos PHP y normalmente se encuentran en el directorio "database/factories" de una aplicaci\xf3n Laravel. En estos archivos, se define la estructura de los datos que se van a generar, utilizando la sintaxis de Blueprint que ofrece Laravel.'),(0,o.kt)("p",null,'Por ejemplo, si tenemos un modelo de "User" con los atributos "name", "email" y "password", podr\xedamos definir un factory para generar usuarios aleatorios de la siguiente manera:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"use App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    protected $model = User::class;\n\n    public function definition()\n    {\n        return [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique()->safeEmail(),\n            'password' => bcrypt('password123'),\n        ];\n    }\n}\n")),(0,o.kt)("p",null,'En este ejemplo, estamos utilizando la clase "Factory" proporcionada por Laravel para definir el factory. La propiedad "$model" indica el modelo al que se asocia el factory.'),(0,o.kt)("p",null,'El m\xe9todo "definition()" es donde se define la estructura de los datos que se van a generar. En este caso, estamos generando nombres aleatorios utilizando el m\xe9todo "name()" de la clase "Faker" (tambi\xe9n proporcionada por Laravel), correos electr\xf3nicos \xfanicos con el m\xe9todo "unique()->safeEmail()" y una contrase\xf1a encriptada con "bcrypt()".'),(0,o.kt)("p",null,'Una vez definido el factory, podemos utilizarlo en nuestros seeders para generar datos de prueba de manera r\xe1pida y sencilla. Por ejemplo, en el seeder que mencionaste anteriormente, se utiliza el factory de "User" para crear 100 usuarios aleatorios.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"User::factory(100)->create();\n")),(0,o.kt)("p",null,"En resumen, los factories en Laravel son una herramienta muy \xfatil para generar datos de prueba de manera aleatoria y estructurada, lo que permite a los desarrolladores probar sus aplicaciones en un entorno controlado sin tener que preocuparse por la integridad de los datos."),(0,o.kt)("h3",{id:"c\xf3mo-se-crea-un-factory"},"\xbfC\xf3mo se crea un Factory?"),(0,o.kt)("p",null,"Para crear un Factory en Laravel, puedes seguir estos pasos:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Ejecuta el siguiente comando en tu terminal para generar un nuevo Factory:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"php artisan make:factory NombreDelFactory\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Abre el archivo generado en la carpeta ",(0,o.kt)("inlineCode",{parentName:"p"},"database/factories"),". Este archivo contendr\xe1 una clase Factory que extender\xe1 la clase ",(0,o.kt)("inlineCode",{parentName:"p"},"Illuminate\\Database\\Eloquent\\Factories\\Factory"),". ")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Dentro de la clase Factory, define los atributos que quieres asignar a tu modelo. Puedes hacer esto utilizando el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"define"),", el cual toma como primer par\xe1metro el nombre del modelo y como segundo par\xe1metro una funci\xf3n an\xf3nima donde puedes definir los atributos."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"use App\\Models\\User;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    protected $model = User::class;\n\n    public function definition()\n    {\n        return [\n            'name' => $this->faker->name,\n            'email' => $this->faker->unique()->safeEmail,\n            'password' => bcrypt('secret'),\n        ];\n    }\n}\n")),(0,o.kt)("p",{parentName:"li"},"En este ejemplo, el Factory asigna un nombre generado aleatoriamente, un email \xfanico generado por Faker y una contrase\xf1a encriptada para el modelo User.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Para utilizar el Factory, puedes llamar al m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"factory")," en el modelo y pasarle como par\xe1metro el nombre de la clase Factory que acabas de crear. Luego, llama al m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," o ",(0,o.kt)("inlineCode",{parentName:"p"},"make")," para crear una nueva instancia del modelo con los atributos definidos en el Factory."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"use App\\Models\\User;\n\n$user = User::factory()->create();\n")),(0,o.kt)("p",{parentName:"li"},"Este c\xf3digo crear\xe1 una nueva instancia del modelo User con los atributos definidos en el Factory.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Puedes utilizar el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," en el Factory para definir estados adicionales para tu modelo. Estos estados te permiten definir atributos adicionales para el modelo en funci\xf3n de ciertas condiciones. Por ejemplo:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"use App\\Models\\User;\n\n$user = User::factory()->state([\n    'role' => 'admin',\n])->create();\n")),(0,o.kt)("p",{parentName:"li"},'Este c\xf3digo crear\xe1 una nueva instancia del modelo User con el atributo "role" establecido en "admin".'))),(0,o.kt)("p",null,"Este es un Factory a modo de ejemplo y no tiene especial relevancia en nuestro proyecto."),(0,o.kt)("h3",{id:"c\xf3mo-se-ejecuta-un-factory"},"\xbfC\xf3mo se ejecuta un Factory?"),(0,o.kt)("p",null,"Para ejecutar un factory en Laravel, puedes usar el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," en la clase factory correspondiente. Por ejemplo, si tienes un factory para la creaci\xf3n de usuarios, puedes ejecutarlo de la siguiente manera:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"$user = User::factory()->create();\n")),(0,o.kt)("p",null,"Este c\xf3digo llamar\xe1 al factory de usuarios (",(0,o.kt)("inlineCode",{parentName:"p"},"UserFactory"),") y generar\xe1 un modelo de usuario con valores aleatorios, y lo insertar\xe1 en la base de datos. Tambi\xe9n puedes pasar par\xe1metros adicionales al m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," para especificar valores personalizados para los atributos del modelo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"$user = User::factory()->create([\n    'name' => 'John Doe',\n    'email' => 'john@example.com',\n]);\n")),(0,o.kt)("p",null,"En este caso, el factory generar\xe1 un modelo de usuario con los valores personalizados especificados para el nombre y el correo electr\xf3nico, y los insertar\xe1 en la base de datos."),(0,o.kt)("h2",{id:"ejecuci\xf3n-ordenada-de-seeder-databaseseeder"},"Ejecuci\xf3n ordenada de Seeder (DatabaseSeeder)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     *\n     * @return void\n     */\n    public function run()\n    {\n\n        $this->call(CategoriaSeeder::class);\n        $this->call(SubcategoriaSeeder::class);\n        $this->call(ProvinciaSeeder::class);\n        $this->call(PoblacionSeeder::class);\n        $this->call(EstadoSeeder::class);\n        $this->call(UsersTableSeeder::class);\n        $this->call(AnuncioSeeder::class);\n    }\n}\n")),(0,o.kt)("p",null,"Este seeder se est\xe1n llamando a varios otros seeders para poblar la base de datos con datos de prueba. "),(0,o.kt)("p",null,"La clase ",(0,o.kt)("inlineCode",{parentName:"p"},"DatabaseSeeder")," extiende la clase ",(0,o.kt)("inlineCode",{parentName:"p"},"Seeder")," proporcionada por Laravel y define el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"run()"),". Dentro de este m\xe9todo, se llaman a varios otros seeders mediante el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"call()"),", que toma como argumento el nombre de la clase seeder correspondiente. "),(0,o.kt)("p",null,"En este caso, se est\xe1n llamando a los siguientes seeders en este orden:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"CategoriaSeeder"),": inserta datos predefinidos en la tabla ",(0,o.kt)("inlineCode",{parentName:"li"},"categorias"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"SubcategoriaSeeder"),": inserta datos predefinidos en la tabla ",(0,o.kt)("inlineCode",{parentName:"li"},"subcategorias"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"ProvinciaSeeder"),": inserta datos predefinidos en la tabla ",(0,o.kt)("inlineCode",{parentName:"li"},"provincias"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"PoblacionSeeder"),": inserta datos predefinidos en la tabla ",(0,o.kt)("inlineCode",{parentName:"li"},"poblaciones"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"EstadoSeeder"),": inserta datos predefinidos en la tabla ",(0,o.kt)("inlineCode",{parentName:"li"},"estados"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"UsersTableSeeder"),": inserta datos predefinidos en la tabla ",(0,o.kt)("inlineCode",{parentName:"li"},"users"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"AnuncioSeeder"),": inserta datos predefinidos en la tabla ",(0,o.kt)("inlineCode",{parentName:"li"},"anuncios"),".")),(0,o.kt)("p",null,"De esta manera, al ejecutar este seeder, se poblar\xe1 la base de datos con datos de prueba en varias tablas para poder realizar pruebas en el entorno de desarrollo sin preocuparse por la integridad de los datos."),(0,o.kt)("p",null,"Aqu\xed te dejo una posible correcci\xf3n:"),(0,o.kt)("admonition",{title:"Importante",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Para poder ejecutar correctamente este programa es necesario contar con dos archivos JSON (Poblaciones y Anuncios) que deben encontrarse dentro de la carpeta ",(0,o.kt)("strong",{parentName:"p"},"Database\\data")," creada espec\xedficamente para la tarea de llenar las tablas Anuncios y Poblaciones con datos de ejemplo. Es importante tener en cuenta que estos datos contienen claves que apuntan a otras tablas, por lo que si se modifican, podr\xeda afectar la integridad referencial de la base de datos."),(0,o.kt)("p",{parentName:"admonition"},"Estos archivos se encuentran en GitHub junto al proyecto. El enlace al repositorio se puede encontrar en el siguiente enlace:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"https://github.com/jesquiliche/anuncios\n"))),(0,o.kt)("p",null,"Ahora ya puede ejecutar el comando:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"    php artisan migrate:fresh --seed\n")),(0,o.kt)("p",null,"En detalle, la opci\xf3n migrate:fresh elimina todas las tablas de la base de datos y las vuelve a crear seg\xfan las definiciones de migraci\xf3n presentes en la aplicaci\xf3n. Es decir, si ya existen tablas en la base de datos, este comando las borrar\xe1 y crear\xe1 nuevas tablas vac\xedas. Por lo tanto, este comando es \xfatil para realizar una nueva instalaci\xf3n o para comenzar desde cero en el desarrollo de una aplicaci\xf3n."),(0,o.kt)("p",null,"La opci\xf3n --seed indica que despu\xe9s de crear las tablas de la base de datos, se ejecutar\xe1n los seeders para sembrar la base de datos con datos de prueba. En otras palabras, se insertar\xe1n datos ficticios en las tablas, seg\xfan las l\xf3gicas definidas en los seeders."),(0,o.kt)("p",null,"En definitiva, el comando php artisan migrate:fresh --seed borra todas las tablas existentes en la base de datos y luego crea nuevas tablas vac\xedas seg\xfan las definiciones de migraci\xf3n presentes en la aplicaci\xf3n. Luego, inserta datos ficticios en las tablas seg\xfan las l\xf3gicas definidas en los seeders."))}p.isMDXComponent=!0},9030:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/bd-c79b1820edc033d09f811de2dea41af8.webp"}}]);