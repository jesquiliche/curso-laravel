"use strict";(self.webpackChunkeloquent=self.webpackChunkeloquent||[]).push([[2113],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>g});var s=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);a&&(s=s.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function t(e,a){if(null==e)return{};var n,s,i=function(e,a){if(null==e)return{};var n,s,i={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=s.createContext({}),d=function(e){var a=s.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},c=function(e){var a=d(e.components);return s.createElement(l.Provider,{value:a},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return s.createElement(s.Fragment,{},a)}},u=s.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=t(e,["components","mdxType","originalType","parentName"]),p=d(n),u=i,g=p["".concat(l,".").concat(u)]||p[u]||m[u]||r;return n?s.createElement(g,o(o({ref:a},c),{},{components:n})):s.createElement(g,o({ref:a},c))}));function g(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var t={};for(var l in a)hasOwnProperty.call(a,l)&&(t[l]=a[l]);t.originalType=e,t[p]="string"==typeof e?e:i,o[1]=t;for(var d=2;d<r;d++)o[d]=n[d];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8422:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>t,toc:()=>d});var s=n(7462),i=(n(7294),n(3905));const r={sidebar_position:6},o="Roles y permisos",t={unversionedId:"tutorial-basics/dashbord/roles",id:"tutorial-basics/dashbord/roles",title:"Roles y permisos",description:"Introducci\xf3n",source:"@site/docs/tutorial-basics/dashbord/roles.md",sourceDirName:"tutorial-basics/dashbord",slug:"/tutorial-basics/dashbord/roles",permalink:"/curso-laravel/docs/tutorial-basics/dashbord/roles",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/dashbord/roles.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Vistas de administraci\xf3n",permalink:"/curso-laravel/docs/tutorial-basics/dashbord/vistas"},next:{title:"Roles y permisos",permalink:"/curso-laravel/docs/tutorial-basics/roles"}},l={},d=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Laravel Permissions",id:"laravel-permissions",level:2},{value:"Instalaci\xf3n",id:"instalaci\xf3n",level:3},{value:"Configuraci\xf3n b\xe1sica",id:"configuraci\xf3n-b\xe1sica",level:2},{value:"Creaci\xf3n de roles y permisos",id:"creaci\xf3n-de-roles-y-permisos",level:2},{value:"Puesta en practica",id:"puesta-en-practica",level:2},{value:"Implementaci\xf3n del Seeder",id:"implementaci\xf3n-del-seeder",level:3},{value:"\xbfQu\xe9 hace?",id:"qu\xe9-hace",level:4},{value:"Modificaci\xf3n del archivo DatabaseSeeder",id:"modificaci\xf3n-del-archivo-databaseseeder",level:3},{value:"Directivas Blade relacionadas",id:"directivas-blade-relacionadas",level:2},{value:"Adaptando nuestra vistas",id:"adaptando-nuestra-vistas",level:2},{value:"Vistas de administraci\xf3n",id:"vistas-de-administraci\xf3n",level:3},{value:"Men\xfa general de la aplicaci\xf3n",id:"men\xfa-general-de-la-aplicaci\xf3n",level:3},{value:"\xbfQu\xe9 hace?",id:"qu\xe9-hace-1",level:4}],c={toc:d},p="wrapper";function m(e){let{components:a,...n}=e;return(0,i.kt)(p,(0,s.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"roles-y-permisos"},"Roles y permisos"),(0,i.kt)("h2",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,i.kt)("p",null,"En nuestra aplicaci\xf3n de venta de art\xedculos de segunda mano, vamos a implementar un sistema de roles y permisos que asigne diferentes niveles de acceso y funciones a los usuarios. Esto nos permite mantener un entorno seguro y controlado, garantizando que cada usuario tenga los privilegios adecuados para realizar sus acciones de manera eficiente."),(0,i.kt)("p",null,"A continuaci\xf3n, describiremos los tres tipos de usuarios y los roles asociados a cada uno, junto con los permisos correspondientes:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Usuarios registrados"),": Estos usuarios son aquellos que se han registrado en nuestra aplicaci\xf3n. Tienen la capacidad de publicar, editar y borrar sus propios anuncios, como hemos visto en cap\xedtulos anteriores. Sin embargo, no tienen acceso al panel de administraci\xf3n, lo que significa que no pueden realizar acciones relacionadas con la gesti\xf3n global del sitio.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Editores"),": Los editores son usuarios con un nivel de acceso superior al de los usuarios registrados. Adem\xe1s de las acciones disponibles para los usuarios registrados, los editores tienen la capacidad de realizar tareas de mantenimiento en las categor\xedas y subcategor\xedas a trav\xe9s del panel de administraci\xf3n. Sin embargo, no tienen permisos para administrar usuarios, lo que les limita a la gesti\xf3n de contenidos espec\xedficos relacionados con los anuncios.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Administradores"),": Los administradores son los usuarios con el nivel de acceso m\xe1s alto en nuestra aplicaci\xf3n. Tienen acceso total al panel de administraci\xf3n, lo que les permite realizar cualquier acci\xf3n en el sitio. Esto incluye publicar, editar y borrar anuncios, as\xed como gestionar usuarios y llevar a cabo tareas de configuraci\xf3n y ajustes del sistema. Los administradores tienen el control total sobre todas las funciones y caracter\xedsticas de la aplicaci\xf3n."))),(0,i.kt)("p",null,"Al establecer roles y permisos espec\xedficos para cada tipo de usuario, garantizamos un entorno seguro y organizado. Los usuarios registrados pueden realizar acciones relacionadas con sus propios anuncios, los editores tienen la capacidad de mantener las categor\xedas y subcategor\xedas, mientras que los administradores tienen el poder de gestionar todos los aspectos del sitio."),(0,i.kt)("h2",{id:"laravel-permissions"},"Laravel Permissions"),(0,i.kt)("p",null,'En el desarrollo de aplicaciones web, es com\xfan necesitar un sistema de gesti\xf3n de permisos que permita controlar el acceso a diferentes partes de la aplicaci\xf3n seg\xfan los roles y privilegios de los usuarios. El paquete "Laravel Permissions" es una soluci\xf3n popular y potente para implementar un sistema de permisos en aplicaciones Laravel.'),(0,i.kt)("p",null,'"Laravel Permissions" es un paquete de terceros desarrollado por la comunidad, y est\xe1 dise\xf1ado para ser f\xe1cilmente integrado en aplicaciones Laravel existentes. Proporciona una forma estructurada y flexible de definir roles, permisos y relaciones entre ellos.'),(0,i.kt)("p",null,'Este paquete se basa en el uso de listas de control de acceso (ACL) para determinar qu\xe9 usuarios tienen acceso a qu\xe9 recursos y acciones en la aplicaci\xf3n. Con "Laravel Permissions", puedes definir roles personalizados y asignarles permisos espec\xedficos. Luego, puedes asignar roles a los usuarios y verificar los permisos en el c\xf3digo para permitir o denegar el acceso a ciertas funcionalidades.'),(0,i.kt)("p",null,'Una de las ventajas de "Laravel Permissions" es su integraci\xf3n con el sistema de autenticaci\xf3n de Laravel. Puedes utilizar las facilidades proporcionadas por Laravel para autenticar a los usuarios y luego usar el paquete para gestionar los permisos de manera coherente y centralizada.'),(0,i.kt)("p",null,'Adem\xe1s, "Laravel Permissions" ofrece una API intuitiva y sencilla de usar. Puedes definir permisos y roles en archivos de configuraci\xf3n o en una base de datos, y acceder a ellos f\xe1cilmente en tu aplicaci\xf3n. El paquete tambi\xe9n proporciona m\xe9todos \xfatiles para comprobar los permisos y realizar acciones condicionales en funci\xf3n de los roles y permisos de los usuarios.'),(0,i.kt)("p",null,'En definitiva, el paquete "Laravel Permissions" es una herramienta valiosa para implementar un sistema de gesti\xf3n de permisos en aplicaciones Laravel. Ofrece una forma sencilla y flexible de definir roles y permisos, y proporciona m\xe9todos para verificar y gestionar los permisos de los usuarios. Al utilizar este paquete, puedes asegurar un control de acceso adecuado y garantizar que los usuarios solo tengan acceso a las funcionalidades y recursos permitidos seg\xfan sus roles y permisos asignados.'),(0,i.kt)("h3",{id:"instalaci\xf3n"},"Instalaci\xf3n"),(0,i.kt)("p",null,'Para instalar el paquete "Laravel Permissions" en tu aplicaci\xf3n Laravel, puedes seguir estos pasos:'),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Abrir la terminal: Abre la terminal en tu sistema operativo y navega hasta la carpeta ra\xedz de tu proyecto Laravel.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},'Ejecutar el comando de instalaci\xf3n: En la terminal, ejecuta el siguiente comando para instalar el paquete "Laravel Permissions" utilizando Composer:'),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"composer require spatie/laravel-permission\n")),(0,i.kt)("p",{parentName:"li"},"Esto descargar\xe1 e instalar\xe1 el paquete en tu proyecto Laravel, junto con sus dependencias.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Debe publicar la migraci\xf3n y el config/permission.phparchivo de configuraci\xf3n con:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'   php artisan vendor:publish --provider="Spatie\\Permission\\PermissionServiceProvider"\n\n')),(0,i.kt)("p",null,"   Estos comandos copiar\xe1n los archivos necesarios a las carpetas correspondientes de tu proyecto."),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Ejecutar las migraciones: Una vez que los archivos de migraciones se hayan publicado, debes ejecutar las migraciones para crear las tablas necesarias en tu base de datos. Ejecuta el siguiente comando en la terminal:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"php artisan migrate\n")),(0,i.kt)("p",{parentName:"li"},"Esto crear\xe1 las tablas necesarias para el sistema de permisos en tu base de datos.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Configurar el modelo de usuario: Abre el archivo ",(0,i.kt)("inlineCode",{parentName:"p"},"app\\Models\\User.php")," y aseg\xfarate de que la clase ",(0,i.kt)("inlineCode",{parentName:"p"},"User")," utilice el trait ",(0,i.kt)("inlineCode",{parentName:"p"},"Spatie\\Permission\\Traits\\HasRoles"),". Deber\xeda verse as\xed:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use Spatie\\Permission\\Traits\\HasRoles;\n\nclass User extends Authenticatable\n{\n    use HasRoles;\n\n    // ...\n}\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"(Opcional) Configurar el archivo de configuraci\xf3n: Abre el archivo ",(0,i.kt)("inlineCode",{parentName:"p"},"config/permission.php")," y ajusta la configuraci\xf3n seg\xfan tus necesidades. Aqu\xed puedes definir los nombres de las tablas y los modelos utilizados por el paquete, as\xed como otras opciones de configuraci\xf3n.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},'\xa1Listo! El paquete "Laravel Permissions" ha sido instalado correctamente en tu aplicaci\xf3n Laravel. Ahora puedes comenzar a utilizarlo para definir roles, asignar permisos y verificar los permisos de los usuarios en tu c\xf3digo.'))),(0,i.kt)("p",null,'Puedes consultar la documentaci\xf3n oficial del paquete "Laravel Permissions" para obtener m\xe1s detalles sobre c\xf3mo utilizarlo y aprovechar todas sus caracter\xedsticas y funcionalidades.'),(0,i.kt)("h2",{id:"configuraci\xf3n-b\xe1sica"},"Configuraci\xf3n b\xe1sica"),(0,i.kt)("p",null,"Para utilizar los roles y permisos en Laravel Permissions, debes configurar el modelo de usuario para que sea compatible con este sistema. Sigue estos pasos:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Abre el archivo ",(0,i.kt)("inlineCode",{parentName:"p"},"app\\Models\\User.php")," en tu proyecto Laravel.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Aseg\xfarate de que la clase ",(0,i.kt)("inlineCode",{parentName:"p"},"User")," importe el trait ",(0,i.kt)("inlineCode",{parentName:"p"},"Spatie\\Permission\\Traits\\HasRoles"),". Deber\xeda verse as\xed:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Spatie\\Permission\\Traits\\HasRoles;\n\nclass User extends Authenticatable\n{\n    use HasRoles;\n\n    // ...\n}\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Al utilizar el trait ",(0,i.kt)("inlineCode",{parentName:"p"},"HasRoles"),", el modelo de usuario adquiere nuevos m\xe9todos y relaciones relacionados con los roles y permisos."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ahora puedes asignar roles a un usuario utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"assignRole"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-php"},"$user->assignRole('admin');\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Tambi\xe9n puedes verificar si un usuario tiene un rol espec\xedfico utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"hasRole"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-php"},"if ($user->hasRole('admin')) {\n    // El usuario tiene el rol de administrador\n}\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Para obtener todos los roles de un usuario, puedes usar el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"getRoleNames"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-php"},"$roles = $user->getRoleNames();\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Adem\xe1s, puedes verificar si un usuario tiene permiso para realizar una acci\xf3n utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"hasPermissionTo"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-php"},"if ($user->hasPermissionTo('crear anuncios')) {\n    // El usuario tiene permiso para crear anuncios\n}\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Para obtener todos los permisos de un usuario, puedes usar el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"getAllPermissions"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-php"},"$permissions = $user->getAllPermissions();\n"))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Guarda los cambios en el archivo ",(0,i.kt)("inlineCode",{parentName:"p"},"User.php"),"."))),(0,i.kt)("p",null,"Con esta configuraci\xf3n, el modelo de usuario estar\xe1 preparado para utilizar los roles y permisos proporcionados por Laravel Permissions. Ahora puedes asignar roles a los usuarios, verificar permisos y utilizar todos los m\xe9todos y relaciones proporcionados por el trait ",(0,i.kt)("inlineCode",{parentName:"p"},"HasRoles"),"."),(0,i.kt)("p",null,"Recuerda que puedes consultar la documentaci\xf3n oficial de Laravel Permissions para obtener m\xe1s detalles y funcionalidades avanzadas sobre el manejo de roles y permisos en Laravel."),(0,i.kt)("h2",{id:"creaci\xf3n-de-roles-y-permisos"},"Creaci\xf3n de roles y permisos"),(0,i.kt)("p",null,"Laravel Permissions proporciona m\xe9todos sencillos para crear roles y permisos en tu aplicaci\xf3n. Sigue estos pasos:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Creaci\xf3n de roles:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Puedes crear un nuevo rol utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"create")," del modelo ",(0,i.kt)("inlineCode",{parentName:"p"},"Role")," proporcionado por Laravel Permissions. Por ejemplo:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use Spatie\\Permission\\Models\\Role;\n\n$role = Role::create(['name' => 'admin']);\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'El c\xf3digo anterior crear\xe1 un nuevo rol con el nombre "admin". Puedes personalizar el nombre del rol seg\xfan tus necesidades.')))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Creaci\xf3n de permisos:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Para crear un permiso, puedes utilizar el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"create")," del modelo ",(0,i.kt)("inlineCode",{parentName:"p"},"Permission")," proporcionado por Laravel Permissions. Por ejemplo:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use Spatie\\Permission\\Models\\Permission;\n\n$permission = Permission::create(['name' => 'crear anuncios']);\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'El c\xf3digo anterior crear\xe1 un nuevo permiso con el nombre "crear anuncios". Al igual que con los roles, puedes personalizar el nombre del permiso seg\xfan tus necesidades.')))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Asignaci\xf3n de permisos a roles:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Una vez que hayas creado los roles y permisos, puedes asignar permisos a un rol utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"li"},"givePermissionTo")," del modelo ",(0,i.kt)("inlineCode",{parentName:"li"},"Role"),". Por ejemplo:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-php"},"$role->givePermissionTo('crear anuncios');\n"))),(0,i.kt)("li",{parentName:"ul"},'El c\xf3digo anterior asignar\xe1 el permiso "crear anuncios" al rol especificado.'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Asignaci\xf3n de roles a usuarios:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Para asignar un rol a un usuario, puedes utilizar el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"li"},"assignRole")," del modelo de usuario. Por ejemplo:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-php"},"$user->assignRole('admin');\n"))),(0,i.kt)("li",{parentName:"ul"},'El c\xf3digo anterior asignar\xe1 el rol "admin" al usuario especificado.')))),(0,i.kt)("p",null,"Con estos pasos, habr\xe1s creado roles y permisos en tu aplicaci\xf3n utilizando Laravel Permissions. Ahora puedes asignar permisos a roles y roles a usuarios para controlar el acceso y las acciones permitidas en tu aplicaci\xf3n."),(0,i.kt)("p",null,"Recuerda consultar la documentaci\xf3n oficial de Laravel Permissions para obtener m\xe1s detalles sobre c\xf3mo trabajar con roles y permisos, as\xed como para explorar las funcionalidades avanzadas que ofrece el paquete."),(0,i.kt)("h2",{id:"puesta-en-practica"},"Puesta en practica"),(0,i.kt)("p",null,"Vamos a crear un seeder para dar de altas nuestros roles y permisos. Desde la terminal sit\xfaese dentro de la carpeta del proyecto y teclee el siguiente comando:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan make:seeder RoleSeeder\n")),(0,i.kt)("h3",{id:"implementaci\xf3n-del-seeder"},"Implementaci\xf3n del Seeder"),(0,i.kt)("p",null,"A continuaci\xf3n edite el seeder ",(0,i.kt)("inlineCode",{parentName:"p"},"database\\seeders\\RoleSeeder.php"),", copie y pegue el siguiente c\xf3digo:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse Spatie\\Permission\\Models\\Role;\nuse Spatie\\Permission\\Models\\Permission;\nuse App\\Models\\User;\n\nclass RoleSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        // Crear roles\n        $adminRole = Role::create(['name' => 'Admin']);\n        $editorRole = Role::create(['name' => 'Editor']);\n\n        // Crear permisos\n        Permission::create(['name' => 'admin.home']);\n        Permission::create(['name' => 'admin.user.index']);\n        Permission::create(['name' => 'admin.user.create']);\n        Permission::create(['name' => 'admin.user.edit']);\n        Permission::create(['name' => 'admin.user.destroy']);\n        Permission::create(['name' => 'admin.categoria.index']);\n        Permission::create(['name' => 'admin.categoria.create']);\n        Permission::create(['name' => 'admin.categoria.edit']);\n        Permission::create(['name' => 'admin.categoria.destroy']);\n        Permission::create(['name' => 'admin.subcategorias.index']);\n        Permission::create(['name' => 'admin.subcategorias.create']);\n        Permission::create(['name' => 'admin.subcategorias.edit']);\n        Permission::create(['name' => 'admin.subcategorias.destroy']);\n      \n        // Asignar permisos a roles\n        $adminRole->givePermissionTo([\n            'admin.home',\n            'admin.categoria.index',\n            'admin.categoria.create',\n            'admin.categoria.edit',\n            'admin.categoria.destroy',\n            'admin.subcategorias.index',\n            'admin.subcategorias.create',\n            'admin.subcategorias.edit',\n            'admin.subcategorias.destroy',\n            'admin.user.index',\n            'admin.user.create',\n            'admin.user.edit',\n            'admin.user.destroy'\n        ]);\n\n        $editorRole->givePermissionTo([\n            'admin.home',\n            'admin.categoria.index',\n            'admin.categoria.create',\n            'admin.categoria.edit',\n            'admin.categoria.destroy',\n            'admin.subcategorias.index',\n            'admin.subcategorias.create',\n            'admin.subcategorias.edit',\n            'admin.subcategorias.destroy'\n        ]);\n\n        // Crear usuario administrador\n        $adminUser = User::create([\n            'name' => 'Admin User',\n            'email' => 'admin@example.com',\n            'password' => bcrypt('password'),\n        ]);\n\n        //Asignar Role al usuario\n        $adminUser->assignRole($adminRole);\n\n        //Crear usuario editor\n        $editorUser = User::create([\n            'name' => 'Editor User',\n            'email' => 'editor@example.com',\n            'password' => bcrypt('password'),\n        ]);\n    \n        //Asignar Role de\n        $editorUser->assignRole($editorRole);\n    }\n}\n")),(0,i.kt)("h4",{id:"qu\xe9-hace"},"\xbfQu\xe9 hace?"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Creaci\xf3n de roles"),'\nEn este bloque se crean los roles "Admin" y "Editor" utilizando la clase ',(0,i.kt)("inlineCode",{parentName:"p"},"Role")," del paquete Spatie\\Permission\\Models. Estos roles representan diferentes niveles de privilegios en el sistema."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"// Crear roles\n$adminRole = Role::create(['name' => 'Admin']);\n$editorRole = Role::create(['name' => 'Editor']);\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Creaci\xf3n de permisos"),"\nEn este bloque se crean los permisos utilizando la clase ",(0,i.kt)("inlineCode",{parentName:"p"},"Permission")," del paquete Spatie\\Permission\\Models. Se definen permisos para diferentes acciones relacionadas con usuarios, categor\xedas y subcategor\xedas en el sistema de administraci\xf3n."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"// Crear permisos\nPermission::create(['name' => 'admin.home']);\nPermission::create(['name' => 'admin.user.index']);\nPermission::create(['name' => 'admin.user.create']);\nPermission::create(['name' => 'admin.user.edit']);\nPermission::create(['name' => 'admin.user.destroy']);\nPermission::create(['name' => 'admin.categoria.index']);\nPermission::create(['name' => 'admin.categoria.create']);\nPermission::create(['name' => 'admin.categoria.edit']);\nPermission::create(['name' => 'admin.categoria.destroy']);\nPermission::create(['name' => 'admin.subcategorias.index']);\nPermission::create(['name' => 'admin.subcategorias.create']);\nPermission::create(['name' => 'admin.subcategorias.edit']);\nPermission::create(['name' => 'admin.subcategorias.destroy']);\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Asignaci\xf3n de permisos a roles"),"\nEn este bloque se asignan los permisos creados previamente a los roles. Se utiliza el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"givePermissionTo()")," para asignar m\xfaltiples permisos a cada rol. Los permisos asignados determinan las acciones y rutas que los usuarios con esos roles pueden realizar en el sistema."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"// Asignar permisos a roles\n$adminRole->givePermissionTo([\n    'admin.home',\n    'admin.categoria.index',\n    'admin.categoria.create',\n    'admin.categoria.edit',\n    'admin.categoria.destroy',\n    'admin.subcategorias.index',\n    'admin.subcategorias.create',\n    'admin.subcategorias.edit',\n    'admin.subcategorias.destroy',\n    'admin.user.index',\n    'admin.user.create',\n    'admin.user.edit',\n    'admin.user.destroy'\n]);\n\n$editorRole->givePermissionTo([\n    'admin.home',\n    'admin.categoria.index',\n    'admin.categoria.create',\n    'admin.categoria.edit',\n    'admin.categoria.destroy',\n    'admin.subcategorias.index',\n    'admin.subcategorias.create',\n    'admin.subcategorias.edit',\n    'admin.subcategorias.destroy'\n]);\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Creaci\xf3n de usuarios y asignaci\xf3n de roles"),"\nEn este bloque se crean dos usuarios utilizando la clase ",(0,i.kt)("inlineCode",{parentName:"p"},"User"),". Se crea un usuario administrador con nombre, correo electr\xf3nico y contrase\xf1a predefinidos, y se crea un usuario editor con la misma estructura. Luego, se asignan los roles correspondientes a cada usuario utilizando el m\xe9todo ",(0,i.kt)("inlineCode",{parentName:"p"},"assignRole()"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"// Crear usuario administrador\n$adminUser = User::create([\n    'name' => 'Admin User',\n    'email' => 'admin@example.com',\n    'password' => bcrypt('password'),\n]);\n\n// Asignar\n\n Role al usuario administrador\n$adminUser->assignRole($adminRole);\n\n// Crear usuario editor\n$editorUser = User::create([\n    'name' => 'Editor User',\n    'email' => 'editor@example.com',\n    'password' => bcrypt('password'),\n]);\n\n// Asignar Role al usuario editor\n$editorUser->assignRole($editorRole);\n")),(0,i.kt)("p",null,"Este seeder crea roles, permisos y usuarios predefinidos en la base de datos, lo que te permite tener una configuraci\xf3n inicial del sistema con usuarios de diferentes roles y permisos asignados."),(0,i.kt)("h3",{id:"modificaci\xf3n-del-archivo-databaseseeder"},"Modificaci\xf3n del archivo DatabaseSeeder"),(0,i.kt)("p",null,"Modifica el archivo ",(0,i.kt)("strong",{parentName:"p"},"database/seeders/DatabaseSeeder.php")," de la siguiente manera:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        $this->call(CategoriaSeeder::class);\n        $this->call(SubcategoriaSeeder::class);\n        $this->call(ProvinciaSeeder::class);\n        $this->call(PoblacionSeeder::class);\n        $this->call(EstadoSeeder::class);\n        $this->call(RoleSeeder::class);\n        $this->call(UsersTableSeeder::class);\n        $this->call(AnuncioSeeder::class);\n   }\n}\n")),(0,i.kt)("p",null,"Con esta modificaci\xf3n, al utilizar el comando ",(0,i.kt)("inlineCode",{parentName:"p"},"'php artisan migrate:fresh --seed'"),", la base de datos se inicializar\xe1 con los roles y permisos adecuados. Si no deseas inicializar la base de datos y solo ejecutar el seeder de roles, puedes utilizar el comando ",(0,i.kt)("inlineCode",{parentName:"p"},"'php artisan db:seed --class=RoleSeeder'"),"."),(0,i.kt)("h2",{id:"directivas-blade-relacionadas"},"Directivas Blade relacionadas"),(0,i.kt)("p",null,'En Laravel, las directivas Blade relacionadas con permisos son utilizadas en conjunci\xf3n con el paquete "Laravel Permissions" de Spatie. Estas directivas permiten mostrar o ocultar contenido en funci\xf3n de los roles y permisos asignados a los usuarios. A continuaci\xf3n, te explico las directivas Blade m\xe1s comunes que se utilizan para aplicar permisos en Laravel:'),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@role('rol')"),": Esta directiva permite mostrar contenido solo si el usuario tiene el rol especificado. Por ejemplo:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-html"},"@role('Admin')\n    \x3c!-- Contenido visible solo para usuarios con el rol \"Admin\" --\x3e\n@endrole\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@hasrole('rol')"),": Esta directiva muestra contenido si el usuario tiene el rol especificado, al igual que la directiva ",(0,i.kt)("inlineCode",{parentName:"p"},"@role"),". Sin embargo, a diferencia de ",(0,i.kt)("inlineCode",{parentName:"p"},"@role"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@hasrole")," no admite varios roles. Por ejemplo:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-html"},"@hasrole('Admin')\n    \x3c!-- Contenido visible solo para usuarios con el rol \"Admin\" --\x3e\n@endhasrole\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@unlessrole('rol')"),": Esta directiva muestra contenido si el usuario no tiene el rol especificado. Por ejemplo:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-html"},"@unlessrole('Admin')\n    \x3c!-- Contenido visible para usuarios que no tienen el rol \"Admin\" --\x3e\n@endunlessrole\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@can('permiso')"),": Esta directiva muestra contenido si el usuario tiene el permiso especificado. Por ejemplo:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-html"},"@can('admin.user.index')\n    \x3c!-- Contenido visible solo si el usuario tiene el permiso \"admin.user.index\" --\x3e\n@endcan\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@cannot('permiso')"),": Esta directiva muestra contenido si el usuario no tiene el permiso especificado. Por ejemplo:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-html"},"@cannot('admin.user.index')\n    \x3c!-- Contenido visible si el usuario no tiene el permiso \"admin.user.index\" --\x3e\n@endcannot\n")))),(0,i.kt)("p",null,"Estas directivas Blade permiten condicionar la visualizaci\xf3n de secciones de una plantilla seg\xfan los roles y permisos del usuario. Al utilizarlas, puedes crear interfaces de usuario m\xe1s din\xe1micas y personalizadas seg\xfan los privilegios asignados a cada usuario en tu aplicaci\xf3n Laravel."),(0,i.kt)("h2",{id:"adaptando-nuestra-vistas"},"Adaptando nuestra vistas"),(0,i.kt)("h3",{id:"vistas-de-administraci\xf3n"},"Vistas de administraci\xf3n"),(0,i.kt)("p",null,"Hasta ahora, nuestro panel de administraci\xf3n es accesible para cualquier usuario registrado. Sin embargo, vamos a realizar un cambio para restringir el acceso a los usuarios con roles de ",(0,i.kt)("strong",{parentName:"p"},"editor")," o ",(0,i.kt)("strong",{parentName:"p"},"administrador")," \xfanicamente. Edite el fichero ",(0,i.kt)("strong",{parentName:"p"},"config\\adminlte.php")," y cambie la siguiente secci\xf3n:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"['header' => 'ADMINISTRACI\xd3N'],\n        [\n            'text' => 'Categor\xedas',\n            'route'  => 'admin.categoria.index',\n            'icon' => 'fas fa-fw fa-layer-group',\n            //Solo usuarios con permisos 'admin.categoria.index' (Admin y editor)\n            'can'=> 'admin.categoria.index',\n        ],\n        [\n            'text' => 'Subcategor\xedas',\n            'route'  => 'admin.subcategorias.index',\n            'icon' => 'fas fa-fw fa-folder',\n            //Solo usuarios con permisos 'admin.subcategorias.index' (Admin y editor)\n            'can'=> 'admin.subcategorias.index',\n        ],\n        ['header' => 'USUARIOS'],\n        [\n            'text'       => 'Usuarios',\n            'icon_color' => '',\n            'icon'      =>'fas fa-fw fa-user',\n            'route'        => 'admin.user.index',\n            //Solo usuarios con permisos 'admin.user.index' (Admin y editor)\n            'can'=> 'admin.user.index',\n        ],\n")),(0,i.kt)("p",null,"En el c\xf3digo proporcionado, hemos agregado la condici\xf3n ",(0,i.kt)("inlineCode",{parentName:"p"},"'can' => 'permiso'")," a cada secci\xf3n del men\xfa en el panel de administraci\xf3n. Esto significa que solo los usuarios con los permisos espec\xedficos mencionados podr\xe1n acceder a esas secciones. "),(0,i.kt)("p",null,'Para las secciones de "Categor\xedas" y "Subcategor\xedas", solo los usuarios con los permisos ',(0,i.kt)("inlineCode",{parentName:"p"},"'admin.categoria.index'")," y ",(0,i.kt)("inlineCode",{parentName:"p"},"'admin.subcategorias.index'")," respectivamente ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"(administradores y editores)")),", podr\xe1n acceder. "),(0,i.kt)("p",null,'Para la secci\xf3n de "Usuarios", solo los usuarios con el permiso ',(0,i.kt)("inlineCode",{parentName:"p"},"'admin.user.index'")," ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"(administradores)"))," podr\xe1n acceder. "),(0,i.kt)("p",null,"Esto asegurar\xe1 que solo los usuarios con los roles de administrador o editor tengan acceso a estas secciones en el panel de administraci\xf3n, y cualquier otro usuario registrado no podr\xe1 ver ni acceder a estas secciones restringidas."),(0,i.kt)("h3",{id:"men\xfa-general-de-la-aplicaci\xf3n"},"Men\xfa general de la aplicaci\xf3n"),(0,i.kt)("p",null,"Hasta ahora, solo hemos tenido acceso a nuestro panel de administraci\xf3n a trav\xe9s de la barra de navegaci\xf3n. Vamos a habilitar la opci\xf3n de ",(0,i.kt)("strong",{parentName:"p"},"Administraci\xf3n")," en el men\xfa. Para ello, debemos realizar cambios en el archivo ",(0,i.kt)("strong",{parentName:"p"},"resources\\views\\layout\\layout.blade.php"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="{{ str_replace(\'_\', \'-\', app()->getLocale()) }}">\n\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n\n    <title>Anuncios segunda mano</title>\n    \x3c!-- Otros elementos del head --\x3e\n\n    \x3c!-- Incluye los estilos de Font Awesome --\x3e\n    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.min.css"\n        integrity="sha512-rqQltXRuHxtPWhktpAZxLHUVJ3Eombn3hvk9PHjV/N5DMUYnzKPC1i3ub0mEXgFzsaZNeJcoE0YHq0j/GFsdGg=="\n        crossorigin="anonymous" referrerpolicy="no-referrer" />\n\n    \x3c!-- Incluye los estilos de Bootstrap --\x3e\n    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"\n        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">\n\n    \x3c!-- Incluye los scripts de jQuery, Popper.js y Bootstrap --\x3e\n    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"\n        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous">\n    <\/script>\n    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"\n        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous">\n    <\/script>\n    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"\n        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous">\n    <\/script>\n\n    \x3c!-- Incluye los estilos de Font Awesome (versi\xf3n 5.15.3) --\x3e\n    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">\n\n    <title>@yield(\'title\')</title>\n\n    \x3c!-- Incluye los estilos personalizados --\x3e\n    <link rel="stylesheet" href="{{ asset(\'css/anuncios.css\') }}">\n\n    @yield(\'css\')\n    \x3c!-- Incluye estilos espec\xedficos de la vista actual --\x3e\n</head>\n<main>\n    \x3c!-- Barra de navegaci\xf3n --\x3e\n    <div class="menu container-fluid fixed-top bg-white\n\n">\n        <div class="container-fluid">\n            <nav class="navbar navbar-expand-lg navbar-light bg-white">\n                <a class="navbar-brand" href="/">\n                    <img src="/images/logo.jpeg" width="60" alt="..." loading="lazy">\n                    <span class="nav-item resaltado">Anuncios segunda mano</span></a>\n                <button class="navbar-toggler" type="button" data-toggle="collapse"\n                    data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"\n                    aria-label="Toggle navigation">\n                    <span class="navbar-toggler-icon"></span>\n                </button>\n\n                <div class="collapse navbar-collapse" id="navbarSupportedContent">\n                    <ul class="navbar-nav ml-auto">\n                        <li class="nav-item active">\n                            <a class="nav-item" href="{{ route(\'home\') }}"><i class="fas fa-home"></i> Home<span\n                                    class="sr-only">(current)</span></a>\n                        </li>\n                        \x3c!-- men\xfa usuario --\x3e\n                        <li class="nav-item ml-2 dropdown">\n                            <a class="nav-item dropdown-toggle ml-2" href="#" id="navbarDropdown" role="button"\n                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                                <i class="fas fa-user-plus"></i>\n                                @if (!auth()->check())\n                                @else\n                                    {{ auth()->user()->name }}\n                                @endif\n\n                            </a>\n                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">\n                                <a class="dropdown-item" href="{{ route(\'registro\') }}">Registro</a>\n                                @if (!auth()->check())\n                                    <a class="dropdown-item" href="{{ route(\'login2\') }}">Iniciar sesi\xf3n</a>\n                                @endif\n\n                                @can(\'admin.home\')\n                                    <a class="dropdown-item" href="{{ route(\'admin.home\') }}">Administraci\xf3n</a>\n                                @endcan\n                                <div class="dropdown-divider"></div>\n                                @if (auth()->check())\n                                    <form id="logout-form" action="{{ route(\'logout\') }}" method="POST"\n                                        style="display: none;">\n                                        @csrf\n                                    </form>\n\n                                    <a class="dropdown-item" href="{{ route(\'logout\') }}"\n                                        onclick="event.preventDefault();\n                                            document.getElementById(\'logout-form\').submit();">\n                                        Logout\n                                    </a>\n                                @endif\n\n                            </div>\n                        </li>\n                        \x3c!-- men\xfa usuario --\x3e\n\n                        <li class="nav-item ml-2">\n                            <a href="{{ route(\'anuncios.create\') }}"><i class="far fa-file-alt"></i> Publicar\n                                anuncio</a>\n                        </li>\n\n                    </ul>\n\n                </div>\n            </nav>\n        </div>\n\n    </div>\n\n    @yield(\'content\')\n    \x3c!-- Contenido espec\xedfico de cada vista --\x3e\n    \n    @yield(\'js\')\n    <footer>\n        <div class="container-fluid text-center mt-4 bg-dark">\n            <div class="container mx-auto bg-dark">\n                <br/>\n            <h6 class="text-white text-center mt-4">Copyrigth &copy; Jes\xfas Quintana Esquiliche\n                \n            </h6>\n            <br/>\n            </div>\n            \n        </div>\n    </footer>\n    \n\n</main>\n\n</html>\n')),(0,i.kt)("p",null,"En la secci\xf3n del men\xfa de usuario, se encuentra la configuraci\xf3n de roles y permisos de la aplicaci\xf3n."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- men\xfa usuario --\x3e\n<li class="nav-item ml-2 dropdown">\n    <a class="nav-item dropdown-toggle ml-2" href="#" id="navbarDropdown" role="button"\n        data\n\n-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n        <i class="fas fa-user-plus"></i>\n        @guest\n        @else\n            {{ auth()->user()->name }}\n        @endguest\n    </a>\n    <div class="dropdown-menu" aria-labelledby="navbarDropdown">\n        <a class="dropdown-item" href="{{ route(\'registro\') }}">Registro</a>\n        @guest\n            <a class="dropdown-item" href="{{ route(\'login2\') }}">Iniciar sesi\xf3n</a>\n        @endguest\n        @can(\'admin.home\')\n            <a class="dropdown-item" href="{{ route(\'admin.home\') }}">Administraci\xf3n</a>\n        @endcan\n        <div class="dropdown-divider"></div>\n        @auth\n            <form id="logout-form" action="{{ route(\'logout\') }}" method="POST" style="display: none;">\n                @csrf\n            </form>\n            <a class="dropdown-item" href="{{ route(\'logout\') }}"\n                onclick="event.preventDefault(); document.getElementById(\'logout-form\').submit();">\n                Logout\n            </a>\n        @endauth\n    </div>\n</li>\n\x3c!-- men\xfa usuario --\x3e\n')),(0,i.kt)("h4",{id:"qu\xe9-hace-1"},"\xbfQu\xe9 hace?"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Si el usuario no est\xe1 autenticado (es un invitado), se muestra un enlace para registrarse y otro para iniciar sesi\xf3n.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<a class="dropdown-item" href="{{ route(\'registro\') }}">Registro</a> \x3c!-- Enlace para registrarse --\x3e\n@guest \x3c!-- Comprueba si el usuario es un invitado --\x3e\n    <a class="dropdown-item" href="{{ route(\'login2\') }}">Iniciar sesi\xf3n</a> \x3c!-- Enlace para iniciar sesi\xf3n --\x3e\n@endguest\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Si el usuario est\xe1 autenticado, se muestra su nombre.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"@else\n    {{ auth()->user()->name }} \x3c!-- Muestra el nombre del usuario autenticado --\x3e\n@endif\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Si el usuario tiene permisos de administrador, se muestra un enlace para acceder a la secci\xf3n de administraci\xf3n.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"@can('admin.home') \x3c!-- Comprueba si el usuario tiene permisos de administrador --\x3e\n    <a class=\"dropdown-item\" href=\"{{ route('admin.home') }}\">Administraci\xf3n</a> \x3c!-- Enlace para acceder a la secci\xf3n de administraci\xf3n --\x3e\n@endcan\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Se incluye una l\xednea divisoria en el men\xfa desplegable.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<div class="dropdown-divider"></div> \x3c!-- L\xednea divisoria en el men\xfa desplegable --\x3e\n')),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Si el usuario est\xe1 autenticado, se muestra un enlace para cerrar sesi\xf3n.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'@auth \x3c!-- Comprueba si el usuario est\xe1 autenticado --\x3e\n    <form id="logout-form" action="{{ route(\'logout\') }}" method="POST" style="display: none;"> \x3c!-- Formulario para cerrar sesi\xf3n --\x3e\n        @csrf\n    </form>\n    <a class="dropdown-item" href="{{ route(\'logout\') }}" onclick="event.preventDefault(); document.getElementById(\'logout-form\').submit();">\n        Logout \x3c!-- Enlace para cerrar sesi\xf3n --\x3e\n    </a>\n@endauth\n')))}m.isMDXComponent=!0}}]);