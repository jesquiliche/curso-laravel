"use strict";(self.webpackChunkeloquent=self.webpackChunkeloquent||[]).push([[2113],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>g});var s=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);a&&(s=s.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,s)}return n}function t(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,s,r=function(e,a){if(null==e)return{};var n,s,r={},i=Object.keys(e);for(s=0;s<i.length;s++)n=i[s],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)n=i[s],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=s.createContext({}),d=function(e){var a=s.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):t(t({},a),e)),n},c=function(e){var a=d(e.components);return s.createElement(l.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return s.createElement(s.Fragment,{},a)}},m=s.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,g=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return n?s.createElement(g,t(t({ref:a},c),{},{components:n})):s.createElement(g,t({ref:a},c))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,t=new Array(i);t[0]=m;var o={};for(var l in a)hasOwnProperty.call(a,l)&&(o[l]=a[l]);o.originalType=e,o[p]="string"==typeof e?e:r,t[1]=o;for(var d=2;d<i;d++)t[d]=n[d];return s.createElement.apply(null,t)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8422:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=n(7462),r=(n(7294),n(3905));const i={sidebar_position:6},t="Roles y permisos",o={unversionedId:"tutorial-basics/dashbord/roles",id:"tutorial-basics/dashbord/roles",title:"Roles y permisos",description:"Introducci\xf3n",source:"@site/docs/tutorial-basics/dashbord/roles.md",sourceDirName:"tutorial-basics/dashbord",slug:"/tutorial-basics/dashbord/roles",permalink:"/curso-laravel/docs/tutorial-basics/dashbord/roles",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/dashbord/roles.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Vistas de administraci\xf3n",permalink:"/curso-laravel/docs/tutorial-basics/dashbord/vistas"}},l={},d=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Laravel Permissions",id:"laravel-permissions",level:2},{value:"Instalaci\xf3n",id:"instalaci\xf3n",level:3},{value:"Configuraci\xf3n b\xe1sica",id:"configuraci\xf3n-b\xe1sica",level:2},{value:"Creaci\xf3n de roles y permisos",id:"creaci\xf3n-de-roles-y-permisos",level:2},{value:"Puesta en practica",id:"puesta-en-practica",level:2},{value:"Implementaci\xf3n del Seeder",id:"implementaci\xf3n-del-seeder",level:3},{value:"\xbfQu\xe9 hace?",id:"qu\xe9-hace",level:4},{value:"Modificaci\xf3n del archivo DatabaseSeeder",id:"modificaci\xf3n-del-archivo-databaseseeder",level:3},{value:"Directivas Blade relacionadas",id:"directivas-blade-relacionadas",level:2},{value:"Adaptando nuestra vistas",id:"adaptando-nuestra-vistas",level:2},{value:"Vistas de administraci\xf3n",id:"vistas-de-administraci\xf3n",level:3},{value:"Men\xfa general de la aplicaci\xf3n",id:"men\xfa-general-de-la-aplicaci\xf3n",level:3},{value:"\xbfQu\xe9 hace?",id:"qu\xe9-hace-1",level:4},{value:"Vistas de administraci\xf3n de Usuarios",id:"vistas-de-administraci\xf3n-de-usuarios",level:2},{value:"Creaci\xf3n del controlador",id:"creaci\xf3n-del-controlador",level:3},{value:"\xbfQu\xe9 hace?",id:"qu\xe9-hace-2",level:4},{value:"Creaci\xf3n de la vista de Lista de usuarios",id:"creaci\xf3n-de-la-vista-de-lista-de-usuarios",level:3},{value:"\xbfQu\xe9 es un datatable?",id:"qu\xe9-es-un-datatable",level:3},{value:"\xbfQu\xe9 hace el c\xf3digo JavaScript",id:"qu\xe9-hace-el-c\xf3digo-javascript",level:4},{value:"Creaci\xf3n de la vista de Edici\xf3n de usuarios",id:"creaci\xf3n-de-la-vista-de-edici\xf3n-de-usuarios",level:3},{value:"\xbfQu\xe9 hace?",id:"qu\xe9-hace-3",level:3}],c={toc:d},p="wrapper";function u(e){let{components:a,...i}=e;return(0,r.kt)(p,(0,s.Z)({},c,i,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"roles-y-permisos"},"Roles y permisos"),(0,r.kt)("h2",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,r.kt)("p",null,"En nuestra aplicaci\xf3n de venta de art\xedculos de segunda mano, vamos a implementar un sistema de roles y permisos que asigne diferentes niveles de acceso y funciones a los usuarios. Esto nos permite mantener un entorno seguro y controlado, garantizando que cada usuario tenga los privilegios adecuados para realizar sus acciones de manera eficiente."),(0,r.kt)("p",null,"A continuaci\xf3n, describiremos los tres tipos de usuarios y los roles asociados a cada uno, junto con los permisos correspondientes:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Usuarios registrados"),": Estos usuarios son aquellos que se han registrado en nuestra aplicaci\xf3n. Tienen la capacidad de publicar, editar y borrar sus propios anuncios, como hemos visto en cap\xedtulos anteriores. Sin embargo, no tienen acceso al panel de administraci\xf3n, lo que significa que no pueden realizar acciones relacionadas con la gesti\xf3n global del sitio.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Editores"),": Los editores son usuarios con un nivel de acceso superior al de los usuarios registrados. Adem\xe1s de las acciones disponibles para los usuarios registrados, los editores tienen la capacidad de realizar tareas de mantenimiento en las categor\xedas, subcategor\xedas y anuncios de cualquier usuario a trav\xe9s del panel de administraci\xf3n. Sin embargo, no tienen permisos para administrar usuarios.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Administradores"),": Los administradores son los usuarios con el nivel de acceso m\xe1s alto en nuestra aplicaci\xf3n. Tienen acceso total al panel de administraci\xf3n, lo que les permite realizar cualquier acci\xf3n en el sitio. Esto incluye publicar, editar y borrar anuncios, as\xed como gestionar usuarios y llevar a cabo tareas de configuraci\xf3n y ajustes del sistema. Los administradores tienen el control total sobre todas las funciones y caracter\xedsticas de la aplicaci\xf3n."))),(0,r.kt)("p",null,"Al establecer roles y permisos espec\xedficos para cada tipo de usuario, garantizamos un entorno seguro y organizado. Los usuarios registrados pueden realizar acciones relacionadas con sus propios anuncios, los editores tienen la capacidad de mantener las categor\xedas y subcategor\xedas, mientras que los administradores tienen el poder de gestionar todos los aspectos del sitio."),(0,r.kt)("h2",{id:"laravel-permissions"},"Laravel Permissions"),(0,r.kt)("p",null,'El paquete "Laravel Permissions" es una soluci\xf3n popular y potente para implementar un sistema de permisos en aplicaciones Laravel.'),(0,r.kt)("p",null,'"Laravel Permissions" es un paquete de terceros desarrollado por la comunidad, y est\xe1 dise\xf1ado para ser f\xe1cilmente integrado en aplicaciones Laravel existentes. Proporciona una forma estructurada y flexible de definir roles, permisos y relaciones entre ellos.'),(0,r.kt)("p",null,'Este paquete se basa en el uso de listas de control de acceso (ACL) para determinar qu\xe9 usuarios tienen acceso a qu\xe9 recursos y acciones en la aplicaci\xf3n. Con "Laravel Permissions", puedes definir roles personalizados y asignarles permisos espec\xedficos. Luego, puedes asignar roles a los usuarios y verificar los permisos en el c\xf3digo para permitir o denegar el acceso a ciertas funcionalidades.'),(0,r.kt)("p",null,'Una de las ventajas de "Laravel Permissions" es su integraci\xf3n con el sistema de autenticaci\xf3n de Laravel. Puedes utilizar las facilidades proporcionadas por Laravel para autenticar a los usuarios y luego usar el paquete para gestionar los permisos de manera coherente y centralizada.'),(0,r.kt)("p",null,'Adem\xe1s, "Laravel Permissions" ofrece una API intuitiva y sencilla de usar. Puedes definir permisos y roles en archivos de configuraci\xf3n o en una base de datos, y acceder a ellos f\xe1cilmente en tu aplicaci\xf3n. El paquete tambi\xe9n proporciona m\xe9todos \xfatiles para comprobar los permisos y realizar acciones condicionales en funci\xf3n de los roles y permisos de los usuarios.'),(0,r.kt)("p",null,'En definitiva, el paquete "Laravel Permissions" es una herramienta valiosa para implementar un sistema de gesti\xf3n de permisos en aplicaciones Laravel. Ofrece una forma sencilla y flexible de definir roles y permisos, y proporciona m\xe9todos para verificar y gestionar los permisos de los usuarios. Al utilizar este paquete, puedes asegurar un control de acceso adecuado y garantizar que los usuarios solo tengan acceso a las funcionalidades y recursos permitidos seg\xfan sus roles y permisos asignados.'),(0,r.kt)("h3",{id:"instalaci\xf3n"},"Instalaci\xf3n"),(0,r.kt)("p",null,'Para instalar el paquete "Laravel Permissions" en tu aplicaci\xf3n Laravel, puedes seguir estos pasos:'),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Abrir la terminal: Abre la terminal en tu sistema operativo y navega hasta la carpeta ra\xedz de tu proyecto Laravel.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Ejecutar el comando de instalaci\xf3n: En la terminal, ejecuta el siguiente comando para instalar el paquete "Laravel Permissions" utilizando Composer:'),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"composer require spatie/laravel-permission\n")),(0,r.kt)("p",{parentName:"li"},"Esto descargar\xe1 e instalar\xe1 el paquete en tu proyecto Laravel, junto con sus dependencias.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Debes publicar la migraci\xf3n y el config/permission.php archivo de configuraci\xf3n con:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'   php artisan vendor:publish --provider="Spatie\\Permission\\PermissionServiceProvider"\n\n')),(0,r.kt)("p",null,"   Estos comandos copiar\xe1n los archivos necesarios a las carpetas correspondientes de tu proyecto."),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Ejecutar las migraciones: Una vez que los archivos de migraciones se hayan publicado, debes ejecutar las migraciones para crear las tablas necesarias en tu base de datos. Ejecuta el siguiente comando en la terminal:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"php artisan migrate\n")),(0,r.kt)("p",{parentName:"li"},"Esto crear\xe1 las tablas necesarias para el sistema de permisos en tu base de datos.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Configurar el modelo de usuario: Abre el archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"app\\Models\\User.php")," y aseg\xfarate de que la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"User")," utilice el trait ",(0,r.kt)("inlineCode",{parentName:"p"},"Spatie\\Permission\\Traits\\HasRoles"),". Deber\xeda verse as\xed:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Spatie\\Permission\\Traits\\HasRoles;\n\nclass User extends Authenticatable\n{\n    use HasRoles;\n\n    // ...\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"(Opcional) Configurar el archivo de configuraci\xf3n: Abre el archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"config/permission.php")," y ajusta la configuraci\xf3n seg\xfan tus necesidades. Aqu\xed puedes definir los nombres de las tablas y los modelos utilizados por el paquete, as\xed como otras opciones de configuraci\xf3n. En nuestro proyecto dejaremos la configuraci\xf3n por defecto.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'\xa1Listo! El paquete "Laravel Permissions" ha sido instalado correctamente en tu aplicaci\xf3n Laravel. Ahora puedes comenzar a utilizarlo para definir roles, asignar permisos y verificar los permisos de los usuarios en tu c\xf3digo.'))),(0,r.kt)("p",null,'Puedes consultar la documentaci\xf3n oficial del paquete "Laravel Permissions" para obtener m\xe1s detalles sobre c\xf3mo utilizarlo y aprovechar todas sus caracter\xedsticas y funcionalidades en ',(0,r.kt)("a",{parentName:"p",href:"https://spatie.be/docs/laravel-permission/v5/introduction"},"https://spatie.be/docs/laravel-permission/v5/introduction")),(0,r.kt)("h2",{id:"configuraci\xf3n-b\xe1sica"},"Configuraci\xf3n b\xe1sica"),(0,r.kt)("p",null,"Para utilizar los roles y permisos en Laravel Permissions, debes configurar el modelo de usuario para que sea compatible con este sistema. Sigue estos pasos:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Abre el archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"app\\Models\\User.php")," en tu proyecto Laravel.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Aseg\xfarate de que la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"User")," importe el trait ",(0,r.kt)("inlineCode",{parentName:"p"},"Spatie\\Permission\\Traits\\HasRoles"),". Deber\xeda verse as\xed:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Spatie\\Permission\\Traits\\HasRoles;\n\nclass User extends Authenticatable\n{\n    use HasRoles;\n\n    // ...\n}\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Al utilizar el trait ",(0,r.kt)("inlineCode",{parentName:"p"},"HasRoles"),", el modelo de usuario adquiere nuevos m\xe9todos y relaciones relacionados con los roles y permisos."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Ahora puedes asignar roles a un usuario utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"assignRole"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$user->assignRole('admin');\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Tambi\xe9n puedes verificar si un usuario tiene un rol espec\xedfico utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"hasRole"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"if ($user->hasRole('admin')) {\n    // El usuario tiene el rol de administrador\n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Para obtener todos los roles de un usuario, puedes usar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"getRoleNames"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$roles = $user->getRoleNames();\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Adem\xe1s, puedes verificar si un usuario tiene permiso para realizar una acci\xf3n utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"hasPermissionTo"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"if ($user->hasPermissionTo('crear anuncios')) {\n    // El usuario tiene permiso para crear anuncios\n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Para obtener todos los permisos de un usuario, puedes usar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"getAllPermissions"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$permissions = $user->getAllPermissions();\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Guarda los cambios en el archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"User.php"),"."))),(0,r.kt)("p",null,"Con esta configuraci\xf3n, el modelo de usuario estar\xe1 preparado para utilizar los roles y permisos proporcionados por Laravel Permissions. Ahora puedes asignar roles a los usuarios, verificar permisos y utilizar todos los m\xe9todos y relaciones proporcionados por el trait ",(0,r.kt)("inlineCode",{parentName:"p"},"HasRoles"),"."),(0,r.kt)("p",null,"Recuerda que puedes consultar la documentaci\xf3n oficial de Laravel Permissions para obtener m\xe1s detalles y funcionalidades avanzadas sobre el manejo de roles y permisos en Laravel."),(0,r.kt)("h2",{id:"creaci\xf3n-de-roles-y-permisos"},"Creaci\xf3n de roles y permisos"),(0,r.kt)("p",null,"Laravel Permissions proporciona m\xe9todos sencillos para crear roles y permisos en tu aplicaci\xf3n. Sigue estos pasos:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Creaci\xf3n de roles:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Puedes crear un nuevo rol utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," del modelo ",(0,r.kt)("inlineCode",{parentName:"p"},"Role")," proporcionado por Laravel Permissions. Por ejemplo:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Spatie\\Permission\\Models\\Role;\n\n$role = Role::create(['name' => 'admin']);\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'El c\xf3digo anterior crear\xe1 un nuevo rol con el nombre "admin". Puedes personalizar el nombre del rol seg\xfan tus necesidades.')))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Creaci\xf3n de permisos:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Para crear un permiso, puedes utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," del modelo ",(0,r.kt)("inlineCode",{parentName:"p"},"Permission")," proporcionado por Laravel Permissions. Por ejemplo:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Spatie\\Permission\\Models\\Permission;\n\n$permission = Permission::create(['name' => 'crear anuncios']);\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'El c\xf3digo anterior crear\xe1 un nuevo permiso con el nombre "crear anuncios". Al igual que con los roles, puedes personalizar el nombre del permiso seg\xfan tus necesidades.')))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Asignaci\xf3n de permisos a roles:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Una vez que hayas creado los roles y permisos, puedes asignar permisos a un rol utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"givePermissionTo")," del modelo ",(0,r.kt)("inlineCode",{parentName:"li"},"Role"),". Por ejemplo:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$role->givePermissionTo('crear anuncios');\n"))),(0,r.kt)("li",{parentName:"ul"},'El c\xf3digo anterior asignar\xe1 el permiso "crear anuncios" al rol especificado.'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Asignaci\xf3n de roles a usuarios:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Para asignar un rol a un usuario, puedes utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"assignRole")," del modelo de usuario. Por ejemplo:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$user->assignRole('admin');\n"))),(0,r.kt)("li",{parentName:"ul"},'El c\xf3digo anterior asignar\xe1 el rol "admin" al usuario especificado.')))),(0,r.kt)("p",null,"Con estos pasos, habr\xe1s creado roles y permisos en tu aplicaci\xf3n utilizando Laravel Permissions. Ahora puedes asignar permisos a roles y roles a usuarios para controlar el acceso y las acciones permitidas en tu aplicaci\xf3n."),(0,r.kt)("h2",{id:"puesta-en-practica"},"Puesta en practica"),(0,r.kt)("p",null,"Vamos a crear un seeder para dar de altas nuestros roles y permisos. Desde la terminal sit\xfaese dentro de la carpeta del proyecto y teclee el siguiente comando:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan make:seeder RoleSeeder\n")),(0,r.kt)("h3",{id:"implementaci\xf3n-del-seeder"},"Implementaci\xf3n del Seeder"),(0,r.kt)("p",null,"A continuaci\xf3n edite el seeder ",(0,r.kt)("inlineCode",{parentName:"p"},"database\\seeders\\RoleSeeder.php"),", copie y pegue el siguiente c\xf3digo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse Spatie\\Permission\\Models\\Role;\nuse Spatie\\Permission\\Models\\Permission;\nuse App\\Models\\User;\n\nclass RoleSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        // Crear roles\n        $adminRole = Role::create(['name' => 'Admin']);\n        $editorRole = Role::create(['name' => 'Editor']);\n\n        // Crear permisos sobre las rutas\n        Permission::create(['name' => 'admin.home']);\n        Permission::create(['name' => 'admin.user.index']);\n        Permission::create(['name' => 'admin.user.create']);\n        Permission::create(['name' => 'admin.user.edit']);\n        Permission::create(['name' => 'admin.user.destroy']);\n        Permission::create(['name' => 'admin.categoria.index']);\n        Permission::create(['name' => 'admin.categoria.create']);\n        Permission::create(['name' => 'admin.categoria.edit']);\n        Permission::create(['name' => 'admin.categoria.destroy']);\n        Permission::create(['name' => 'admin.subcategorias.index']);\n        Permission::create(['name' => 'admin.subcategorias.create']);\n        Permission::create(['name' => 'admin.subcategorias.edit']);\n        Permission::create(['name' => 'admin.subcategorias.destroy']);\n      \n        // Asignar permisos a roles\n        $adminRole->givePermissionTo([\n            'admin.home',\n            'admin.categoria.index',\n            'admin.categoria.create',\n            'admin.categoria.edit',\n            'admin.categoria.destroy',\n            'admin.subcategorias.index',\n            'admin.subcategorias.create',\n            'admin.subcategorias.edit',\n            'admin.subcategorias.destroy',\n            'admin.user.index',\n            'admin.user.create',\n            'admin.user.edit',\n            'admin.user.destroy'\n        ]);\n\n        $editorRole->givePermissionTo([\n            'admin.home',\n            'admin.categoria.index',\n            'admin.categoria.create',\n            'admin.categoria.edit',\n            'admin.categoria.destroy',\n            'admin.subcategorias.index',\n            'admin.subcategorias.create',\n            'admin.subcategorias.edit',\n            'admin.subcategorias.destroy'\n        ]);\n\n        // Crear usuario administrador\n        $adminUser = User::create([\n            'name' => 'Admin User',\n            'email' => 'admin@example.com',\n            'password' => bcrypt('password'),\n        ]);\n\n        //Asignar Role al usuario\n        $adminUser->assignRole($adminRole);\n\n        //Crear usuario editor\n        $editorUser = User::create([\n            'name' => 'Editor User',\n            'email' => 'editor@example.com',\n            'password' => bcrypt('password'),\n        ]);\n    \n        //Asignar Role de\n        $editorUser->assignRole($editorRole);\n    }\n}\n")),(0,r.kt)("h4",{id:"qu\xe9-hace"},"\xbfQu\xe9 hace?"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Creaci\xf3n de roles"),'\nEn este bloque se crean los roles "Admin" y "Editor" utilizando la clase ',(0,r.kt)("inlineCode",{parentName:"p"},"Role")," del paquete Spatie\\Permission\\Models. Estos roles representan diferentes niveles de privilegios en el sistema."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"// Crear roles\n$adminRole = Role::create(['name' => 'Admin']);\n$editorRole = Role::create(['name' => 'Editor']);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Creaci\xf3n de permisos"),"\nEn este bloque se crean los permisos utilizando la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Permission")," del paquete Spatie\\Permission\\Models. Se definen permisos para diferentes acciones relacionadas con usuarios, categor\xedas y subcategor\xedas en el sistema de administraci\xf3n. En este caso estamos dando permisos sobre las rutas a las que usuario puede acceder."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"// Crear permisos sobre las rutas\nPermission::create(['name' => 'admin.home']);\nPermission::create(['name' => 'admin.user.index']);\nPermission::create(['name' => 'admin.user.create']);\nPermission::create(['name' => 'admin.user.edit']);\nPermission::create(['name' => 'admin.user.destroy']);\nPermission::create(['name' => 'admin.categoria.index']);\nPermission::create(['name' => 'admin.categoria.create']);\nPermission::create(['name' => 'admin.categoria.edit']);\nPermission::create(['name' => 'admin.categoria.destroy']);\nPermission::create(['name' => 'admin.subcategorias.index']);\nPermission::create(['name' => 'admin.subcategorias.create']);\nPermission::create(['name' => 'admin.subcategorias.edit']);\nPermission::create(['name' => 'admin.subcategorias.destroy']);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Asignaci\xf3n de permisos a roles"),"\nEn este bloque se asignan los permisos creados previamente a los roles. Se utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"givePermissionTo()")," para asignar m\xfaltiples permisos a cada rol. Los permisos asignados determinan las acciones y rutas que los usuarios con esos roles pueden realizar en el sistema."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"// Asignar permisos a roles\n$adminRole->givePermissionTo([\n    'admin.home',\n    'admin.categoria.index',\n    'admin.categoria.create',\n    'admin.categoria.edit',\n    'admin.categoria.destroy',\n    'admin.subcategorias.index',\n    'admin.subcategorias.create',\n    'admin.subcategorias.edit',\n    'admin.subcategorias.destroy',\n    'admin.user.index',\n    'admin.user.create',\n    'admin.user.edit',\n    'admin.user.destroy'\n]);\n\n$editorRole->givePermissionTo([\n    'admin.home',\n    'admin.categoria.index',\n    'admin.categoria.create',\n    'admin.categoria.edit',\n    'admin.categoria.destroy',\n    'admin.subcategorias.index',\n    'admin.subcategorias.create',\n    'admin.subcategorias.edit',\n    'admin.subcategorias.destroy'\n]);\n")),(0,r.kt)("p",null,"Observe como el role ",(0,r.kt)("strong",{parentName:"p"},"Editor")," carece de permisos sobre las rutas ",(0,r.kt)("strong",{parentName:"p"},"admin.users")," en comparaci\xf3n con el role ",(0,r.kt)("strong",{parentName:"p"},"Admin"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Creaci\xf3n de usuarios y asignaci\xf3n de roles"),"\nEn este bloque se crean dos usuarios utilizando la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"User"),". Se crea un usuario administrador con nombre, correo electr\xf3nico y contrase\xf1a predefinidos, y se crea un usuario editor con la misma estructura. Luego, se asignan los roles correspondientes a cada usuario utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"assignRole()"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"// Crear usuario administrador\n$adminUser = User::create([\n    'name' => 'Admin User',\n    'email' => 'admin@example.com',\n    'password' => bcrypt('password'),\n]);\n\n// Asignar Role al usuario administrador\n$adminUser->assignRole($adminRole);\n\n// Crear usuario editor\n$editorUser = User::create([\n    'name' => 'Editor User',\n    'email' => 'editor@example.com',\n    'password' => bcrypt('password'),\n]);\n\n// Asignar Role al usuario editor\n$editorUser->assignRole($editorRole);\n")),(0,r.kt)("p",null,"Este seeder crea roles, permisos y usuarios predefinidos en la base de datos, lo que te permite tener una configuraci\xf3n inicial del sistema con usuarios de diferentes roles y permisos asignados."),(0,r.kt)("h3",{id:"modificaci\xf3n-del-archivo-databaseseeder"},"Modificaci\xf3n del archivo DatabaseSeeder"),(0,r.kt)("p",null,"Modifica el archivo ",(0,r.kt)("strong",{parentName:"p"},"database/seeders/DatabaseSeeder.php")," de la siguiente manera:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        $this->call(CategoriaSeeder::class);\n        $this->call(SubcategoriaSeeder::class);\n        $this->call(ProvinciaSeeder::class);\n        $this->call(PoblacionSeeder::class);\n        $this->call(EstadoSeeder::class);\n        $this->call(RoleSeeder::class);\n        $this->call(UsersTableSeeder::class);\n        $this->call(AnuncioSeeder::class);\n   }\n}\n")),(0,r.kt)("p",null,"Con esta modificaci\xf3n, al utilizar el comando ",(0,r.kt)("inlineCode",{parentName:"p"},"'php artisan migrate:fresh --seed'"),", la base de datos se inicializar\xe1 con los roles y permisos adecuados. Si no deseas inicializar la base de datos y solo ejecutar el seeder de roles, puedes utilizar el comando ",(0,r.kt)("inlineCode",{parentName:"p"},"'php artisan db:seed --class=RoleSeeder'"),"."),(0,r.kt)("h2",{id:"directivas-blade-relacionadas"},"Directivas Blade relacionadas"),(0,r.kt)("p",null,'En Laravel, las directivas Blade relacionadas con permisos son utilizadas en conjunci\xf3n con el paquete "Laravel Permissions" de Spatie. Estas directivas permiten mostrar o ocultar contenido en funci\xf3n de los roles y permisos asignados a los usuarios. A continuaci\xf3n, te explico las directivas Blade m\xe1s comunes que se utilizan para aplicar permisos en Laravel:'),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@role('rol')"),": Esta directiva permite mostrar contenido solo si el usuario tiene el rol especificado. Por ejemplo:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},"@role('Admin')\n    \x3c!-- Contenido visible solo para usuarios con el rol \"Admin\" --\x3e\n@endrole\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@hasrole('rol')"),": Esta directiva muestra contenido si el usuario tiene el rol especificado, al igual que la directiva ",(0,r.kt)("inlineCode",{parentName:"p"},"@role"),". Sin embargo, a diferencia de ",(0,r.kt)("inlineCode",{parentName:"p"},"@role"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"@hasrole")," no admite varios roles. Por ejemplo:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},"@hasrole('Admin')\n    \x3c!-- Contenido visible solo para usuarios con el rol \"Admin\" --\x3e\n@endhasrole\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@unlessrole('rol')"),": Esta directiva muestra contenido si el usuario no tiene el rol especificado. Por ejemplo:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},"@unlessrole('Admin')\n    \x3c!-- Contenido visible para usuarios que no tienen el rol \"Admin\" --\x3e\n@endunlessrole\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@can('permiso')"),": Esta directiva muestra contenido si el usuario tiene el permiso especificado. Por ejemplo:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},"@can('admin.user.index')\n    \x3c!-- Contenido visible solo si el usuario tiene el permiso \"admin.user.index\" --\x3e\n@endcan\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@cannot('permiso')"),": Esta directiva muestra contenido si el usuario no tiene el permiso especificado. Por ejemplo:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},"@cannot('admin.user.index')\n    \x3c!-- Contenido visible si el usuario no tiene el permiso \"admin.user.index\" --\x3e\n@endcannot\n")))),(0,r.kt)("p",null,"Estas directivas Blade permiten condicionar la visualizaci\xf3n de secciones de una plantilla seg\xfan los roles y permisos del usuario. Al utilizarlas, puedes crear interfaces de usuario m\xe1s din\xe1micas y personalizadas seg\xfan los privilegios asignados a cada usuario en tu aplicaci\xf3n Laravel."),(0,r.kt)("h2",{id:"adaptando-nuestra-vistas"},"Adaptando nuestra vistas"),(0,r.kt)("h3",{id:"vistas-de-administraci\xf3n"},"Vistas de administraci\xf3n"),(0,r.kt)("p",null,"Hasta ahora, nuestro panel de administraci\xf3n es accesible para cualquier usuario registrado. Sin embargo, vamos a realizar un cambio para restringir el acceso a los usuarios con roles de ",(0,r.kt)("strong",{parentName:"p"},"editor")," o ",(0,r.kt)("strong",{parentName:"p"},"administrador")," \xfanicamente. Edite el fichero ",(0,r.kt)("strong",{parentName:"p"},"config\\adminlte.php")," y cambie la siguiente secci\xf3n:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"['header' => 'ADMINISTRACI\xd3N'],\n        [\n            'text' => 'Categor\xedas',\n            'route'  => 'admin.categoria.index',\n            'icon' => 'fas fa-fw fa-layer-group',\n            //Solo usuarios con permisos 'admin.categoria.index' (Admin y editor)\n            'can'=> 'admin.categoria.index',\n        ],\n        [\n            'text' => 'Subcategor\xedas',\n            'route'  => 'admin.subcategorias.index',\n            'icon' => 'fas fa-fw fa-folder',\n            //Solo usuarios con permisos 'admin.subcategorias.index' (Admin y editor)\n            'can'=> 'admin.subcategorias.index',\n        ],\n        ['header' => 'USUARIOS'],\n        [\n            'text'       => 'Usuarios',\n            'icon_color' => '',\n            'icon'      =>'fas fa-fw fa-user',\n            'route'        => 'admin.user.index',\n            //Solo usuarios con permisos 'admin.user.index' (Admin y editor)\n            'can'=> 'admin.user.index',\n        ],\n")),(0,r.kt)("p",null,"En el c\xf3digo proporcionado, hemos agregado la condici\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"'can' => 'permiso'")," a cada secci\xf3n del men\xfa en el panel de administraci\xf3n. Esto significa que solo los usuarios con los permisos espec\xedficos mencionados podr\xe1n acceder a esas secciones. "),(0,r.kt)("p",null,'Para las secciones de "Categor\xedas" y "Subcategor\xedas", solo los usuarios con los permisos ',(0,r.kt)("inlineCode",{parentName:"p"},"'admin.categoria.index'")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"'admin.subcategorias.index'")," respectivamente ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"(administradores y editores)")),", podr\xe1n acceder. "),(0,r.kt)("p",null,'Para la secci\xf3n de "Usuarios", solo los usuarios con el permiso ',(0,r.kt)("inlineCode",{parentName:"p"},"'admin.user.index'")," ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"(administradores)"))," podr\xe1n acceder. "),(0,r.kt)("p",null,"Esto asegurar\xe1 que solo los usuarios con los roles de administrador o editor tengan acceso a estas secciones en el panel de administraci\xf3n, y cualquier otro usuario registrado no podr\xe1 ver ni acceder a estas secciones restringidas."),(0,r.kt)("h3",{id:"men\xfa-general-de-la-aplicaci\xf3n"},"Men\xfa general de la aplicaci\xf3n"),(0,r.kt)("p",null,"Hasta ahora, solo hemos tenido acceso a nuestro panel de administraci\xf3n a trav\xe9s de la barra de navegaci\xf3n. Vamos a habilitar la opci\xf3n de ",(0,r.kt)("strong",{parentName:"p"},"Administraci\xf3n")," en el men\xfa. Para ello, debemos realizar cambios en el archivo ",(0,r.kt)("strong",{parentName:"p"},"resources\\views\\layout\\layout.blade.php"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="{{ str_replace(\'_\', \'-\', app()->getLocale()) }}">\n\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n\n    <title>Anuncios segunda mano</title>\n    \x3c!-- Otros elementos del head --\x3e\n\n    \x3c!-- Incluye los estilos de Font Awesome --\x3e\n    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.min.css"\n        integrity="sha512-rqQltXRuHxtPWhktpAZxLHUVJ3Eombn3hvk9PHjV/N5DMUYnzKPC1i3ub0mEXgFzsaZNeJcoE0YHq0j/GFsdGg=="\n        crossorigin="anonymous" referrerpolicy="no-referrer" />\n\n    \x3c!-- Incluye los estilos de Bootstrap --\x3e\n    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"\n        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">\n\n    \x3c!-- Incluye los scripts de jQuery, Popper.js y Bootstrap --\x3e\n    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"\n        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous">\n    <\/script>\n    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"\n        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous">\n    <\/script>\n    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"\n        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous">\n    <\/script>\n\n    \x3c!-- Incluye los estilos de Font Awesome (versi\xf3n 5.15.3) --\x3e\n    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">\n\n    <title>@yield(\'title\')</title>\n\n    \x3c!-- Incluye los estilos personalizados --\x3e\n    <link rel="stylesheet" href="{{ asset(\'css/anuncios.css\') }}">\n\n    @yield(\'css\')\n    \x3c!-- Incluye estilos espec\xedficos de la vista actual --\x3e\n</head>\n<main>\n    \x3c!-- Barra de navegaci\xf3n --\x3e\n    <div class="menu container-fluid fixed-top bg-white\n\n">\n        <div class="container-fluid">\n            <nav class="navbar navbar-expand-lg navbar-light bg-white">\n                <a class="navbar-brand" href="/">\n                    <img src="/images/logo.jpeg" width="60" alt="..." loading="lazy">\n                    <span class="nav-item resaltado">Anuncios segunda mano</span></a>\n                <button class="navbar-toggler" type="button" data-toggle="collapse"\n                    data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"\n                    aria-label="Toggle navigation">\n                    <span class="navbar-toggler-icon"></span>\n                </button>\n\n                <div class="collapse navbar-collapse" id="navbarSupportedContent">\n                    <ul class="navbar-nav ml-auto">\n                        <li class="nav-item active">\n                            <a class="nav-item" href="{{ route(\'home\') }}"><i class="fas fa-home"></i> Home<span\n                                    class="sr-only">(current)</span></a>\n                        </li>\n                        \x3c!-- men\xfa usuario --\x3e\n                        <li class="nav-item ml-2 dropdown">\n                            <a class="nav-item dropdown-toggle ml-2" href="#" id="navbarDropdown" role="button"\n                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                                <i class="fas fa-user-plus"></i>\n                                @if (!auth()->check())\n                                @else\n                                    {{ auth()->user()->name }}\n                                @endif\n\n                            </a>\n                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">\n                                <a class="dropdown-item" href="{{ route(\'registro\') }}">Registro</a>\n                                @if (!auth()->check())\n                                    <a class="dropdown-item" href="{{ route(\'login2\') }}">Iniciar sesi\xf3n</a>\n                                @endif\n\n                                @can(\'admin.home\')\n                                    <a class="dropdown-item" href="{{ route(\'admin.home\') }}">Administraci\xf3n</a>\n                                @endcan\n                                <div class="dropdown-divider"></div>\n                                @if (auth()->check())\n                                    <form id="logout-form" action="{{ route(\'logout\') }}" method="POST"\n                                        style="display: none;">\n                                        @csrf\n                                    </form>\n\n                                    <a class="dropdown-item" href="{{ route(\'logout\') }}"\n                                        onclick="event.preventDefault();\n                                            document.getElementById(\'logout-form\').submit();">\n                                        Logout\n                                    </a>\n                                @endif\n\n                            </div>\n                        </li>\n                        \x3c!-- men\xfa usuario --\x3e\n\n                        <li class="nav-item ml-2">\n                            <a href="{{ route(\'anuncios.create\') }}"><i class="far fa-file-alt"></i> Publicar\n                                anuncio</a>\n                        </li>\n\n                    </ul>\n\n                </div>\n            </nav>\n        </div>\n\n    </div>\n\n    @yield(\'content\')\n    \x3c!-- Contenido espec\xedfico de cada vista --\x3e\n    \n    @yield(\'js\')\n    <footer>\n        <div class="container-fluid text-center mt-4 bg-dark">\n            <div class="container mx-auto bg-dark">\n                <br/>\n            <h6 class="text-white text-center mt-4">Copyrigth &copy; Jes\xfas Quintana Esquiliche\n                \n            </h6>\n            <br/>\n            </div>\n            \n        </div>\n    </footer>\n    \n\n</main>\n\n</html>\n')),(0,r.kt)("p",null,"En la secci\xf3n del men\xfa de usuario, se encuentra la configuraci\xf3n de roles y permisos de la aplicaci\xf3n."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- men\xfa usuario --\x3e\n<li class="nav-item ml-2 dropdown">\n    <a class="nav-item dropdown-toggle ml-2" href="#" id="navbarDropdown" role="button"\n        data\n\n-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n        <i class="fas fa-user-plus"></i>\n        @guest\n        @else\n            {{ auth()->user()->name }}\n        @endguest\n    </a>\n    <div class="dropdown-menu" aria-labelledby="navbarDropdown">\n        <a class="dropdown-item" href="{{ route(\'registro\') }}">Registro</a>\n        @guest\n            <a class="dropdown-item" href="{{ route(\'login2\') }}">Iniciar sesi\xf3n</a>\n        @endguest\n        @can(\'admin.home\')\n            <a class="dropdown-item" href="{{ route(\'admin.home\') }}">Administraci\xf3n</a>\n        @endcan\n        <div class="dropdown-divider"></div>\n        @auth\n            <form id="logout-form" action="{{ route(\'logout\') }}" method="POST" style="display: none;">\n                @csrf\n            </form>\n            <a class="dropdown-item" href="{{ route(\'logout\') }}"\n                onclick="event.preventDefault(); document.getElementById(\'logout-form\').submit();">\n                Logout\n            </a>\n        @endauth\n    </div>\n</li>\n\x3c!-- men\xfa usuario --\x3e\n')),(0,r.kt)("h4",{id:"qu\xe9-hace-1"},"\xbfQu\xe9 hace?"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Si el usuario no est\xe1 autenticado (es un invitado), se muestra un enlace para registrarse y otro para iniciar sesi\xf3n.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<a class="dropdown-item" href="{{ route(\'registro\') }}">Registro</a> \x3c!-- Enlace para registrarse --\x3e\n@guest \x3c!-- Comprueba si el usuario es un invitado --\x3e\n    <a class="dropdown-item" href="{{ route(\'login2\') }}">Iniciar sesi\xf3n</a> \x3c!-- Enlace para iniciar sesi\xf3n --\x3e\n@endguest\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Si el usuario est\xe1 autenticado, se muestra su nombre.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"@else\n    {{ auth()->user()->name }} \x3c!-- Muestra el nombre del usuario autenticado --\x3e\n@endif\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Si el usuario tiene permisos de administrador o editor, se muestra un enlace para acceder a la secci\xf3n de administraci\xf3n.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"@can('admin.home') \x3c!-- Comprueba si el usuario tiene permisos de administrador o editor --\x3e\n    <a class=\"dropdown-item\" href=\"{{ route('admin.home') }}\">Administraci\xf3n</a> \x3c!-- Enlace para acceder a la secci\xf3n de administraci\xf3n --\x3e\n@endcan\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Se incluye una l\xednea divisoria en el men\xfa desplegable.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<div class="dropdown-divider"></div> \x3c!-- L\xednea divisoria en el men\xfa desplegable --\x3e\n')),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Si el usuario est\xe1 autenticado, se muestra un enlace para cerrar sesi\xf3n.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'@auth \x3c!-- Comprueba si el usuario est\xe1 autenticado --\x3e\n    <form id="logout-form" action="{{ route(\'logout\') }}" method="POST" style="display: none;"> \x3c!-- Formulario para cerrar sesi\xf3n --\x3e\n        @csrf\n    </form>\n    <a class="dropdown-item" href="{{ route(\'logout\') }}" onclick="event.preventDefault(); document.getElementById(\'logout-form\').submit();">\n        Logout \x3c!-- Enlace para cerrar sesi\xf3n --\x3e\n    </a>\n@endauth\n')),(0,r.kt)("h2",{id:"vistas-de-administraci\xf3n-de-usuarios"},"Vistas de administraci\xf3n de Usuarios"),(0,r.kt)("p",null,"En esta secci\xf3n veremos como implementar las vistas, controladores, etc para poder asignar o desactivar roles a nuestros usurarios. Para ello estudiaremos la vistas general ",(0,r.kt)("strong",{parentName:"p"},"admin.users.index")," y ",(0,r.kt)("strong",{parentName:"p"},"admin.users.edit"),"."),(0,r.kt)("h3",{id:"creaci\xf3n-del-controlador"},"Creaci\xf3n del controlador"),(0,r.kt)("p",null,"Dentro de la carpeta de su proyecto, desde la terminal teclee el siguiente comando:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan make:controller Admin\\UserController\n")),(0,r.kt)("p",null,"Dir\xedjase al controlador creado, edite y copie el siguiente c\xf3digo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Spatie\\Permission\\Models\\Role;\n\nclass UserController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index()\n    {\n        // Obtiene todos los usuarios de la base de datos\n        $users = User::all();\n\n        // Retorna la vista 'admin.users.index' y pasa la variable $users a la vista\n        return view('admin.users.index', compact('users'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n        // No implementado\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        // No implementado\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  \\App\\Models\\User  $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(User $user)\n    {\n        // No implementado\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param  \\App\\Models\\User  $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(User $user)\n    {\n        // Obtiene todos los roles de la base de datos\n        $roles = Role::all();\n\n        // Retorna la vista 'admin.users.edit' y pasa las variables $user y $roles a la vista\n        return view('admin.users.edit', compact('user', 'roles'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\App\\Models\\User  $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, User $user)\n    {\n        // Obtiene los roles seleccionados del formulario\n        $roles = $request->roles;\n\n        // Asigna los roles al usuario\n        $user->syncRoles($roles);\n\n        // Guarda los cambios en la base de datos\n        $user->save();\n\n        // Redirige al usuario a la p\xe1gina de \xedndice de usuarios con un mensaje de \xe9xito\n        return redirect()->route('admin.user.index')->with('success', 'Usuario actualizado correctamente');\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  \\App\\Models\\User  $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(User $user)\n    {\n        // No implementado\n    }\n}\n")),(0,r.kt)("h4",{id:"qu\xe9-hace-2"},"\xbfQu\xe9 hace?"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"index()")," muestra una lista de usuarios obtenidos de la base de datos. Obtiene todos los usuarios utilizando el modelo ",(0,r.kt)("inlineCode",{parentName:"li"},"User")," y pasa la variable ",(0,r.kt)("inlineCode",{parentName:"li"},"$users")," a la vista 'admin.users.index'.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$users = User::all();\nreturn view('admin.users.index', compact('users'));\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"edit()")," muestra el formulario de edici\xf3n de un usuario espec\xedfico. Obtiene todos los roles de la base de datos utilizando el modelo ",(0,r.kt)("inlineCode",{parentName:"li"},"Role")," y pasa las variables ",(0,r.kt)("inlineCode",{parentName:"li"},"$user")," y ",(0,r.kt)("inlineCode",{parentName:"li"},"$roles")," a la vista 'admin.users.edit'.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$roles = Role::all();\nreturn view('admin.users.edit', compact('user', 'roles'));\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"update()")," actualiza los roles de un usuario espec\xedfico seg\xfan los roles seleccionados en el formulario. Obtiene los roles seleccionados del formulario, asigna los roles al usuario utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"syncRoles()")," y guarda los cambios en la base de datos. Luego, redirige al usuario a la p\xe1gina de \xedndice de usuarios con un mensaje de \xe9xito.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$roles = $request->roles;\n$user->syncRoles($roles);\n$user->save();\nreturn redirect()->route('admin.user.index')->with('success', 'Usuario actualizado correctamente');\n")),(0,r.kt)("p",null,"En el fichero de rutas ",(0,r.kt)("strong",{parentName:"p"},"admin.php")," cree la siguiente ruta:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"Route::resource(\"/users\",UserController::class)->names('admin.user');\n")),(0,r.kt)("h3",{id:"creaci\xf3n-de-la-vista-de-lista-de-usuarios"},"Creaci\xf3n de la vista de Lista de usuarios"),(0,r.kt)("p",null,"En esta secci\xf3n estudiaremos como implementar nuestra lista de usuarios. Para nuestra\nde vistas de administraci\xf3n de usuarios crearemos la carpeta ",(0,r.kt)("strong",{parentName:"p"},"resources\\views\\admin\\users"),". Sit\xfaese en la carpeta y cree la vista ",(0,r.kt)("strong",{parentName:"p"},"index.blade.php"),", a continuaci\xf3n edite y copie el siguiente c\xf3digo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'@extends(\'adminlte::page\')\n\n@section(\'title\', \'Lista de Usuarios\')\n\n@section(\'content_header\')\n    <h1>Lista de Usuarios</h1>\n@stop\n\n@section(\'content\')\n\x3c!-- Muestra mensajes de \xe9xito de vistas auxiliares, como la vista de edici\xf3n --\x3e\n@if(session(\'success\'))\n        <div class="alert alert-success alert-dismissible fade show" role="alert">\n            {{ session(\'success\') }}\n            <button type="button" class="close" data-dismiss="alert" aria-label="Cerrar">\n                <span aria-hidden="true">&times;</span>\n            </button>\n        </div>\n    @endif\n    <div class="card">\n        <div class="card-header">\n            <h3 class="card-title">Usuarios</h3>\n        </div>\n        \n        <div class="card-body">\n            \x3c!-- Creamos una tabla para mostrar la lista de usuarios --\x3e\n            <table id="users-table" class="table table-bordered table-hover">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Nombre</th>\n                        <th>Email</th>\n                        <th>Fecha de Creaci\xf3n</th>\n                        <th>Acciones</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \x3c!-- Para cada usuario --\x3e\n                    @foreach($users as $user)\n                    <tr>\n                        \x3c!-- Mostrar el id --\x3e\n                        <td><b>{{ $user->id }}</b></td>\n                        \x3c!-- Mostrar el nombre --\x3e\n                        <td><b>{{ $user->name }}</b></td>\n                        \x3c!-- Mostrar el email --\x3e\n                        <td>{{ $user->email }}</td>\n                         \x3c!-- Mostrar fecha de creaci\xf3n --\x3e\n                        <td>{{ $user->created_at }}</td>\n                        <td>\n                            \x3c!-- Enlace a la vista de edici\xf3n --\x3e\n                            <a href="{{ route(\'admin.user.edit\', $user->id) }}" class="btn btn-primary btn-sm">Editar</a>\n                        </td>\n                    </tr>\n                    @endforeach\n                </tbody>\n            </table>\n        </div>\n        \n    </div>\n    \n@stop\n\n@section(\'css\')\n    \x3c!-- Estilos de DataTables --\x3e\n    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.22/css/dataTables.bootstrap4.min.css">\n@stop\n\n@section(\'js\')\n    <script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"><\/script>\n    <script src="https://cdn.datatables.net/1.10.22/js/dataTables.bootstrap4.min.js"><\/script>\n    <script>\n        $(document).ready(function() {\n            // Inicializaci\xf3n de DataTables\n            $(\'#users-table\').DataTable({\n                "paging": true,\n                "lengthChange": false,\n                "searching": true,\n                "ordering": true,\n                "info": true,\n                "autoWidth": false,\n                "responsive": true,\n                "language": {\n                    "url": "//cdn.datatables.net/plug-ins/1.10.22/i18n/Spanish.json"\n                }\n            });\n        });\n    <\/script>\n@stop\n')),(0,r.kt)("p",null,"En esta vista hemos introducido un componente nuevo de bootstrap,\nlos datatables."),(0,r.kt)("h3",{id:"qu\xe9-es-un-datatable"},"\xbfQu\xe9 es un datatable?"),(0,r.kt)("p",null,"DataTables es una biblioteca de JavaScript que proporciona una funcionalidad avanzada para la manipulaci\xf3n y presentaci\xf3n de tablas de datos en p\xe1ginas web. Est\xe1 dise\xf1ada para trabajar con HTML, CSS y JavaScript, y es compatible con varios frameworks y bibliotecas populares, incluido Bootstrap."),(0,r.kt)("p",null,"DataTables ofrece caracter\xedsticas como ordenamiento de columnas, filtrado de datos, paginaci\xf3n, b\xfasqueda r\xe1pida, exportaci\xf3n de datos, manipulaci\xf3n de eventos, entre otros. Estas caracter\xedsticas permiten al usuario interactuar con los datos de la tabla de una manera m\xe1s eficiente y c\xf3moda."),(0,r.kt)("p",null,"Otro aspecto importante es que no requiere recargar la pag\xedna para efectuar estas\noperaciones."),(0,r.kt)("p",null,"Al utilizar DataTables junto con Bootstrap, se obtiene una combinaci\xf3n poderosa para la creaci\xf3n de tablas interactivas y receptivas en aplicaciones web. Bootstrap proporciona un conjunto de estilos CSS y componentes predefinidos que se pueden aplicar a las tablas generadas por DataTables, lo que les da un aspecto visual atractivo y coherente con el resto de la interfaz de usuario."),(0,r.kt)("p",null,"Adem\xe1s, DataTables es altamente personalizable y extensible, lo que significa que se puede adaptar a diferentes requisitos y necesidades espec\xedficas de cada proyecto. Proporciona una API rica que permite controlar y manipular los datos y la apariencia de la tabla de manera program\xe1tica."),(0,r.kt)("p",null,"DataTables en Bootstrap es una combinaci\xf3n de la biblioteca DataTables y el framework Bootstrap, que permite crear tablas interactivas y receptivas en aplicaciones web, con caracter\xedsticas avanzadas de manipulaci\xf3n y presentaci\xf3n de datos."),(0,r.kt)("h4",{id:"qu\xe9-hace-el-c\xf3digo-javascript"},"\xbfQu\xe9 hace el c\xf3digo JavaScript"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'@section(\'js\')\n    <script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"><\/script>\n    <script src="https://cdn.datatables.net/1.10.22/js/dataTables.bootstrap4.min.js"><\/script>\n    <script>\n        $(document).ready(function() {\n            // Inicializaci\xf3n de DataTables\n            $(\'#users-table\').DataTable({\n                "paging": true,\n                "lengthChange": false,\n                "searching": true,\n                "ordering": true,\n                "info": true,\n                "autoWidth": false,\n                "responsive": true,\n                "language": {\n                    "url": "//cdn.datatables.net/plug-ins/1.10.22/i18n/Spanish.json"\n                }\n            });\n        });\n    <\/script>\n@stop\n')),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Las l\xedneas de c\xf3digo ",(0,r.kt)("inlineCode",{parentName:"p"},'<script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"><\/script>')," y ",(0,r.kt)("inlineCode",{parentName:"p"},'<script src="https://cdn.datatables.net/1.10.22/js/dataTables.bootstrap4.min.js"><\/script>')," importan los archivos JavaScript necesarios de DataTables desde un CDN (Content Delivery Network). Estos archivos contienen las funciones y caracter\xedsticas de DataTables que se utilizar\xe1n en la p\xe1gina.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"La funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"$(document).ready(function() { ... });")," indica que el c\xf3digo JavaScript dentro de ella se ejecutar\xe1 una vez que el documento HTML haya sido completamente cargado y est\xe9 listo para ser manipulado.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"$('#users-table').DataTable({ ... });")," selecciona el elemento HTML con el identificador ",(0,r.kt)("inlineCode",{parentName:"p"},"users-table")," y lo convierte en una tabla con funcionalidad DataTables. Los par\xe1metros entre llaves ",(0,r.kt)("inlineCode",{parentName:"p"},"{ ... }")," especifican las opciones de configuraci\xf3n para DataTables.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Los par\xe1metros de configuraci\xf3n especificados en el c\xf3digo son los siguientes:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"paging": true')," habilita la paginaci\xf3n de la tabla."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"lengthChange": true')," activa la opci\xf3n de cambiar el n\xfamero de registros mostrados por p\xe1gina."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"searching": true')," habilita la funcionalidad de b\xfasqueda en la tabla."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"ordering": true')," habilita la ordenaci\xf3n de columnas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"info": true')," muestra informaci\xf3n sobre el n\xfamero de registros y p\xe1ginas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"autoWidth": false')," desactiva el ajuste autom\xe1tico del ancho de las columnas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"responsive": true')," habilita la funcionalidad de dise\xf1o responsive para adaptar la tabla a diferentes dispositivos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"language": { "url": "//cdn.datatables.net/plug-ins/1.10.22/i18n/Spanish.json" }')," especifica el archivo de idioma a utilizar para mostrar los textos en espa\xf1ol. En este caso, se utiliza un archivo JSON proporcionado por DataTables.")))),(0,r.kt)("p",null,"En resumen, este c\xf3digo inicializa y configura una tabla utilizando DataTables. Proporciona funcionalidades como paginaci\xf3n, b\xfasqueda, ordenamiento y dise\xf1o responsive, y utiliza el idioma espa\xf1ol para los textos de la tabla."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Lista de usuarios",src:n(4190).Z,width:"1366",height:"930"})),(0,r.kt)("h3",{id:"creaci\xf3n-de-la-vista-de-edici\xf3n-de-usuarios"},"Creaci\xf3n de la vista de Edici\xf3n de usuarios"),(0,r.kt)("p",null,"A continuaci\xf3n vamos a crear nuestra vista de edici\xf3n de usuarios. donde podremos\ndarles los roles de administrador o editor. Esta vista es accesible desde la lista de usuarios a traves del bot\xf3n de editar."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Editar usuario",src:n(8128).Z,width:"1366",height:"649"})),(0,r.kt)("p",null,"Antes que nada recordemos que hacia el m\xe9todo edit del controlador ",(0,r.kt)("strong",{parentName:"p"},"app\\Http\\Controllers\\Admin\\UserController.php"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"  public function edit(User $user)\n    {\n        // Obtiene todos los roles de la base de datos\n        $roles = Role::all();\n\n        // Retorna la vista 'admin.users.edit' y pasa las variables $user y $roles a la vista\n        return view('admin.users.edit', compact('user', 'roles'));\n    }\n")),(0,r.kt)("p",null,"Cree la siguiente vista ",(0,r.kt)("strong",{parentName:"p"},"resources\\views\\admin\\users\\edit.blade.php"),",\neditela y copie el siguiente c\xf3digo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"@extends('adminlte::page')\n\n@section('title', 'Lista de Usuarios')\n\n@section('content_header')\n    <h1>Editar usuario</h1>\n@stop\n\n@section('content')\n    <div class=\"card p-4 col-md-12\">\n    \x3c!-- Mostramos el nombre del usuario --\x3e\n        <h5>Nombre</h5>\n        <p class=\"form-control\">{{$user->name}}</p>\n\n        {!! Form::open(['route' => ['admin.user.update', $user->id], 'method' => 'PUT']) !!}\n        \x3c!-- Listamos todos los roles disponibles para el usuario --\x3e\n        <h5>Roles</h5>\n        \x3c!-- Para cada role --\x3e\n        @foreach($roles as $role)\n            <div class=\"form-check\">\n             \x3c!-- Crear checkbox --\x3e\n                {{ Form::checkbox('roles[]', $role->id, $user->roles->pluck('id')->contains($role->id), ['class' => 'form-check-input', 'id' => 'role-' . $role->id]) }}\n                {{ Form::label('role-' . $role->id, $role->name, ['class' => 'form-check-label ml-1']) }}\n            </div>\n        @endforeach\n\n        {{ Form::submit('Asignar roles', ['class' => 'btn btn-primary mt-3']) }}\n        {!! Form::close() !!}\n    </div>\n@stop\n")),(0,r.kt)("h3",{id:"qu\xe9-hace-3"},"\xbfQu\xe9 hace?"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@extends('adminlte::page')"),": Esta l\xednea indica que la vista extiende la plantilla 'adminlte::page', que proporciona la estructura y los estilos comunes para las p\xe1ginas de administraci\xf3n en el tema AdminLTE.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@section('title', 'Lista de Usuarios')"),": Esta l\xednea define la secci\xf3n 'title' y establece su valor como 'Lista de Usuarios'. Esta secci\xf3n se utiliza para mostrar el t\xedtulo de la p\xe1gina en la pesta\xf1a del navegador.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@section('content_header')"),": Esta l\xednea define la secci\xf3n 'content_header', que se utiliza para mostrar el encabezado del contenido de la p\xe1gina. En este caso, se muestra 'Editar usuario' como encabezado.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@section('content')"),": Esta l\xednea define la secci\xf3n 'content', que contiene el contenido principal de la p\xe1gina.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},'<div class="card p-4 col-md-12">'),": Se crea un contenedor con la clase 'card', que proporciona un estilo de tarjeta. La clase 'p-4' agrega un espacio interno de 4 unidades y la clase 'col-md-12' define que el contenedor ocupe 12 columnas en dispositivos medianos.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"<h5>Nombre</h5>"),': Se muestra un encabezado de nivel 5 con el texto "Nombre".')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},'<p class="form-control">{{$user->name}}</p>'),": Se muestra un p\xe1rrafo con la clase 'form-control', que aplica estilos espec\xedficos. Dentro del p\xe1rrafo se muestra el nombre del usuario, que se obtiene de la variable ",(0,r.kt)("inlineCode",{parentName:"p"},"$user->name"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{!! Form::open(['route' => ['admin.user.update', $user->id], 'method' => 'PUT']) !!}"),": Se abre un formulario que utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"PUT")," y la ruta 'admin.user.update' para enviar los datos al servidor.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"<h5>Roles</h5>"),': Se muestra un encabezado de nivel 5 con el texto "Roles".')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"@foreach($roles as $role)"),": Se inicia un bucle que itera sobre la variable ",(0,r.kt)("inlineCode",{parentName:"p"},"$roles"),", donde cada iteraci\xf3n representa un rol disponible.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},'<div class="form-check">'),": Se crea un contenedor con la clase 'form-check', que proporciona estilos para elementos de casilla de verificaci\xf3n.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{{ Form::checkbox('roles[]', $role->id, $user->roles->pluck('id')->contains($role->id), ['class' => 'form-check-input', 'id' => 'role-' . $role->id]) }}"),": Se genera una casilla de verificaci\xf3n utilizando el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"Form::checkbox()"),". El primer par\xe1metro es el nombre del campo de la casilla de verificaci\xf3n ('roles[]' indica que es un array). El segundo par\xe1metro es el valor de la casilla, que es el ID del rol actual. El tercer par\xe1metro determina si la casilla debe estar marcada o no, verificando si el ID del rol actual est\xe1 presente en la colecci\xf3n de roles asignados al usuario. El cuarto par\xe1metro es un array de atributos adicionales para la casilla de verificaci\xf3n.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{{ Form::label('role-' . $role->id, $role->name, ['class' => 'form-check-label ml-1']) }}"),": Se genera una etiqueta para la casilla de verificaci\xf3n, donde el primer par"))),(0,r.kt)("p",null,"\xe1metro es el ID \xfanico de la etiqueta, el segundo par\xe1metro es el texto de la etiqueta (nombre del rol) y el tercer par\xe1metro es un array de atributos adicionales."),(0,r.kt)("ol",{start:14},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{{ Form::submit('Asignar roles', ['class' => 'btn btn-primary mt-3']) }}"),": Se genera un bot\xf3n de env\xedo con el texto \"Asignar roles\" y la clase 'btn btn-primary' para darle estilo.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{!! Form::close() !!}"),": Se cierra el formulario."))),(0,r.kt)("p",null,"En resumen, este c\xf3digo define una p\xe1gina de edici\xf3n de usuarios que muestra el nombre del usuario, una lista de roles disponibles y un formulario para asignar roles. Cada rol se muestra como una casilla de verificaci\xf3n y se puede marcar o desmarcar seg\xfan los roles asignados al usuario. Al enviar el formulario, se actualizan los roles del usuario."))}u.isMDXComponent=!0},4190:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/datatable-bf9da6059d44ccaaf648fe029ce1a442.png"},8128:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/editar_usuario-02b118d24ba1c4c4b1ded3577b140942.png"}}]);